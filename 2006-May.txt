From nobody at sheep.berlios.de  Mon May  1 10:57:56 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Mon, 1 May 2006 10:57:56 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/test/resources/processes SubProcessMiddle.acgwfd.xml,NONE,1.1 SubProcessReturnTop.acgwfd.xml,NONE,1.1 SubProcessBottom.acgwfd.xml,NONE,1.1
Message-ID: <200605010857.k418vtt20459@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/resources/processes
In directory sheep:/tmp/cvs-serv4285/src/test/resources/processes

Added Files:
	SubProcessMiddle.acgwfd.xml SubProcessReturnTop.acgwfd.xml 
	SubProcessBottom.acgwfd.xml 
Log Message:


--- NEW FILE: SubProcessMiddle.acgwfd.xml ---
<ACGWFDNative Version="3.0"><ProcessVersions><ProcessVersion VersionID="1"><ProcessDef ProcessTemplate="Zebra"><properties name="(General)"><property locked="-1" name="Name" value="SubProcessMiddle" type="string"/></properties><TaskDefs/><RoutingDefs/></ProcessDef></ProcessVersion><ProcessVersion VersionID="2"><ProcessDef FirstTask="1" ProcessTemplate="Zebra"><properties name="(General)"><property locked="-1" name="Name" value="SubProcessMiddle" type="string"/><property locked="-1" name="Class Destruct" value="com.anite.zebra.hivemind.lifecycle.ProcessDestruct" type="string"/><property locked="-1" name="Class Construct" value="com.anite.zebra.hivemind.lifecycle.ProcessConstruct" type="string"/></properties><properties name="Visibility"><property locked="0" name="DebugFlow" value="Yes" type="boolean"/><property locked="0" name="Display Name" value="" type="string"/></properties><properties name="Security"><property locked="0" name="Process Start Permissions" value="systemAccess;" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/><TaskDefs><TaskDef GUID="1" Height="1440" Left="2115" Top="2175" Width="2340" TaskTemplate="Null"><properties name="(General)"><property locked="0" name="Name" value="Null" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties></TaskDef><TaskDef GUID="2" Height="1440" Left="3000" Top="4470" Width="2340" Tas
kTemplate="SubProcess"><properties name="(General)"><property locked="0" name="Name" value="SubProcess" type="string"/><property locked="-1" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="com.anite.zebra.hivemind.taskAction.SubProcess" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="SubProcess"><property locked="0" name="Process Name" value="" type="file"/><property locked="0" name="Push Outputs" value="Yes" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/></TaskDef><TaskDef GUID="3" Height="1440" Left="4260" Top="7605" Width="2340" TaskTemplate="Null"><properties name="(General)"><property locked="0" name="Name" value="Null" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties></TaskDef></TaskDefs><RoutingDefs><RoutingDef GUID="4" TaskDestGUID="2" TaskOrgGUID="1"><Points><Point X="4140" Y="4470"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="s
tring"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef><RoutingDef GUID="5" TaskDestGUID="3" TaskOrgGUID="2"><Points><Point X="5130" Y="7605"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef></RoutingDefs></ProcessDef></ProcessVersion><ProcessVersion VersionID="3"><ProcessDef FirstTask="1" ProcessTemplate="Zebra"><properties name="(General)"><property locked="-1" name="Name" value="SubProcessMiddle" type="string"/><property locked="-1" name="Class Destruct" value="com.anite.zebra.hivemind.lifecycle.ProcessDestruct" type="string"/><property locked="-1" name="Class Construct" value="com.anite.zebra.hivemind.lifecycle.ProcessConstruct" type="string"/></properties><properties name="Visibility"><property locked="0" name="DebugFlow" value="Yes" type="boolean"/><property locked="0" name="Display Name" value="" type="string"/></properties><properties name="Security"><property locked="0" name="Process Start Permissions" value="systemAccess;" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/><TaskDefs><TaskDef GUID="1" Height="1440" Left="2115" Top="2175" Width="2340" TaskTemplate="Null"><properties name="(General)"><property locked="0" name="Name" value="Null" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locke
d="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties></TaskDef><TaskDef GUID="2" Height="1440" Left="3000" Top="4470" Width="2340" TaskTemplate="SubProcess"><properties name="(General)"><property locked="0" name="Name" value="SubProcess" type="string"/><property locked="-1" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="com.anite.zebra.hivemind.taskAction.SubProcess" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="SubProcess"><property locked="0" name="Process Name" value="SubProcessBottom" type="file"/><property locked="0" name="Push Outputs" value="Yes" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/></TaskDef><TaskDef GUID="3" Height="1440" Left="4260" Top="7605" Width="2340" TaskTemplate="Null"><properties name="(General)"><property locked="0" name="Name" value="Null" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="sy
stemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties></TaskDef></TaskDefs><RoutingDefs><RoutingDef GUID="4" TaskDestGUID="2" TaskOrgGUID="1"><Points><Point X="4140" Y="4470"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef><RoutingDef GUID="5" TaskDestGUID="3" TaskOrgGUID="2"><Points><Point X="5130" Y="7605"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef></RoutingDefs></ProcessDef></ProcessVersion><ProcessVersion VersionID="4"><ProcessDef FirstTask="1" ProcessTemplate="Zebra"><properties name="(General)"><property locked="-1" name="Name" value="SubProcessMiddle" type="string"/><property locked="-1" name="Class Destruct" value="com.anite.zebra.hivemind.lifecycle.ProcessDestruct" type="string"/><property locked="-1" name="Class Construct" value="com.anite.zebra.hivemind.lifecycle.ProcessConstruct" type="string"/></properties><properties name="Visibility"><property locked="0" name="DebugFlow" value="Yes" type="boolean"/><property locked="0" name="Display Name" value="" type="string"/></properties><properties name="Security"><property locked="0" name="Process Start Permissions" value="systemAccess;" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/><TaskDefs><TaskDef GUID="1" Height="1440" Left="2115" Top="2175" Width="2340" TaskTemplate="Null"><properties name="(General)"><
property locked="0" name="Name" value="Middle Start" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties></TaskDef><TaskDef GUID="2" Height="1440" Left="3000" Top="4470" Width="2340" TaskTemplate="SubProcess"><properties name="(General)"><property locked="0" name="Name" value="SubProcess" type="string"/><property locked="-1" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="com.anite.zebra.hivemind.taskAction.SubProcess" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="SubProcess"><property locked="0" name="Process Name" value="SubProcessBottom" type="file"/><property locked="0" name="Push Outputs" value="Yes" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/></TaskDef><TaskDef GUID="3" Height="1440" Left="4260" Top="7605" Width="2340" TaskTemplate="Null"><properties name="(General)"><property locked="0" name="Name" value="Middle ENd" type="string"/><property locked="0" name="Synchronise
" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties></TaskDef></TaskDefs><RoutingDefs><RoutingDef GUID="4" TaskDestGUID="2" TaskOrgGUID="1"><Points><Point X="4140" Y="4470"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef><RoutingDef GUID="5" TaskDestGUID="3" TaskOrgGUID="2"><Points><Point X="5130" Y="7605"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef></RoutingDefs></ProcessDef></ProcessVersion><ProcessVersion VersionID="5"><ProcessDef FirstTask="1" ProcessTemplate="Zebra"><properties name="(General)"><property locked="-1" name="Name" value="SubProcessMiddle" type="string"/><property locked="-1" name="Class Destruct" value="com.anite.zebra.hivemind.lifecycle.ProcessDestruct" type="string"/><property locked="-1" name="Class Construct" value="com.anite.zebra.hivemind.lifecycle.ProcessConstruct" type="string"/></properties><properties name="Visibility"><property locked="0" name="DebugFlow" value="Yes" type="boolean"/><property locked="0" name="Display Name" value="" type="string"/
></properties><properties name="Security"><property locked="0" name="Process Start Permissions" value="systemAccess;" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/><TaskDefs><TaskDef GUID="1" Height="1440" Left="2115" Top="2175" Width="2340" TaskTemplate="Null"><properties name="(General)"><property locked="0" name="Name" value="Middle Start" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties></TaskDef><TaskDef GUID="2" Height="1440" Left="3000" Top="4470" Width="2340" TaskTemplate="SubProcess"><properties name="(General)"><property locked="0" name="Name" value="SubProcess" type="string"/><property locked="-1" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="com.anite.zebra.hivemind.taskAction.SubProcess" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="SubProcess"><property locked="0" name="Process Name" value="SubProcessBottom" type="file"/><property locked="0" name="Push Outputs" value="Yes" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permis
sions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/></TaskDef><TaskDef GUID="3" Height="1440" Left="4260" Top="7605" Width="2340" TaskTemplate="Null"><properties name="(General)"><property locked="0" name="Name" value="Middle ENd" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties></TaskDef></TaskDefs><RoutingDefs><RoutingDef GUID="4" TaskDestGUID="2" TaskOrgGUID="1"><Points><Point X="4140" Y="4470"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef><RoutingDef GUID="5" TaskDestGUID="3" TaskOrgGUID="2"><Points><Point X="5130" Y="7605"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef></RoutingDefs></ProcessDef></ProcessVersion></ProcessVersions></ACGWFDNative>

--- NEW FILE: SubProcessReturnTop.acgwfd.xml ---
<ACGWFDNative Version="3.0"><ProcessVersions><ProcessVersion VersionID="1"><ProcessDef ProcessTemplate="Zebra"><properties name="(General)"><property locked="-1" name="Name" value="SubProcessReturnTop" type="string"/></properties><TaskDefs/><RoutingDefs/></ProcessDef></ProcessVersion><ProcessVersion VersionID="2"><ProcessDef FirstTask="1" ProcessTemplate="Zebra"><properties name="(General)"><property locked="-1" name="Name" value="SubProcessReturnTop" type="string"/><property locked="-1" name="Class Destruct" value="com.anite.zebra.hivemind.lifecycle.ProcessDestruct" type="string"/><property locked="-1" name="Class Construct" value="com.anite.zebra.hivemind.lifecycle.ProcessConstruct" type="string"/></properties><properties name="Visibility"><property locked="0" name="DebugFlow" value="Yes" type="boolean"/><property locked="0" name="Display Name" value="" type="string"/></properties><properties name="Security"><property locked="0" name="Process Start Permissions" value="systemAccess;" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/><TaskDefs><TaskDef GUID="1" Height="1440" Left="1365" Top="510" Width="2340" TaskTemplate="Null"><properties name="(General)"><property locked="0" name="Name" value="Null" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties></TaskDef><TaskDef GUID="2" Height="1440" Left="1335" Top="2730" Width="2340
" TaskTemplate="SubProcess"><properties name="(General)"><property locked="0" name="Name" value="Run Middle" type="string"/><property locked="-1" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="com.anite.zebra.hivemind.taskAction.SubProcess" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="SubProcess"><property locked="0" name="Process Name" value="SubProcessMiddle" type="file"/><property locked="0" name="Push Outputs" value="Yes" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/></TaskDef><TaskDef GUID="3" Height="1440" Left="1365" Top="4995" Width="2340" TaskTemplate="Null"><properties name="(General)"><property locked="0" name="Name" value="Null" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties></TaskDef></TaskDefs><RoutingDefs><RoutingDef GUID="4" TaskDestGUID="2" TaskOrgGUID="1"><Points><Point X="2280" Y="2730"/></Points><properties name="(General)"><property locked="0" name="N
ame" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef><RoutingDef GUID="5" TaskDestGUID="3" TaskOrgGUID="2"><Points><Point X="2355" Y="4995"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef></RoutingDefs></ProcessDef></ProcessVersion><ProcessVersion VersionID="3"><ProcessDef FirstTask="1" ProcessTemplate="Zebra"><properties name="(General)"><property locked="-1" name="Name" value="SubProcessReturnTop" type="string"/><property locked="-1" name="Class Destruct" value="com.anite.zebra.hivemind.lifecycle.ProcessDestruct" type="string"/><property locked="-1" name="Class Construct" value="com.anite.zebra.hivemind.lifecycle.ProcessConstruct" type="string"/></properties><properties name="Visibility"><property locked="0" name="DebugFlow" value="Yes" type="boolean"/><property locked="0" name="Display Name" value="" type="string"/></properties><properties name="Security"><property locked="0" name="Process Start Permissions" value="systemAccess;" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/><TaskDefs><TaskDef GUID="1" Height="1440" Left="1365" Top="510" Width="2340" TaskTemplate="Null"><properties name="(General)"><property locked="0" name="Name" value="Top Start" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task 
Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties></TaskDef><TaskDef GUID="2" Height="1440" Left="1335" Top="2730" Width="2340" TaskTemplate="SubProcess"><properties name="(General)"><property locked="0" name="Name" value="Run Middle" type="string"/><property locked="-1" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="com.anite.zebra.hivemind.taskAction.SubProcess" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="SubProcess"><property locked="0" name="Process Name" value="SubProcessMiddle" type="file"/><property locked="0" name="Push Outputs" value="Yes" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/></TaskDef><TaskDef GUID="3" Height="1440" Left="1365" Top="4995" Width="2340" TaskTemplate="Null"><properties name="(General)"><property locked="0" name="Name" value="Top End" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name
="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties></TaskDef></TaskDefs><RoutingDefs><RoutingDef GUID="4" TaskDestGUID="2" TaskOrgGUID="1"><Points><Point X="2280" Y="2730"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef><RoutingDef GUID="5" TaskDestGUID="3" TaskOrgGUID="2"><Points><Point X="2355" Y="4995"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef></RoutingDefs></ProcessDef></ProcessVersion></ProcessVersions></ACGWFDNative>

--- NEW FILE: SubProcessBottom.acgwfd.xml ---
<ACGWFDNative Version="3.0"><ProcessVersions><ProcessVersion VersionID="1"><ProcessDef ProcessTemplate="Zebra"><properties name="(General)"><property locked="-1" name="Name" value="SubProcessBottom" type="string"/></properties><TaskDefs/><RoutingDefs/></ProcessDef></ProcessVersion><ProcessVersion VersionID="2"><ProcessDef FirstTask="1" ProcessTemplate="Zebra"><properties name="(General)"><property locked="-1" name="Name" value="SubProcessBottom" type="string"/><property locked="-1" name="Class Destruct" value="com.anite.zebra.hivemind.lifecycle.ProcessDestruct" type="string"/><property locked="-1" name="Class Construct" value="com.anite.zebra.hivemind.lifecycle.ProcessConstruct" type="string"/></properties><properties name="Visibility"><property locked="0" name="DebugFlow" value="Yes" type="boolean"/><property locked="0" name="Display Name" value="" type="string"/></properties><properties name="Security"><property locked="0" name="Process Start Permissions" value="systemAccess;" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/><TaskDefs><TaskDef GUID="1" Height="1440" Left="2625" Top="3180" Width="2340" TaskTemplate="Null"><properties name="(General)"><property locked="0" name="Name" value="Bottom Start" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties></TaskDef><TaskDef GUID="2" Height="1440" Left="5100" Top="6135" Width="2
340" TaskTemplate="Null"><properties name="(General)"><property locked="0" name="Name" value="Bottom End" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties></TaskDef></TaskDefs><RoutingDefs><RoutingDef GUID="3" TaskDestGUID="2" TaskOrgGUID="1"><Points><Point X="5835" Y="6135"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef></RoutingDefs></ProcessDef></ProcessVersion></ProcessVersions></ACGWFDNative>



From nobody at sheep.berlios.de  Mon May  1 10:57:56 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Mon, 1 May 2006 10:57:56 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind pom.xml,1.32,1.33
Message-ID: <200605010857.k418vut20461@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind
In directory sheep:/tmp/cvs-serv4285

Modified Files:
	pom.xml 
Log Message:


Index: pom.xml
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/pom.xml,v
retrieving revision 1.32
retrieving revision 1.33
diff -C2 -d -r1.32 -r1.33
*** pom.xml	25 Apr 2006 13:18:30 -0000	1.32
--- pom.xml	1 May 2006 08:58:39 -0000	1.33
***************
*** 6,10 ****
      <artifactId>zebra-hivemind</artifactId>
      <packaging>jar</packaging>
!     <version>3.0</version>
      <name>Zebra Hivemind Layer</name>
      <url>http://zebra.berlios.de/</url>
--- 6,10 ----
      <artifactId>zebra-hivemind</artifactId>
      <packaging>jar</packaging>
!     <version>3.0.1</version>
      <name>Zebra Hivemind Layer</name>
      <url>http://zebra.berlios.de/</url>



From nobody at sheep.berlios.de  Wed May  3 16:35:44 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 3 May 2006 16:35:44 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/src/test - New directory
Message-ID: <200605031435.k43EZit03395@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test
In directory sheep:/tmp/cvs-serv25516/src/test

Log Message:
Directory /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test added to the repository




From nobody at sheep.berlios.de  Wed May  3 16:35:45 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 3 May 2006 16:35:45 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/src/test/java/com/anite/maven/plugin - New directory
Message-ID: <200605031435.k43EZjt03410@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/java/com/anite/maven/plugin
In directory sheep:/tmp/cvs-serv25516/src/test/java/com/anite/maven/plugin

Log Message:
Directory /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/java/com/anite/maven/plugin added to the repository




From nobody at sheep.berlios.de  Wed May  3 16:35:46 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 3 May 2006 16:35:46 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/src/test/java/com/anite/maven/plugin/hivedoc - New directory
Message-ID: <200605031435.k43EZjt03413@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/java/com/anite/maven/plugin/hivedoc
In directory sheep:/tmp/cvs-serv25516/src/test/java/com/anite/maven/plugin/hivedoc

Log Message:
Directory /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/java/com/anite/maven/plugin/hivedoc added to the repository




From nobody at sheep.berlios.de  Wed May  3 16:35:44 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 3 May 2006 16:35:44 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/src/test/java - New directory
Message-ID: <200605031435.k43EZit03398@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/java
In directory sheep:/tmp/cvs-serv25516/src/test/java

Log Message:
Directory /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/java added to the repository




From nobody at sheep.berlios.de  Wed May  3 16:35:46 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 3 May 2006 16:35:46 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/src/test/resources/castries/workflowServices - New directory
Message-ID: <200605031435.k43EZkt03422@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/resources/castries/workflowServices
In directory sheep:/tmp/cvs-serv25516/src/test/resources/castries/workflowServices

Log Message:
Directory /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/resources/castries/workflowServices added to the repository




From nobody at sheep.berlios.de  Wed May  3 16:35:45 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 3 May 2006 16:35:45 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/src/test/java/com/anite/maven - New directory
Message-ID: <200605031435.k43EZjt03407@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/java/com/anite/maven
In directory sheep:/tmp/cvs-serv25516/src/test/java/com/anite/maven

Log Message:
Directory /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/java/com/anite/maven added to the repository




From nobody at sheep.berlios.de  Wed May  3 16:35:46 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 3 May 2006 16:35:46 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/src/test/resources/castries - New directory
Message-ID: <200605031435.k43EZkt03419@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/resources/castries
In directory sheep:/tmp/cvs-serv25516/src/test/resources/castries

Log Message:
Directory /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/resources/castries added to the repository




From nobody at sheep.berlios.de  Wed May  3 16:35:45 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 3 May 2006 16:35:45 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/src/test/java/com/anite - New directory
Message-ID: <200605031435.k43EZjt03404@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/java/com/anite
In directory sheep:/tmp/cvs-serv25516/src/test/java/com/anite

Log Message:
Directory /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/java/com/anite added to the repository




From nobody at sheep.berlios.de  Wed May  3 16:35:52 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 3 May 2006 16:35:52 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin pom.xml,1.1,1.2
Message-ID: <200605031435.k43EZqt03454@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin
In directory sheep:/tmp/cvs-serv25781

Modified Files:
	pom.xml 
Log Message:


Index: pom.xml
===================================================================
RCS file: /cvsroot/zebra/src/java/hivedoc-maven-plugin/pom.xml,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** pom.xml	14 Dec 2005 08:57:56 -0000	1.1
--- pom.xml	3 May 2006 14:36:49 -0000	1.2
***************
*** 7,11 ****
      <packaging>maven-plugin</packaging>
      <name>Maven Hivedoc Plugin</name>
!     <version>0.2</version>
      <inceptionYear>2005</inceptionYear>
      <developers>
--- 7,11 ----
      <packaging>maven-plugin</packaging>
      <name>Maven Hivedoc Plugin</name>
!     <version>0.3</version>
      <inceptionYear>2005</inceptionYear>
      <developers>
***************
*** 27,31 ****
                  <artifactId>maven-eclipse-plugin</artifactId>
                  <configuration>
!                     <downloadSources>true</downloadSources>
                  </configuration>
                  <executions>
--- 27,31 ----
                  <artifactId>maven-eclipse-plugin</artifactId>
                  <configuration>
!                     <downloadSources>false</downloadSources>
                  </configuration>
                  <executions>
***************
*** 64,68 ****
              <groupId>hivemind</groupId>
              <artifactId>hivemind</artifactId>
!             <version>1.1</version>
          </dependency>
          <dependency>
--- 64,68 ----
              <groupId>hivemind</groupId>
              <artifactId>hivemind</artifactId>
!             <version>1.1.1</version>
          </dependency>
          <dependency>



From nobody at sheep.berlios.de  Wed May  3 16:35:51 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 3 May 2006 16:35:51 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/src/test/resources log4j.properties,NONE,1.1
Message-ID: <200605031435.k43EZpt03439@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/resources
In directory sheep:/tmp/cvs-serv25781/src/test/resources

Added Files:
	log4j.properties 
Log Message:


--- NEW FILE: log4j.properties ---
# Basic logging for testing
log4j.rootLogger = debug, stdout


log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#Slow pattern but has source line number
#log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c:%L - %m%n
# Faster without line numbers
log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c:%L - %m%n





From nobody at sheep.berlios.de  Wed May  3 16:35:52 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 3 May 2006 16:35:52 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/src/test/java/com/anite/maven/plugin/hivedoc Dom4JRegistrySerializerTest.java,NONE,1.1
Message-ID: <200605031435.k43EZqt03451@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/java/com/anite/maven/plugin/hivedoc
In directory sheep:/tmp/cvs-serv25781/src/test/java/com/anite/maven/plugin/hivedoc

Added Files:
	Dom4JRegistrySerializerTest.java 
Log Message:


--- NEW FILE: Dom4JRegistrySerializerTest.java ---
package com.anite.maven.plugin.hivedoc;

import java.io.File;
import java.io.FileOutputStream;

import javax.xml.transform.Result;
import javax.xml.transform.Source;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.stream.StreamResult;
import javax.xml.transform.stream.StreamSource;

import junit.framework.TestCase;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.hivemind.impl.DefaultClassResolver;
import org.apache.hivemind.impl.XmlModuleDescriptorProvider;
import org.dom4j.Document;
import org.dom4j.Element;
import org.dom4j.io.DocumentSource;

public class Dom4JRegistrySerializerTest extends TestCase {
	private static final Log log = LogFactory.getLog(Dom4JRegistrySerializerTest.class);
    private static final String XSLT_FILE = "hivemind.xsl";

	public void testSerializeCastries() throws Exception{
		Dom4JRegistrySerializer dom4JRegistrySerializer = new Dom4JRegistrySerializer();
		
		XmlModuleDescriptorProvider xmlModuleDescriptorProvider = new XmlModuleDescriptorProvider(new DefaultClassResolver(
                this.getClass().getClassLoader()), "castries/hivemodule.xml");

		dom4JRegistrySerializer.addModuleDescriptorProvider(xmlModuleDescriptorProvider);
		
		Document document = dom4JRegistrySerializer.createRegistryDocument();
		assertNotNull(document);
		
		log.debug(document.asXML());

		Element registry = document.getRootElement();
		assertEquals(12, registry.elements().size());
		
		 // Run the XSL over it to generate Hivedoc
        File outputFolder = new File("/tmp/hivedoc");
        outputFolder.mkdirs();
        File outputFile = new File(outputFolder, "index.html");
        DocumentSource registryDocument = new DocumentSource(document);
        Source xsltFile = new StreamSource(this.getClass().getClassLoader().getResourceAsStream(XSLT_FILE));
        Result output = new StreamResult(new FileOutputStream(outputFile));

        TransformerFactory transformerFactory = TransformerFactory.newInstance();
        Transformer trans = transformerFactory.newTransformer(xsltFile);
        trans.setParameter("base.dir", outputFolder.getAbsolutePath());

        trans.transform(registryDocument, output);
		
		
	}
	
	
	
}



From nobody at sheep.berlios.de  Wed May  3 16:35:45 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 3 May 2006 16:35:45 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/src/test/java/com - New directory
Message-ID: <200605031435.k43EZjt03401@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/java/com
In directory sheep:/tmp/cvs-serv25516/src/test/java/com

Log Message:
Directory /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/java/com added to the repository




From nobody at sheep.berlios.de  Wed May  3 16:35:46 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 3 May 2006 16:35:46 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/src/test/resources - New directory
Message-ID: <200605031435.k43EZkt03416@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/resources
In directory sheep:/tmp/cvs-serv25516/src/test/resources

Log Message:
Directory /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/resources added to the repository




From nobody at sheep.berlios.de  Wed May  3 16:35:51 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 3 May 2006 16:35:51 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/src/test/resources/castries hivemoduleSoap.xml,NONE,1.1 hivemodule.xml,NONE,1.1 hivemoduleAuthentication.xml,NONE,1.1 configuration.xml,NONE,1.1 hivemoduleDataRetention.xml,NONE,1.1 hivemoduleZebra.xml,NONE,1.1
Message-ID: <200605031435.k43EZpt03442@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/resources/castries
In directory sheep:/tmp/cvs-serv25781/src/test/resources/castries

Added Files:
	hivemoduleSoap.xml hivemodule.xml hivemoduleAuthentication.xml 
	configuration.xml hivemoduleDataRetention.xml 
	hivemoduleZebra.xml 
Log Message:


--- NEW FILE: hivemoduleSoap.xml ---
<?xml version="1.0" encoding="UTF-8"?>
<module id="com.anite.tpr.soapgateway" version="1.0.0">
  <service-point id="replication" interface="com.anite.tpr.soapgateway.replication.api.Replication">
    <invoke-factory model="threaded">
      <construct class="com.anite.tpr.soapgateway.replication.impl.ReplicationImpl"> </construct>
    </invoke-factory>
  </service-point>
  <service-point id="newReturn" interface="com.anite.tpr.soapgateway.newReturn.api.NewReturn">
    <invoke-factory model="threaded">
      <construct class="com.anite.tpr.soapgateway.newReturn.impl.NewReturnImpl"> </construct>
    </invoke-factory>
  </service-point>
  <service-point id="export" interface="com.anite.tpr.soapgateway.export.api.Export">
    <invoke-factory model="threaded">
      <construct class="com.anite.tpr.soapgateway.export.impl.ExportImpl"> </construct>
    </invoke-factory>
  </service-point>
  <implementation service-id="com.anite.tpr.serviceRequestManager.serviceRequestManager">
    <invoke-factory>
      <construct class="com.anite.tpr.serviceRequestManager.impl.ServiceRequestManagerImpl"/>
    </invoke-factory>
  </implementation>
</module>

--- NEW FILE: hivemodule.xml ---
<?xml version="1.0" encoding="UTF-8"?>
<module id="com.anite.castries" version="1.0.0">
  <!-- On pain of being mocked no services should be declared 
  here put them in submodules depending on what they are for 
  Items likely to be user configured are to reside in the configuration.xml module 
  -->
  <sub-module descriptor="configuration.xml"/>
  <sub-module descriptor="hivemoduleAuthentication.xml"/>
  <sub-module descriptor="hivemoduleDataRetention.xml"/>
  <sub-module descriptor="hivemoduleSoap.xml"/>
  <sub-module descriptor="hivemoduleZebra.xml"/>
  <sub-module descriptor="workflowServices/hivemoduleRandomGeneration.xml"/>
  <!-- All workflow related services to reside in the workflow services sub folder
       Each workflow will have its own sub-module -->
  <sub-module descriptor="workflowServices/hivemoduleShared.xml"/>
  <sub-module descriptor="workflowServices/hivemoduleSchemeReturn.xml"/>
  <sub-module descriptor="workflowServices/hivemoduleSchemeTracking.xml"/>
  <sub-module descriptor="workflowServices/hivemoduleCommonCallProcess.xml"/>
  <sub-module descriptor="workflowServices/hivemoduleSchemeReturnDataEntry.xml"/>
</module>

--- NEW FILE: hivemoduleAuthentication.xml ---
<?xml version="1.0" encoding="UTF-8"?>
<module id="com.anite.castries.openreports.authentication" version="1.0.0">
    <service-point id="Authentication" interface="com.anite.castries.openreports.authentication.AuthenticationService">
        <invoke-factory>
            <construct class="com.anite.castries.openreports.authentication.DefaultAuthenticationService">
                <!-- Time in seconds that the key is valid for. -->
				<set property="expiryTime" value="600"/>
            </construct>
        </invoke-factory>
		<interceptor service-id="hivemind.LoggingInterceptor"/>
    </service-point>
</module>

--- NEW FILE: configuration.xml ---
<?xml version="1.0" encoding="UTF-8"?>
<module id="com.anite.castries.configuration" version="1.0.0">
	<!--All user configuratable implementations should be put here
		Items that are theoretically configurable but unlikely to be configured should not
		go here and should be in their own submodule file -->
	<implementation service-id="fulcrum.security.hivemind.userManagerDynamic">
		<invoke-factory>
			<construct class="org.apache.fulcrum.security.hibernate.HibernateUserManagerImpl">
				<set property="className"
					value="org.apache.fulcrum.security.hibernate.dynamic.model.HibernateDynamicUser"/>
				<set property="passwordDurationDays" value="28"/>
				<set property="passwordCyclePolicy" value="5"/>
				<set property="maxLoginAttempts" value="3"/>
				<set property="lockResetHours" value="12"/>
				<set-service property="authenticator"
					service-id="fulcrum.security.authenticatorCrypto"/>
				<set-service property="aclFactory" service-id="fulcrum.security.aclFactoryDynamic"/>
			</construct>
		</invoke-factory>
	</implementation>
	<implementation service-id="tprformcomponents.GeneralExceptionPresenter">
		<invoke-factory>
			<construct class="com.anite.tpr.services.exception.GeneralExceptionPresenter">
				<set-object property="exceptionPageName" value="infrastructure:exceptionPageName"/>
				<set-object property="requestExceptionReporter"
					value="infrastructure:requestExceptionReporter"/>
				<set-object property="responseRenderer" value="infrastructure:responseRenderer"/>
				<set-configuration property="exceptionCases"
					configuration-id="tprformcomponents.exceptionCases"/>
			</construct>
		</invoke-factory>
	</implementation>
	<contribution configuration-id="tapestry.InfrastructureOverrides">
		<property name="exceptionPresenter"
			object="service:tprformcomponents.GeneralExceptionPresenter"/>
	</contribution>
	<!-- The TPR Timeouts -->
	<contribution configuration-id="printmanager.TprTimeLimits">
		<timeLimits processTimeOut="58" issueChaserLetter="42" dueDateForCompletion="37"
			issueReminderLetter="21" beginCourtesyCall="5"/>
	</contribution>
	<contribution configuration-id="tprformcomponents.exceptionCases">
		<exceptionCase exceptionClass="org.hibernate.HibernateException" page="HibernateException"/>
		<!-- Remove next line to send all other errors to the browser -->
		<!-- exceptionCase exceptionClass="java.lang.Throwable" page="GeneralException"/-->
	</contribution>
</module>

--- NEW FILE: hivemoduleDataRetention.xml ---
<?xml version="1.0" encoding="UTF-8"?>
<module id="com.anite.castries.dataretention" version="1.0.0">
    <service-point id="DataRetention" interface="com.anite.castries.dataretention.api.IDataRetentionService">
        <invoke-factory>
            <construct class="com.anite.castries.dataretention.impl.DataRetentionService">
                <set property="minElapsedMonths" value="12"/>
            </construct>
        </invoke-factory>
		<interceptor service-id="hivemind.LoggingInterceptor"/>
    </service-point>
</module>

--- NEW FILE: hivemoduleZebra.xml ---
<?xml version="1.0" encoding="UTF-8"?>
<module id="com.anite.castries.zebra" version="1.0.0">
    <implementation service-id="zebra.zebraDefinitionFactory" if="not (class org.mortbay.Jetty)">
        <invoke-factory>
            <construct class="com.anite.zebra.hivemind.impl.ZebraDefinitionFactoryImpl">
                <set property="processesPath" value="src/main/webapp/WEB-INF/processes"/>
                <set-service property="session" service-id="fulcrum.hibernate.Session"/>
            </construct>
        </invoke-factory>
    </implementation>
    <implementation service-id="zebra.zebraDefinitionFactory" if="class org.mortbay.Jetty">
        <invoke-factory>
            <construct class="com.anite.zebra.hivemind.impl.ZebraDefinitionFactory">
                <set property="processesPath" value="WEB-INF/processes"/>
                <set-service property="session" service-id="fulcrum.hibernate.Session"/>
            </construct>
        </invoke-factory>
    </implementation>
    
    <!-- 
    	listener to calculate the due date for the different types of calls 
    	(query, web, courtesy).
    -->
    <service-point id="dueDateFactoryListener"
        interface="com.anite.zebra.hivemind.api.StateFactoryListener">
        <invoke-factory>
            <construct class="com.anite.castries.services.callrecord.DueDateListener">
                <event-listener service-id="zebra.zebraState"/>
            </construct>
        </invoke-factory>
    </service-point>
    <contribution configuration-id="hivemind.EagerLoad">
        <load service-id="com.anite.castries.zebra.dueDateFactoryListener"/>
    </contribution>
    
</module>



From nobody at sheep.berlios.de  Wed May  3 16:35:52 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 3 May 2006 16:35:52 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/src/test/resources/castries/workflowServices hivemoduleSchemeReturn.xml,NONE,1.1 hivemoduleShared.xml,NONE,1.1 hivemoduleSchemeTracking.xml,NONE,1.1 hivemoduleRandomGeneration.xml,NONE,1.1 hivemoduleCommonCallProcess.xml,NONE,1.1 hivemoduleSchemeReturnDataEntry.xml,NONE,1.1
Message-ID: <200605031435.k43EZqt03448@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/test/resources/castries/workflowServices
In directory sheep:/tmp/cvs-serv25781/src/test/resources/castries/workflowServices

Added Files:
	hivemoduleSchemeReturn.xml hivemoduleShared.xml 
	hivemoduleSchemeTracking.xml hivemoduleRandomGeneration.xml 
	hivemoduleCommonCallProcess.xml 
	hivemoduleSchemeReturnDataEntry.xml 
Log Message:


--- NEW FILE: hivemoduleSchemeReturn.xml ---
<?xml version="1.0" encoding="UTF-8"?>
<module id="com.anite.castries.workflows.schemeManagement" version="1.0.0">
    <service-point id="QueueSchemeReturnNoticePrintItem"
        interface="com.anite.zebra.core.api.ITaskAction">
        <invoke-factory>
            <construct
                class="com.anite.castries.workflows.schemeManagement.QueueSchemeReturnNoticePrintItem"
            />
        </invoke-factory>
    </service-point>
    <service-point id="LogXmlIssueRecievedEvent" interface="com.anite.zebra.core.api.ITaskAction">
        <invoke-factory>
            <construct
                class="com.anite.castries.workflows.schemeManagement.LogXmlIssueRecievedEvent"/>
        </invoke-factory>
    </service-point>
    <service-point id="AwaitPrintItemProcessing" interface="com.anite.zebra.core.api.ITaskAction">
        <invoke-factory>
            <construct
                class="com.anite.castries.workflows.schemeManagement.AwaitPrintItemProcessing"/>
        </invoke-factory>
    </service-point>
    <service-point id="GenerateTargetIssueDate" interface="com.anite.castries.workflows.schemeManagement.GenerateTargetIssueDate">
        <invoke-factory>
            <construct
                class="com.anite.castries.workflows.schemeManagement.GenerateTargetIssueDate"/>
        </invoke-factory>
    </service-point>
</module>

--- NEW FILE: hivemoduleShared.xml ---
<?xml version="1.0" encoding="UTF-8"?>
<module id="com.anite.castries.workflows.shared" version="1.0.0">
    <service-point id="GenerateSchemePassword" interface="com.anite.zebra.core.api.ITaskAction">
        <invoke-factory>
            <construct class="com.anite.castries.workflows.shared.GenerateSchemePassword"/>
        </invoke-factory>
    </service-point>
    <service-point id="GeneratePassword" interface="com.anite.castries.services.password.GeneratePassword">
        <invoke-factory>
            <construct class="com.anite.castries.services.password.GeneratePassword"/>
        </invoke-factory>
    </service-point>    
</module>

--- NEW FILE: hivemoduleSchemeTracking.xml ---
<?xml version="1.0" encoding="UTF-8"?>
<module id="com.anite.castries.workflows.schemeTracking"
	version="1.0.0">
	<service-point id="PreReceiptSchedulerLogic"
		interface="com.anite.zebra.core.api.ITaskAction">
		<invoke-factory>
			<construct
				class="com.anite.castries.workflows.schemeTracking.PreReceiptSchedulerLogic">
				<set-configuration property="timeLimits"
					configuration-id="printmanager.TprTimeLimits" />
			</construct>
		</invoke-factory>
	</service-point>
	<service-point id="PostReceiptSchedulerLogic"
		interface="com.anite.zebra.core.api.ITaskAction">
		<invoke-factory>
			<construct
				class="com.anite.castries.workflows.schemeTracking.PostReceiptSchedulerLogic">
				<set-configuration property="timeLimits"
					configuration-id="printmanager.TprTimeLimits" />
			</construct>
		</invoke-factory>
	</service-point>
	<service-point id="QueueReminderLetters"
		interface="com.anite.zebra.core.api.ITaskAction">
		<invoke-factory>
			<construct
				class="com.anite.castries.workflows.schemeTracking.QueueReminderLetters" />
		</invoke-factory>
	</service-point>
	<service-point id="QueueOverdueLetters"
		interface="com.anite.zebra.core.api.ITaskAction">
		<invoke-factory>
			<construct
				class="com.anite.castries.workflows.schemeTracking.QueueOverdueLetters" />
		</invoke-factory>
	</service-point>
	<service-point id="ExportInvalidData"
		interface="com.anite.zebra.core.api.ITaskAction">
		<invoke-factory>
			<construct
				class="com.anite.castries.workflows.schemeTracking.ExportInvalidData" />
		</invoke-factory>
	</service-point>
	<service-point id="ExportValidData"
		interface="com.anite.zebra.core.api.ITaskAction">
		<invoke-factory>
			<construct
				class="com.anite.castries.workflows.schemeTracking.ExportValidData" />
		</invoke-factory>
	</service-point>
</module>

--- NEW FILE: hivemoduleRandomGeneration.xml ---
<?xml version="1.0" encoding="UTF-8"?>
<module id="com.anite.castries.randomString" version="1.0.0">
    <service-point id="RandomString" interface="com.anite.castries.randomString.api.RandomStringGeneration">
        <invoke-factory>
            <construct class="com.anite.castries.randomString.impl.RandomStringImpl">
                <set property="passwordSubLength" value="3"/>
                <set property="usernameLength" value="6"/>
                <set property="callBackCodeLength" value="6"/>
            </construct>
        </invoke-factory>
    </service-point>
</module>

--- NEW FILE: hivemoduleCommonCallProcess.xml ---
<?xml version="1.0" encoding="UTF-8"?>
<module id="com.anite.castries.workflows.commonCallProcess" version="1.0.0">
    <service-point id="WhichCallType" interface="com.anite.zebra.core.api.ITaskAction">
        <invoke-factory>
            <construct class="com.anite.castries.workflows.commonCallProcess.WhichCallType"/>
        </invoke-factory>
    </service-point>
    <service-point id="CallQueueService"
        interface="com.anite.castries.workflows.commonCallProcess.CallQueueService">
        <invoke-factory>
            <construct class="com.anite.castries.workflows.commonCallProcess.CallQueueService"/>
        </invoke-factory>
    </service-point>
    <service-point id="CallMadeLogOutcomeAndFollowUp"
        interface="com.anite.zebra.core.api.ITaskAction">
        <invoke-factory>
            <construct
                class="com.anite.castries.workflows.commonCallProcess.CallMadeLogOutcomeAndFollowUp"
            />
        </invoke-factory>
    </service-point>
    <service-point id="QueueReissueNotice" interface="com.anite.zebra.core.api.ITaskAction">
        <invoke-factory>
            <construct class="com.anite.castries.workflows.commonCallProcess.QueueReissueNotice"/>
        </invoke-factory>
    </service-point>
    <service-point id="PhoneNumber" interface="com.anite.zebra.core.api.ITaskAction">
        <invoke-factory>
            <construct class="com.anite.castries.workflows.commonCallProcess.PhoneNumber"/>
        </invoke-factory>
    </service-point>
    <service-point id="QueueIssuePaperForm" interface="com.anite.zebra.core.api.ITaskAction">
        <invoke-factory>
            <construct class="com.anite.castries.workflows.commonCallProcess.QueueIssuePaperForm"/>
        </invoke-factory>
    </service-point>
    <service-point id="QueueIssuePasswordReminder" interface="com.anite.zebra.core.api.ITaskAction">
        <invoke-factory>
            <construct
                class="com.anite.castries.workflows.commonCallProcess.QueueIssuePasswordReminder"/>
        </invoke-factory>
    </service-point>
    <service-point id="IsValidCallBack" interface="com.anite.zebra.core.api.ITaskAction">
        <invoke-factory>
            <construct
                class="com.anite.castries.workflows.commonCallProcess.IsValidCallBack">
                <set property="callsAllowed" value="2" />
              </construct>  
        </invoke-factory>
    </service-point>
    <service-point id="CallBackDelayMet" interface="com.anite.zebra.core.api.ITaskAction">
        <invoke-factory>
            <construct
                class="com.anite.castries.workflows.commonCallProcess.CallBackDelayMet"/>
        </invoke-factory>
    </service-point>
    <service-point id="CallStateManager" interface="com.anite.castries.services.callrecord.api.CallStateManager">
		<invoke-factory model="threaded">
			<construct class="com.anite.castries.services.callrecord.CallStateManagerImpl" />
		</invoke-factory>
	</service-point>
	
</module>

--- NEW FILE: hivemoduleSchemeReturnDataEntry.xml ---
<?xml version="1.0" encoding="UTF-8"?>
<module id="com.anite.castries.workflows.schemeReturnDataEntry" version="1.0.0">    
    <service-point id="DataEntryQueueService" interface="com.anite.castries.workflows.schemeReturnDataEntry.DataEntryQueueService">
        <invoke-factory>
            <construct
                class="com.anite.castries.workflows.schemeReturnDataEntry.DataEntryQueueService"/>
        </invoke-factory>
    </service-point>
    <service-point id="QueueConfirmationLetters" interface="com.anite.zebra.core.api.ITaskAction">
        <invoke-factory>
            <construct
                class="com.anite.castries.workflows.schemeReturnDataEntry.QueueConfirmationLetters"/>
        </invoke-factory>
    </service-point>
    <service-point id="Duplicate" interface="com.anite.zebra.core.api.ITaskAction">
        <invoke-factory>
            <construct
                class="com.anite.castries.workflows.schemeReturnDataEntry.Duplicate"/>
        </invoke-factory>
    </service-point>
    <service-point id="Valid" interface="com.anite.zebra.core.api.ITaskAction">
        <invoke-factory>
            <construct
                class="com.anite.castries.workflows.schemeReturnDataEntry.Valid"/>
        </invoke-factory>
    </service-point>
    <service-point id="DuplicatePSRService"
        interface="com.anite.castries.workflows.schemeReturnDataEntry.DuplicatePSRService">
        <invoke-factory>
            <construct class="com.anite.castries.workflows.schemeReturnDataEntry.DuplicatePSRService">
				<set property="separator" value="-DUP-"/>
			</construct>
        </invoke-factory>
    </service-point>
</module>




From nobody at sheep.berlios.de  Wed May  3 16:35:51 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 3 May 2006 16:35:51 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/src/main/java/com/anite/maven/plugin/hivedoc Dom4JRegistrySerializer.java,NONE,1.1 HivedocReport.java,1.1,1.2
Message-ID: <200605031435.k43EZpt03446@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/main/java/com/anite/maven/plugin/hivedoc
In directory sheep:/tmp/cvs-serv25781/src/main/java/com/anite/maven/plugin/hivedoc

Modified Files:
	HivedocReport.java 
Added Files:
	Dom4JRegistrySerializer.java 
Log Message:


--- NEW FILE: Dom4JRegistrySerializer.java ---
// Copyright 2004, 2005 The Apache Software Foundation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
package com.anite.maven.plugin.hivedoc;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.apache.hivemind.ApplicationRuntimeException;
import org.apache.hivemind.Attribute;
import org.apache.hivemind.ClassResolver;
import org.apache.hivemind.ErrorHandler;
import org.apache.hivemind.ModuleDescriptorProvider;
import org.apache.hivemind.Occurances;
import org.apache.hivemind.impl.DefaultClassResolver;
import org.apache.hivemind.impl.DefaultErrorHandler;
import org.apache.hivemind.impl.XmlModuleDescriptorProvider;
import org.apache.hivemind.internal.Visibility;
import org.apache.hivemind.parse.AttributeMappingDescriptor;
import org.apache.hivemind.parse.ConfigurationPointDescriptor;
import org.apache.hivemind.parse.ContributionDescriptor;
import org.apache.hivemind.parse.ConversionDescriptor;
import org.apache.hivemind.parse.CreateInstanceDescriptor;
import org.apache.hivemind.parse.DependencyDescriptor;
import org.apache.hivemind.parse.ImplementationDescriptor;
import org.apache.hivemind.parse.InstanceBuilder;
import org.apache.hivemind.parse.InterceptorDescriptor;
import org.apache.hivemind.parse.InvokeFactoryDescriptor;
import org.apache.hivemind.parse.ModuleDescriptor;
import org.apache.hivemind.parse.ServicePointDescriptor;
import org.apache.hivemind.parse.SubModuleDescriptor;
import org.apache.hivemind.schema.AttributeModel;
import org.apache.hivemind.schema.ElementModel;
import org.apache.hivemind.schema.Rule;
import org.apache.hivemind.schema.impl.SchemaImpl;
import org.apache.hivemind.schema.rules.CreateObjectRule;
import org.apache.hivemind.schema.rules.InvokeParentRule;
import org.apache.hivemind.schema.rules.PushAttributeRule;
import org.apache.hivemind.schema.rules.PushContentRule;
import org.apache.hivemind.schema.rules.ReadAttributeRule;
import org.apache.hivemind.schema.rules.ReadContentRule;
import org.apache.hivemind.schema.rules.SetModuleRule;
import org.apache.hivemind.schema.rules.SetParentRule;
import org.apache.hivemind.schema.rules.SetPropertyRule;
import org.apache.hivemind.util.IdUtils;
import org.dom4j.Document;
import org.dom4j.DocumentHelper;
import org.dom4j.Element;

/**
 * This is derived from the basic hivemind one but uses Dom4j
 * 
 * 
 * This class serializes a set of {@link ModuleDescriptor module descriptors}
 * into a {@link Document XML document}. The set of module descriptors to
 * process is specified indirectly by supplying one or several
 * {@link ModuleDescriptorProvider} (see
 * {@link #addModuleDescriptorProvider(ModuleDescriptorProvider)}). In this
 * respect this class is used the same way as
 * {@link org.apache.hivemind.impl.RegistryBuilder}. There is even a
 * corresponding {@link #createDefaultRegistryDocument() static method} to
 * serialize the modules of the default registry.
 * <p>
 * The resulting XML file does not conform to the hivemind module deployment
 * descriptor schema. The following changes occur:
 * <ul>
 * <li>The outermost element is &lt;registry&gt; (which contains a list of
 * &lt;module&gt;)
 * <li>A unique id (unique within the file) is assigned to each &lt;module&gt;,
 * &lt;configuration-point&gt;, &lt;service-point&gt;, &lt;contribution&gt;,
 * &tl;schema&gt; and &lt;implementation&gt; (this is to make it easier to
 * generate links and anchors)
 * <li>Unqualified ids are converted to qualified ids (whereever possible).
 * </ul>
 * 
 * @author Knut Wannheden
 * @since 1.1
 */
public class Dom4JRegistrySerializer {
	private Set _processedSchemas = new HashSet();

	private List _providers = new ArrayList();

	private ErrorHandler _handler;

	private Document _document;

	private ModuleDescriptor _md;

	public Dom4JRegistrySerializer() {
		_handler = new DefaultErrorHandler();
	}

	public void addModuleDescriptorProvider(ModuleDescriptorProvider provider) {
		_providers.add(provider);
	}

	public Document createRegistryDocument() {

		_document = DocumentHelper.createDocument();

		Element registry = DocumentHelper.createElement("registry");
		_document.add(registry);

		for (Iterator i = _providers.iterator(); i.hasNext();) {
			ModuleDescriptorProvider provider = (ModuleDescriptorProvider) i
					.next();

			processModuleDescriptorProvider(registry, provider);
		}

		return _document;
	}

	private void processModuleDescriptorProvider(Element registry,
			ModuleDescriptorProvider provider) {
		for (Iterator j = provider.getModuleDescriptors(_handler).iterator(); j
				.hasNext();) {
			_md = (ModuleDescriptor) j.next();

			Element module = getModuleElement(_md);
			registry.add(module);

		}
	}

	private Element getModuleElement(ModuleDescriptor md) {
		Element module = DocumentHelper.createElement("module");

		module.addAttribute("id", md.getModuleId());
		module.addAttribute("version", md.getVersion());
		module.addAttribute("package", md.getPackageName());

		if (md.getAnnotation() != null) {
			module.addText(md.getAnnotation());
		}

		addDependencies(module);

		addServicePoints(module);

		addConfigurationPoints(module);

		addContributions(module);

		addImplementations(module);

		addSchemas(module);

		addSubModules(module);

		return module;
	}

	private void addDependencies(Element module) {
		List dependencies = _md.getDependencies();

		if (dependencies != null) {
			for (Iterator i = dependencies.iterator(); i.hasNext();) {
				DependencyDescriptor dd = (DependencyDescriptor) i.next();

				Element dependency = getDependencyElement(dd);

				module.add(dependency);
			}
		}
	}

	private void addServicePoints(Element module) {
		List servicePoints = _md.getServicePoints();

		if (servicePoints != null) {
			for (Iterator i = servicePoints.iterator(); i.hasNext();) {
				ServicePointDescriptor spd = (ServicePointDescriptor) i.next();

				Element servicePoint = getServicePointElement(spd);

				module.add(servicePoint);

				SchemaImpl s = (SchemaImpl) spd.getParametersSchema();

				if (s != null && s.getId() != null)
					addSchema(module, s, "schema");
			}
		}
	}

	private void addConfigurationPoints(Element module) {
		List configurationPoints = _md.getConfigurationPoints();

		if (configurationPoints != null) {
			for (Iterator i = configurationPoints.iterator(); i.hasNext();) {
				ConfigurationPointDescriptor cpd = (ConfigurationPointDescriptor) i
						.next();

				Element configurationPoint = getConfigurationPointElement(cpd);

				module.add(configurationPoint);

				SchemaImpl s = (SchemaImpl) cpd.getContributionsSchema();

				if (s != null && s.getId() != null)
					addSchema(module, s, "schema");
			}
		}
	}

	private void addContributions(Element module) {
		List contributions = _md.getContributions();

		if (contributions != null) {
			for (Iterator i = contributions.iterator(); i.hasNext();) {
				ContributionDescriptor cd = (ContributionDescriptor) i.next();

				Element contribution = getContributionElement(cd);

				module.add(contribution);
			}
		}
	}

	private void addImplementations(Element module) {
		List implementations = _md.getImplementations();

		if (implementations != null) {
			for (Iterator i = implementations.iterator(); i.hasNext();) {
				ImplementationDescriptor id = (ImplementationDescriptor) i
						.next();

				Element implementation = getImplementationElement(id);

				module.add(implementation);
			}
		}
	}

	private void addSchemas(Element module) {
		Collection schemas = _md.getSchemas();

		for (Iterator i = schemas.iterator(); i.hasNext();) {
			SchemaImpl s = (SchemaImpl) i.next();

			addSchema(module, s, "schema");
		}
	}

	private void addSubModules(Element module) {
		List subModules = _md.getSubModules();

		if (subModules != null) {
			for (Iterator i = subModules.iterator(); i.hasNext();) {
				SubModuleDescriptor smd = (SubModuleDescriptor) i.next();

				Element subModule = getSubModuleElement(smd);

				module.add(subModule);
			}
		}
	}

	private Element getDependencyElement(DependencyDescriptor dd) {

		Element dependency = DocumentHelper.createElement("dependency");

		dependency.addAttribute("module-id", dd.getModuleId());
		dependency.addAttribute("version", dd.getVersion());

		return dependency;
	}

	private Element getServicePointElement(ServicePointDescriptor spd) {
		Element servicePoint = DocumentHelper.createElement("service-point");

		servicePoint.addAttribute("id", qualify(spd.getId()));
		servicePoint.addAttribute("interface", spd.getInterfaceClassName());
		if (spd.getVisibility() == Visibility.PRIVATE)
			servicePoint.addAttribute("visibility", "private");
		if (spd.getParametersCount() != Occurances.REQUIRED)
			servicePoint.addAttribute("parameters-occurs", spd
					.getParametersCount().getName().toLowerCase());

		if (spd.getAnnotation() != null) {
			servicePoint.addText(spd.getAnnotation());
		}

		if (spd.getParametersSchema() != null)
			addSchema(servicePoint, (SchemaImpl) spd.getParametersSchema(),
					"parameters-schema");
		else if (spd.getParametersSchemaId() != null)
			servicePoint.addAttribute("parameters-schema-id", qualify(spd
					.getParametersSchemaId()));

		InstanceBuilder ib = spd.getInstanceBuilder();

		if (ib != null) {
			Element instanceBuilder = getInstanceBuilderElement(ib);

			servicePoint.add(instanceBuilder);
		}

		List interceptors = spd.getInterceptors();

		if (interceptors != null) {
			for (Iterator i = interceptors.iterator(); i.hasNext();) {
				InterceptorDescriptor icd = (InterceptorDescriptor) i.next();

				Element interceptor = getInterceptorElement(icd);

				servicePoint.add(interceptor);
			}
		}

		return servicePoint;
	}

	private Element getConfigurationPointElement(
			ConfigurationPointDescriptor cpd) {
		Element configurationPoint = DocumentHelper
				.createElement("configuration-point");

		configurationPoint.addAttribute("id", qualify(cpd.getId()));
		if (cpd.getVisibility() == Visibility.PRIVATE)
			configurationPoint.addAttribute("visibility", "private");

		if (cpd.getAnnotation() != null) {
			configurationPoint.addText(cpd.getAnnotation());
		}
		if (cpd.getContributionsSchema() != null)
			addSchema(configurationPoint, (SchemaImpl) cpd
					.getContributionsSchema(), "schema");
		else if (cpd.getContributionsSchemaId() != null)
			configurationPoint.addAttribute("schema-id", qualify(cpd
					.getContributionsSchemaId()));

		return configurationPoint;
	}

	private Element getContributionElement(ContributionDescriptor cd) {
		Element contribution = DocumentHelper.createElement("contribution");

		contribution.addAttribute("configuration-id", qualify(cd
				.getConfigurationId()));

		if (cd.getConditionalExpression() != null)
			contribution.addAttribute("if", cd.getConditionalExpression());

		List parameters = cd.getElements();

		if (parameters != null) {
			for (Iterator i = parameters.iterator(); i.hasNext();) {
				org.apache.hivemind.Element parameter = (org.apache.hivemind.Element) i
						.next();

				Element element = getParamterElement(parameter);

				contribution.add(element);
			}
		}

		if (cd.getAnnotation() != null) {
			contribution.addText(cd.getAnnotation());
		}

		return contribution;
	}

	private Element getImplementationElement(ImplementationDescriptor id) {
		Element implementation = DocumentHelper.createElement("implementation");

		implementation.addAttribute("service-id", qualify(id.getServiceId()));

		if (id.getConditionalExpression() != null)
			implementation.addAttribute("if", id.getConditionalExpression());

		if (id.getAnnotation() != null) {
			implementation.addText(id.getAnnotation());
		}

		InstanceBuilder ib = id.getInstanceBuilder();

		if (ib != null) {
			Element instanceBuilder = getInstanceBuilderElement(ib);

			implementation.add(instanceBuilder);
		}

		List interceptors = id.getInterceptors();

		if (interceptors != null) {
			for (Iterator i = interceptors.iterator(); i.hasNext();) {
				InterceptorDescriptor icd = (InterceptorDescriptor) i.next();

				Element interceptor = getInterceptorElement(icd);

				implementation.add(interceptor);
			}
		}

		return implementation;
	}

	private Element getSubModuleElement(SubModuleDescriptor smd) {
		Element subModule = DocumentHelper.createElement("sub-module");

		subModule.addAttribute("descriptor", smd.getDescriptor().getPath());

		return subModule;
	}

	private Element getInstanceBuilderElement(InstanceBuilder ib) {
		Element instanceBuilder;

		if (ib instanceof CreateInstanceDescriptor) {
			CreateInstanceDescriptor cid = (CreateInstanceDescriptor) ib;
			instanceBuilder = DocumentHelper.createElement("create-instance");

			instanceBuilder.addAttribute("class", cid.getInstanceClassName());
			if (!cid.getServiceModel().equals("singleton"))
				instanceBuilder.addAttribute("model", cid.getServiceModel());
		} else {
			InvokeFactoryDescriptor ifd = (InvokeFactoryDescriptor) ib;
			instanceBuilder = DocumentHelper.createElement("invoke-factory");

			if (!ifd.getFactoryServiceId().equals("hivemind.BuilderFactory"))
				instanceBuilder.addAttribute("service-id", qualify(ifd
						.getFactoryServiceId()));
			if (ifd.getServiceModel() != null)
				instanceBuilder.addAttribute("model", ifd.getServiceModel());

			List parameters = ifd.getParameters();

			if (parameters != null) {
				for (Iterator i = parameters.iterator(); i.hasNext();) {
					org.apache.hivemind.Element parameter = (org.apache.hivemind.Element) i
							.next();

					Element element = getParamterElement(parameter);

					instanceBuilder.add(element);
				}
			}
		}

		return instanceBuilder;
	}

	private Element getInterceptorElement(InterceptorDescriptor icd) {
		Element interceptor = DocumentHelper.createElement("interceptor");

		interceptor.addAttribute("service-id", qualify(icd
				.getFactoryServiceId()));
		if (icd.getBefore() != null)
			interceptor.addAttribute("before", icd.getBefore());
		if (icd.getAfter() != null)
			interceptor.addAttribute("after", icd.getAfter());
		return interceptor;
	}

	private Element getParamterElement(org.apache.hivemind.Element parameter) {
		Element element = DocumentHelper.createElement(parameter
				.getElementName());

		List attributes = parameter.getAttributes();

		for (Iterator i = attributes.iterator(); i.hasNext();) {
			Attribute attribute = (Attribute) i.next();

			element.addAttribute(attribute.getName(), attribute.getValue());
		}

		List elements = parameter.getElements();

		for (Iterator i = elements.iterator(); i.hasNext();) {
			org.apache.hivemind.Element nestedParameter = (org.apache.hivemind.Element) i
					.next();

			element.add(getParamterElement(nestedParameter));
		}

		return element;
	}

	private void addSchema(Element container, SchemaImpl s, String elementName) {
		if (_processedSchemas.contains(s))
			return;

		Element schema = DocumentHelper.createElement(elementName);

		if (s.getId() != null)
			schema.addAttribute("id", qualify(s.getId()));

		if (s.getVisibility() == Visibility.PRIVATE)
			schema.addAttribute("visibility", "private");

		if (s.getAnnotation() != null) {
			schema.addText(s.getAnnotation());
		}

		for (Iterator j = s.getElementModel().iterator(); j.hasNext();) {
			ElementModel em = (ElementModel) j.next();

			Element element = getElementElement(em);

			schema.add(element);
		}

		container.add(schema);

		_processedSchemas.add(s);
	}

	private Element getRulesElement(ElementModel em) {
		Element rules = DocumentHelper.createElement("rules");

		for (Iterator i = em.getRules().iterator(); i.hasNext();) {
			Rule r = (Rule) i.next();

			Element rule = null;

			if (r instanceof CreateObjectRule) {
				CreateObjectRule cor = (CreateObjectRule) r;
				rule = DocumentHelper.createElement("create-object");

				rule.addAttribute("class", cor.getClassName());
			} else if (r instanceof InvokeParentRule) {
				InvokeParentRule ipr = (InvokeParentRule) r;
				rule = DocumentHelper.createElement("invoke-parent");

				rule.addAttribute("method", ipr.getMethodName());
				if (ipr.getDepth() != 1)
					rule
							.addAttribute("depth", Integer.toString(ipr
									.getDepth()));
			} else if (r instanceof PushAttributeRule) {
				PushAttributeRule par = (PushAttributeRule) r;
				rule = DocumentHelper.createElement("push-attribute");

				rule.addAttribute("attribute", par.getAttributeName());
			} else if (r instanceof PushContentRule) {
				rule = DocumentHelper.createElement("push-content");
			} else if (r instanceof ReadAttributeRule) {
				ReadAttributeRule rar = (ReadAttributeRule) r;
				rule = DocumentHelper.createElement("read-attribute");

				rule.addAttribute("property", rar.getPropertyName());
				rule.addAttribute("attribute", rar.getAttributeName());
				if (!rar.getSkipIfNull())
					rule.addAttribute("skip-if-null", "false");
				if (rar.getTranslator() != null)
					rule.addAttribute("translator", rar.getTranslator());
			} else if (r instanceof ReadContentRule) {
				ReadContentRule rcr = (ReadContentRule) r;
				rule = DocumentHelper.createElement("read-content");

				rule.addAttribute("property", rcr.getPropertyName());
			} else if (r instanceof SetModuleRule) {
				SetModuleRule smr = (SetModuleRule) r;
				rule = DocumentHelper.createElement("set-module");

				rule.addAttribute("property", smr.getPropertyName());
			} else if (r instanceof SetParentRule) {
				SetParentRule spr = (SetParentRule) r;
				rule = DocumentHelper.createElement("set-parent");

				rule.addAttribute("property", spr.getPropertyName());
			} else if (r instanceof SetPropertyRule) {
				SetPropertyRule spr = (SetPropertyRule) r;
				rule = DocumentHelper.createElement("set-property");

				rule.addAttribute("property", spr.getPropertyName());
				rule.addAttribute("value", spr.getValue());
			} else if (r instanceof ConversionDescriptor) {
				ConversionDescriptor cd = (ConversionDescriptor) r;
				rule = DocumentHelper.createElement("conversion");

				rule.addAttribute("class", cd.getClassName());
				if (!cd.getParentMethodName().equals("addElement"))
					rule
							.addAttribute("parent-method", cd
									.getParentMethodName());

				for (Iterator j = cd.getAttributeMappings().iterator(); j
						.hasNext();) {
					AttributeMappingDescriptor amd = (AttributeMappingDescriptor) j
							.next();

					Element map = DocumentHelper.createElement("map");

					map.addAttribute("attribute", amd.getAttributeName());
					map.addAttribute("property", amd.getPropertyName());

					rule.add(map);
				}
			} else {
				rule = DocumentHelper.createElement("custom");

				rule.addAttribute("class", r.getClass().getName());
			}

			if (rule != null)
				rules.add(rule);
		}
		return rules;
	}

	private Element getElementElement(ElementModel em) {
		Element element = DocumentHelper.createElement("element");
		element.addAttribute("name", em.getElementName());

		if (em.getAnnotation() != null) {
			element.addText(em.getAnnotation());
		}

		for (Iterator i = em.getAttributeModels().iterator(); i.hasNext();) {
			AttributeModel am = (AttributeModel) i.next();

			Element attribute = getAttributeElement(am);

			element.add(attribute);
		}

		for (Iterator i = em.getElementModel().iterator(); i.hasNext();) {
			ElementModel nestedEm = (ElementModel) i.next();

			Element nestedElement = getElementElement(nestedEm);

			element.add(nestedElement);
		}

		if (!em.getRules().isEmpty()) {
			Element rules = getRulesElement(em);

			element.add(rules);
		}

		return element;
	}

	private Element getAttributeElement(AttributeModel am) {
		Element attribute = DocumentHelper.createElement("attribute");

		attribute.addAttribute("name", am.getName());
		if (am.isRequired())
			attribute.addAttribute("required", "true");
		if (am.isUnique())
			attribute.addAttribute("unique", "true");
		if (!am.getTranslator().equals("smart"))
			attribute.addAttribute("translator", am.getTranslator());

		if (am.getAnnotation() != null) {
			attribute.addText(am.getAnnotation());
		}

		return attribute;
	}

	private String qualify(String id) {
		return IdUtils.qualify(_md.getModuleId(), id);
	}

	private DocumentBuilder getBuilder() {
		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();

		factory.setIgnoringComments(true);

		try {
			return factory.newDocumentBuilder();
		} catch (ParserConfigurationException e) {
			throw new ApplicationRuntimeException(e);
		}
	}

	public static Document createDefaultRegistryDocument() {
		ClassResolver resolver = new DefaultClassResolver();
		ModuleDescriptorProvider provider = new XmlModuleDescriptorProvider(
				resolver);

		Dom4JRegistrySerializer serializer = new Dom4JRegistrySerializer();

		serializer.addModuleDescriptorProvider(provider);

		return serializer.createRegistryDocument();
	}
}

Index: HivedocReport.java
===================================================================
RCS file: /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/main/java/com/anite/maven/plugin/hivedoc/HivedocReport.java,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** HivedocReport.java	14 Dec 2005 08:57:56 -0000	1.1
--- HivedocReport.java	3 May 2006 14:36:48 -0000	1.2
***************
*** 26,29 ****
--- 26,31 ----
  import java.net.URL;
  import java.net.URLClassLoader;
+ import java.util.ArrayList;
+ import java.util.Iterator;
  import java.util.List;
  import java.util.Locale;
***************
*** 35,44 ****
  import javax.xml.transform.TransformerException;
  import javax.xml.transform.TransformerFactory;
- import javax.xml.transform.dom.DOMSource;
  import javax.xml.transform.stream.StreamResult;
  import javax.xml.transform.stream.StreamSource;
  
  import org.apache.hivemind.ModuleDescriptorProvider;
- import org.apache.hivemind.ant.RegistrySerializer;
  import org.apache.hivemind.impl.DefaultClassResolver;
  import org.apache.hivemind.impl.XmlModuleDescriptorProvider;
--- 37,44 ----
***************
*** 51,58 ****
  import org.apache.maven.reporting.MavenReportException;
  import org.codehaus.doxia.sink.Sink;
! import org.w3c.dom.Document;
  
  /**
   * @goal hivedoc
   * @description builds hivedoc for the current project
   * @author ben.gidley
--- 51,61 ----
  import org.apache.maven.reporting.MavenReportException;
  import org.codehaus.doxia.sink.Sink;
! import org.dom4j.Document;
! import org.dom4j.io.DocumentSource;
! 
  
  /**
   * @goal hivedoc
+  * @requiresDependencyResolution compile
   * @description builds hivedoc for the current project
   * @author ben.gidley
***************
*** 64,67 ****
--- 67,75 ----
  
      /**
+      * @parameter
+      */
+     private List ignoredJars;
+     
+     /**
       * @readonly
       * @parameter expression="${project}"
***************
*** 77,81 ****
                      getClassLoader()));
  
!             RegistrySerializer serializer = new RegistrySerializer();
              serializer.addModuleDescriptorProvider(provider);
  
--- 85,89 ----
                      getClassLoader()));
  
!             Dom4JRegistrySerializer serializer = new Dom4JRegistrySerializer();
              serializer.addModuleDescriptorProvider(provider);
  
***************
*** 86,90 ****
              outputFolder.mkdirs();
              File outputFile = new File(outputFolder, "index.html");
!             Source registryDocument = new DOMSource(result);
              Source xsltFile = new StreamSource(this.getClass().getClassLoader().getResourceAsStream(XSLT_FILE));
              Result output = new StreamResult(new FileOutputStream(outputFile));
--- 94,98 ----
              outputFolder.mkdirs();
              File outputFile = new File(outputFolder, "index.html");
!             DocumentSource registryDocument = new DocumentSource(result);
              Source xsltFile = new StreamSource(this.getClass().getClassLoader().getResourceAsStream(XSLT_FILE));
              Result output = new StreamResult(new FileOutputStream(outputFile));
***************
*** 155,161 ****
       */
      private String[] getClasspath() throws DependencyResolutionRequiredException {
!         List paths = project.getRuntimeClasspathElements();
          paths.add(new File(project.getBuild().getOutputDirectory()).getAbsolutePath() + "/");
  
          return (String[]) paths.toArray(new String[0]);
      }
--- 163,186 ----
       */
      private String[] getClasspath() throws DependencyResolutionRequiredException {
!     	List paths = project.getRuntimeClasspathElements();
          paths.add(new File(project.getBuild().getOutputDirectory()).getAbsolutePath() + "/");
  
+         // Now remove hivemind itself and hivemind lib as they appear to have
+         // invalid hivemodules that break the xslt
+         for (int i = 0; i < paths.size(); i++) {
+             String file = (String) paths.get(i);
+ 
+             if (this.ignoredJars != null) {
+                 for (Iterator iter = ignoredJars.iterator(); iter.hasNext();) {
+                     String name = (String) iter.next();
+                     if (file.endsWith(name)) {
+                         paths.remove(file);
+                         i--;
+                     }
+                 }
+ 
+             } 
+         }
+ 
          return (String[]) paths.toArray(new String[0]);
      }
***************
*** 215,219 ****
      public void setReportOutputDirectory(File outputDirectory) {
          //noop
!         
      }
  
--- 240,244 ----
      public void setReportOutputDirectory(File outputDirectory) {
          //noop
! 
      }
  



From nobody at sheep.berlios.de  Tue May  9 15:08:43 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 9 May 2006 15:08:43 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/.settings - New directory
Message-ID: <200605091308.k49D8hd20111@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/.settings
In directory sheep:/tmp/cvs-serv17600/.settings

Log Message:
Directory /cvsroot/zebra/src/java/hivedoc-maven-plugin/.settings added to the repository




From nobody at sheep.berlios.de  Tue May  9 15:08:43 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 9 May 2006 15:08:43 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/src/main/java/META-INF - New directory
Message-ID: <200605091308.k49D8hd20115@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/main/java/META-INF
In directory sheep:/tmp/cvs-serv17600/src/main/java/META-INF

Log Message:
Directory /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/main/java/META-INF added to the repository




From nobody at sheep.berlios.de  Tue May  9 15:08:46 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 9 May 2006 15:08:46 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/.settings org.eclipse.jdt.core.prefs,NONE,1.1 org.eclipse.wst.validation.prefs,NONE,1.1 org.eclipse.wst.common.project.facet.core.xml,NONE,1.1 .component,NONE,1.1
Message-ID: <200605091308.k49D8kd20126@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/.settings
In directory sheep:/tmp/cvs-serv17677/.settings

Added Files:
	org.eclipse.jdt.core.prefs org.eclipse.wst.validation.prefs 
	org.eclipse.wst.common.project.facet.core.xml .component 
Log Message:


--- NEW FILE: org.eclipse.jdt.core.prefs ---
#Tue May 09 13:17:54 BST 2006
eclipse.preferences.version=1
org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.2
org.eclipse.jdt.core.compiler.compliance=1.4
org.eclipse.jdt.core.compiler.problem.assertIdentifier=warning
org.eclipse.jdt.core.compiler.problem.enumIdentifier=warning
org.eclipse.jdt.core.compiler.source=1.3

--- NEW FILE: org.eclipse.wst.validation.prefs ---
#Tue May 09 07:08:23 BST 2006
DELEGATES_PREFERENCE=delegateValidatorListorg.eclipse.wst.xsd.core.internal.validation.eclipse.XSDDelegatingValidator\=org.eclipse.wst.xsd.core.internal.validation.eclipse.Validator;org.eclipse.wst.wsdl.validation.internal.eclipse.WSDLDelegatingValidator\=org.eclipse.wst.wsdl.validation.internal.eclipse.Validator;
USER_BUILD_PREFERENCE=enabledBuildValidatorListorg.eclipse.jst.jsp.core.internal.validation.JSPDirectiveValidator;org.eclipse.wst.wsi.ui.internal.WSIMessageValidator;org.eclipse.jst.jsp.core.internal.validation.JSPELValidator;org.eclipse.wst.xml.core.internal.validation.eclipse.Validator;org.eclipse.wst.wsdl.validation.internal.eclipse.WSDLDelegatingValidator;org.eclipse.wst.dtd.core.internal.validation.eclipse.Validator;org.eclipse.wst.html.internal.validation.HTMLValidator;org.eclipse.jst.jsp.core.internal.validation.JSPJavaValidator;org.eclipse.wst.xsd.core.internal.validation.eclipse.XSDDelegatingValidator;
USER_MANUAL_PREFERENCE=enabledManualValidatorListorg.eclipse.jst.jsp.core.internal.validation.JSPDirectiveValidator;org.eclipse.wst.wsi.ui.internal.WSIMessageValidator;org.eclipse.jst.jsp.core.internal.validation.JSPELValidator;org.eclipse.wst.xml.core.internal.validation.eclipse.Validator;org.eclipse.wst.wsdl.validation.internal.eclipse.WSDLDelegatingValidator;org.eclipse.wst.dtd.core.internal.validation.eclipse.Validator;org.eclipse.wst.html.internal.validation.HTMLValidator;org.eclipse.jst.jsp.core.internal.validation.JSPJavaValidator;org.eclipse.wst.xsd.core.internal.validation.eclipse.XSDDelegatingValidator;
USER_PREFERENCE=overrideGlobalPreferencesfalse
eclipse.preferences.version=1

--- NEW FILE: org.eclipse.wst.common.project.facet.core.xml ---
<?xml version="1.0" encoding="UTF-8"?>
<faceted-project>
  <fixed facet="jst.utility"/>
  <fixed facet="jst.java"/>
  <installed facet="jst.utility" version="1.0"/>
  <installed facet="jst.java" version="1.4"/>
</faceted-project>

--- NEW FILE: .component ---
<?xml version="1.0" encoding="UTF-8"?>
<project-modules id="moduleCoreId">
  <wb-module deploy-name="hivedoc-maven-plugin">
    <module-type module-type-id="jst.utility">
    </module-type>
    <wb-resource deploy-path="/" source-path="src/main/java"/>
    <wb-resource deploy-path="/" source-path="src/main/resources"/>
<wb-resource deploy-path="/" source-path="/src/main/java"/>
<wb-resource deploy-path="/" source-path="/src/main/resources"/>
<wb-resource deploy-path="/" source-path="/src/test/java"/>
<wb-resource deploy-path="/" source-path="/src/test/resources"/>
<property name="java-output-path" value="/target/classes"/>
  </wb-module>
</project-modules>



From nobody at sheep.berlios.de  Tue May  9 15:08:46 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 9 May 2006 15:08:46 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/src/main/java/META-INF MANIFEST.MF,NONE,1.1
Message-ID: <200605091308.k49D8kd20122@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/main/java/META-INF
In directory sheep:/tmp/cvs-serv17677/src/main/java/META-INF

Added Files:
	MANIFEST.MF 
Log Message:


--- NEW FILE: MANIFEST.MF ---
Manifest-Version: 1.0
Class-Path: 




From nobody at sheep.berlios.de  Tue May  9 15:08:47 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 9 May 2006 15:08:47 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin pom.xml,1.2,1.3
Message-ID: <200605091308.k49D8ld20130@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin
In directory sheep:/tmp/cvs-serv17677

Modified Files:
	pom.xml 
Log Message:


Index: pom.xml
===================================================================
RCS file: /cvsroot/zebra/src/java/hivedoc-maven-plugin/pom.xml,v
retrieving revision 1.2
retrieving revision 1.3
diff -C2 -d -r1.2 -r1.3
*** pom.xml	3 May 2006 14:36:49 -0000	1.2
--- pom.xml	9 May 2006 13:11:33 -0000	1.3
***************
*** 110,114 ****
          <repository>
              <id>zebra-berlios</id>
!             <url>scp://shell.berlios.de/home/groups/zebra/htdocs/maven2</url>
          </repository>
          <site>
--- 110,114 ----
          <repository>
              <id>zebra-berlios</id>
!             <url>scp://shell.berlios.de/home/groups/zebra/htdocs/maven2plugins</url>
          </repository>
          <site>



From nobody at sheep.berlios.de  Tue May 23 16:52:25 2006
From: nobody at sheep.berlios.de (mik3_jon3s)
Date: Tue, 23 May 2006 16:52:25 +0200
Subject: [Zebra-checkins] zebra/src/java/fulcrum-hivemind-quartz/src/main/java/org/apache/fulcrum/quartz/factory QuartzSchedulerFactory.java,1.7,1.8
Message-ID: <200605231452.k4NEqPT00870@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/fulcrum-hivemind-quartz/src/main/java/org/apache/fulcrum/quartz/factory
In directory sheep:/tmp/cvs-serv13594/src/main/java/org/apache/fulcrum/quartz/factory

Modified Files:
	QuartzSchedulerFactory.java 
Log Message:
format

Index: QuartzSchedulerFactory.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/fulcrum-hivemind-quartz/src/main/java/org/apache/fulcrum/quartz/factory/QuartzSchedulerFactory.java,v
retrieving revision 1.7
retrieving revision 1.8
diff -C2 -d -r1.7 -r1.8
*** QuartzSchedulerFactory.java	22 May 2006 07:48:59 -0000	1.7
--- QuartzSchedulerFactory.java	23 May 2006 14:57:04 -0000	1.8
***************
*** 36,166 ****
  import org.quartz.impl.StdSchedulerFactory;
  
! public class QuartzSchedulerFactory implements ServiceImplementationFactory,
! 		RegistryShutdownListener {
  
! 	private static final Log log = LogFactory
! 			.getLog(QuartzSchedulerFactory.class);
  
! 	private static final String HIBERNATE_DRIVER_KEY = "hibernate.connection.driver_class";
  
! 	private static final String HIBERNATE_PASSWORD_KEY = "hibernate.connection.password";
  
! 	private static final String HIBERNATE_URL_KEY = "hibernate.connection.url";
  
! 	private static final String HIBERNATE_USERNAME_KEY = "hibernate.connection.username";
  
  
! 	private static final String DEFAULT_MAX_CONNECTIONS = "27";
  
! 	/*
! 	 * This class only supports use of the following databases/drivers
! 	 * to support a new db, create a new class to create the tables using
! 	 * Postgres ones as an example and add the appropriate 
! 	 * block into the createTables method.
! 	 */
! 	private static final String POSTGRESQL = "org.postgresql.Driver";
! 	
! 	private Scheduler scheduler = null;
  
! 	private HibernateSessionFactory hibernateSessionFactory = null;
  
! 	public HibernateSessionFactory getHibernateSessionFactory() {
! 		return hibernateSessionFactory;
! 	}
  
! 	public void setHibernateSessionFactory(
! 			HibernateSessionFactory hibernateSessionFactory) {
! 		this.hibernateSessionFactory = hibernateSessionFactory;
! 	}
  
! 	public Object createCoreServiceImplementation(
! 			ServiceImplementationFactoryParameters arg0) {
! 		try {
! 			/*
! 			 * check and see if we have scheduler tables in the DB.
! 			 */
! 			Properties hibernateProperties = hibernateSessionFactory
! 					.getHibernateProperties();
! 			String driver = hibernateProperties.getProperty(HIBERNATE_DRIVER_KEY);
! 			log.debug("url:" +hibernateProperties.getProperty(HIBERNATE_URL_KEY));
!             log.debug("username:" +hibernateProperties.getProperty(HIBERNATE_USERNAME_KEY));
!             log.debug("password:" +hibernateProperties.getProperty(HIBERNATE_PASSWORD_KEY));
! 			checkTables(driver);
! 			Properties defaults = new Properties();
! 			defaults.load(this.getClass().getResourceAsStream(
! 					"/quartz.properties"));
! 			defaults.put("org.quartz.dataSource.quartzDS.driver",
! 					hibernateProperties.getProperty(HIBERNATE_DRIVER_KEY));
! 			defaults.put("org.quartz.dataSource.quartzDS.URL",
! 					hibernateProperties.getProperty(HIBERNATE_URL_KEY));
! 			defaults.put("org.quartz.dataSource.quartzDS.user",
! 					hibernateProperties.getProperty(HIBERNATE_USERNAME_KEY));
! 			defaults.put("org.quartz.dataSource.quartzDS.password",
! 					hibernateProperties.getProperty(HIBERNATE_PASSWORD_KEY));
! 			defaults.put("org.quartz.dataSource.quartzDS.maxConnections",
! 					DEFAULT_MAX_CONNECTIONS);
!             log.info(defaults.toString());
! 			SchedulerFactory schedulerFactory = new StdSchedulerFactory(
! 					defaults);
! 			scheduler = schedulerFactory.getScheduler();
! 			scheduler.start();
! 		} catch (IOException ioe) {
! 			throw new NestableRuntimeException(ioe);
! 		} catch (SchedulerException se) {
! 			throw new NestableRuntimeException(se);
! 		} catch (SQLException sqle) {
! 			log.error("SQLException caught:", sqle);
! 			throw new NestableRuntimeException(sqle);
! 		}
! 		
! 		return scheduler;
! 	}
  
! 	public void registryDidShutdown() {
! 		try {
! 			scheduler.shutdown();
! 			scheduler = null;
! 		} catch (SchedulerException se) {
! 			throw new NestableRuntimeException(se);
! 		}
  
! 	}
  
- 	/**
- 	 * method to check the JobStore to see if tables exist and if not create
- 	 * them.
- 	 */
- 	private void checkTables(String driverClassName) throws SQLException {
- 		Connection conn = hibernateSessionFactory
- 				.getConnectionProviderDataSource().getConnection();
- 		String query = "select * from qrtz_job_details;";
- 		try {
- 			/*
- 			 * we are not interested in the result just whether an
- 			 * exception is thrown on a table not found
- 			 */
- 			Statement stmt = conn.createStatement();
- 			stmt.execute(query);
- 		} catch (SQLException sqle) {
- 			/*
- 			 * no table.
- 			 */
- 			createTables(conn, driverClassName);
- 		}
- 	}
- 	
- 	/**
- 	 * creates the tables for the Quartz jobStore.
- 	 */
- 	private void createTables(Connection conn, String driver) throws SQLException
- 	{
- 		if (POSTGRESQL.equalsIgnoreCase(driver))
- 		{
- 			CreatePostgresTables tableCreator = new CreatePostgresTables();
- 			tableCreator.createTables(conn);
- 			return;
- 		}
- 		throw new RuntimeException("Driver not recognised as Postgres:" + driver);
- 	}
- 	
  }
--- 36,156 ----
  import org.quartz.impl.StdSchedulerFactory;
  
! public class QuartzSchedulerFactory implements ServiceImplementationFactory, RegistryShutdownListener {
  
!     private static final Log log = LogFactory.getLog(QuartzSchedulerFactory.class);
  
!     private static final String HIBERNATE_DRIVER_KEY = "hibernate.connection.driver_class";
  
!     private static final String HIBERNATE_PASSWORD_KEY = "hibernate.connection.password";
  
!     private static final String HIBERNATE_URL_KEY = "hibernate.connection.url";
  
!     private static final String HIBERNATE_USERNAME_KEY = "hibernate.connection.username";
  
+     private static final String DEFAULT_MAX_CONNECTIONS = "27";
  
!     /*
!      * This class only supports use of the following databases/drivers
!      * to support a new db, create a new class to create the tables using
!      * Postgres ones as an example and add the appropriate 
!      * block into the createTables method.
!      */
!     private static final String POSTGRESQL = "org.postgresql.Driver";
  
!     private Scheduler scheduler = null;
  
!     private HibernateSessionFactory hibernateSessionFactory = null;
  
!     public HibernateSessionFactory getHibernateSessionFactory() {
!         return hibernateSessionFactory;
!     }
  
!     public void setHibernateSessionFactory(HibernateSessionFactory hibernateSessionFactory) {
!         this.hibernateSessionFactory = hibernateSessionFactory;
!     }
  
!     public Object createCoreServiceImplementation(ServiceImplementationFactoryParameters arg0) {
  
!         if (scheduler == null) {
!             try {
!                 /*
!                  * check and see if we have scheduler tables in the DB.
!                  */
!                 Properties hibernateProperties = hibernateSessionFactory.getHibernateProperties();
!                 String driver = hibernateProperties.getProperty(HIBERNATE_DRIVER_KEY);
!                 log.debug("url:" + hibernateProperties.getProperty(HIBERNATE_URL_KEY));
!                 log.debug("username:" + hibernateProperties.getProperty(HIBERNATE_USERNAME_KEY));
!                 log.debug("password:" + hibernateProperties.getProperty(HIBERNATE_PASSWORD_KEY));
!                 checkTables(driver);
!                 Properties defaults = new Properties();
!                 defaults.load(this.getClass().getResourceAsStream("/quartz.properties"));
!                 defaults.put("org.quartz.dataSource.quartzDS.driver", hibernateProperties
!                         .getProperty(HIBERNATE_DRIVER_KEY));
!                 defaults.put("org.quartz.dataSource.quartzDS.URL", hibernateProperties.getProperty(HIBERNATE_URL_KEY));
!                 defaults.put("org.quartz.dataSource.quartzDS.user", hibernateProperties
!                         .getProperty(HIBERNATE_USERNAME_KEY));
!                 defaults.put("org.quartz.dataSource.quartzDS.password", hibernateProperties
!                         .getProperty(HIBERNATE_PASSWORD_KEY));
!                 defaults.put("org.quartz.dataSource.quartzDS.maxConnections", DEFAULT_MAX_CONNECTIONS);
!                 log.info(defaults.toString());
!                 SchedulerFactory schedulerFactory = new StdSchedulerFactory(defaults);
!                 scheduler = schedulerFactory.getScheduler();
!                 scheduler.start();
!             } catch (IOException ioe) {
!                 throw new NestableRuntimeException(ioe);
!             } catch (SchedulerException se) {
!                 throw new NestableRuntimeException(se);
!             } catch (SQLException sqle) {
!                 log.error("SQLException caught:", sqle);
!                 throw new NestableRuntimeException(sqle);
!             }
!         }
  
!         return scheduler;
!     }
! 
!     public void registryDidShutdown() {
!         try {
!             scheduler.shutdown();
!             scheduler = null;
!         } catch (SchedulerException se) {
!             throw new NestableRuntimeException(se);
!         }
! 
!     }
! 
!     /**
!      * method to check the JobStore to see if tables exist and if not create
!      * them.
!      */
!     private void checkTables(String driverClassName) throws SQLException {
!         Connection conn = hibernateSessionFactory.getConnectionProviderDataSource().getConnection();
!         String query = "select * from qrtz_job_details;";
!         try {
!             /*
!              * we are not interested in the result just whether an
!              * exception is thrown on a table not found
!              */
!             Statement stmt = conn.createStatement();
!             stmt.execute(query);
!         } catch (SQLException sqle) {
!             /*
!              * no table.
!              */
!             createTables(conn, driverClassName);
!         }
!     }
! 
!     /**
!      * creates the tables for the Quartz jobStore.
!      */
!     private void createTables(Connection conn, String driver) throws SQLException {
!         if (POSTGRESQL.equalsIgnoreCase(driver)) {
!             CreatePostgresTables tableCreator = new CreatePostgresTables();
!             tableCreator.createTables(conn);
!             return;
!         }
!         throw new RuntimeException("Driver not recognised as Postgres:" + driver);
!     }
  
  }



From nobody at sheep.berlios.de  Thu May 25 15:55:38 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Thu, 25 May 2006 15:55:38 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/.settings org.eclipse.wst.validation.prefs,1.1,1.2
Message-ID: <200605251355.k4PDtcT09682@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/.settings
In directory sheep:/tmp/cvs-serv107/.settings

Modified Files:
	org.eclipse.wst.validation.prefs 
Log Message:


Index: org.eclipse.wst.validation.prefs
===================================================================
RCS file: /cvsroot/zebra/src/java/hivedoc-maven-plugin/.settings/org.eclipse.wst.validation.prefs,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** org.eclipse.wst.validation.prefs	9 May 2006 13:11:33 -0000	1.1
--- org.eclipse.wst.validation.prefs	25 May 2006 14:00:30 -0000	1.2
***************
*** 1,6 ****
! #Tue May 09 07:08:23 BST 2006
  DELEGATES_PREFERENCE=delegateValidatorListorg.eclipse.wst.xsd.core.internal.validation.eclipse.XSDDelegatingValidator\=org.eclipse.wst.xsd.core.internal.validation.eclipse.Validator;org.eclipse.wst.wsdl.validation.internal.eclipse.WSDLDelegatingValidator\=org.eclipse.wst.wsdl.validation.internal.eclipse.Validator;
! USER_BUILD_PREFERENCE=enabledBuildValidatorListorg.eclipse.jst.jsp.core.internal.validation.JSPDirectiveValidator;org.eclipse.wst.wsi.ui.internal.WSIMessageValidator;org.eclipse.jst.jsp.core.internal.validation.JSPELValidator;org.eclipse.wst.xml.core.internal.validation.eclipse.Validator;org.eclipse.wst.wsdl.validation.internal.eclipse.WSDLDelegatingValidator;org.eclipse.wst.dtd.core.internal.validation.eclipse.Validator;org.eclipse.wst.html.internal.validation.HTMLValidator;org.eclipse.jst.jsp.core.internal.validation.JSPJavaValidator;org.eclipse.wst.xsd.core.internal.validation.eclipse.XSDDelegatingValidator;
! USER_MANUAL_PREFERENCE=enabledManualValidatorListorg.eclipse.jst.jsp.core.internal.validation.JSPDirectiveValidator;org.eclipse.wst.wsi.ui.internal.WSIMessageValidator;org.eclipse.jst.jsp.core.internal.validation.JSPELValidator;org.eclipse.wst.xml.core.internal.validation.eclipse.Validator;org.eclipse.wst.wsdl.validation.internal.eclipse.WSDLDelegatingValidator;org.eclipse.wst.dtd.core.internal.validation.eclipse.Validator;org.eclipse.wst.html.internal.validation.HTMLValidator;org.eclipse.jst.jsp.core.internal.validation.JSPJavaValidator;org.eclipse.wst.xsd.core.internal.validation.eclipse.XSDDelegatingValidator;
  USER_PREFERENCE=overrideGlobalPreferencesfalse
  eclipse.preferences.version=1
--- 1,6 ----
! #Wed May 10 15:44:29 BST 2006
  DELEGATES_PREFERENCE=delegateValidatorListorg.eclipse.wst.xsd.core.internal.validation.eclipse.XSDDelegatingValidator\=org.eclipse.wst.xsd.core.internal.validation.eclipse.Validator;org.eclipse.wst.wsdl.validation.internal.eclipse.WSDLDelegatingValidator\=org.eclipse.wst.wsdl.validation.internal.eclipse.Validator;
! USER_BUILD_PREFERENCE=enabledBuildValidatorListorg.eclipse.jst.jsp.core.internal.validation.JSPELValidator;org.eclipse.wst.html.internal.validation.HTMLValidator;org.eclipse.wst.wsi.ui.internal.WSIMessageValidator;org.eclipse.jst.jsp.core.internal.validation.JSPDirectiveValidator;org.eclipse.wst.xsd.core.internal.validation.eclipse.XSDDelegatingValidator;org.eclipse.wst.xml.core.internal.validation.eclipse.Validator;org.eclipse.wst.wsdl.validation.internal.eclipse.WSDLDelegatingValidator;org.eclipse.jst.jsp.core.internal.validation.JSPJavaValidator;org.eclipse.wst.dtd.core.internal.validation.eclipse.Validator;
! USER_MANUAL_PREFERENCE=enabledManualValidatorListorg.eclipse.jst.jsp.core.internal.validation.JSPELValidator;org.eclipse.wst.html.internal.validation.HTMLValidator;org.eclipse.wst.wsi.ui.internal.WSIMessageValidator;org.eclipse.jst.jsp.core.internal.validation.JSPDirectiveValidator;org.eclipse.wst.xsd.core.internal.validation.eclipse.XSDDelegatingValidator;org.eclipse.wst.xml.core.internal.validation.eclipse.Validator;org.eclipse.wst.wsdl.validation.internal.eclipse.WSDLDelegatingValidator;org.eclipse.jst.jsp.core.internal.validation.JSPJavaValidator;org.eclipse.wst.dtd.core.internal.validation.eclipse.Validator;
  USER_PREFERENCE=overrideGlobalPreferencesfalse
  eclipse.preferences.version=1



From nobody at sheep.berlios.de  Thu May 25 17:53:03 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Thu, 25 May 2006 17:53:03 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin/src/main/java/com/anite/maven/plugin/hivedoc HivedocReport.java,1.2,1.3
Message-ID: <200605251553.k4PFr3T18185@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/main/java/com/anite/maven/plugin/hivedoc
In directory sheep:/tmp/cvs-serv22290/src/main/java/com/anite/maven/plugin/hivedoc

Modified Files:
	HivedocReport.java 
Log Message:


Index: HivedocReport.java
===================================================================
RCS file: /cvsroot/zebra/src/java/hivedoc-maven-plugin/src/main/java/com/anite/maven/plugin/hivedoc/HivedocReport.java,v
retrieving revision 1.2
retrieving revision 1.3
diff -C2 -d -r1.2 -r1.3
*** HivedocReport.java	3 May 2006 14:36:48 -0000	1.2
--- HivedocReport.java	25 May 2006 15:57:57 -0000	1.3
***************
*** 56,59 ****
--- 56,60 ----
  
  /**
+  * @phase site
   * @goal hivedoc
   * @requiresDependencyResolution compile
***************
*** 218,222 ****
  
      public void generate(Sink sink, Locale locale) throws MavenReportException {
!        //noop - done in execute
          
      }
--- 219,229 ----
  
      public void generate(Sink sink, Locale locale) throws MavenReportException {
!     	try {
! 			execute();
! 		} catch (MojoExecutionException e) {
! 			throw new MavenReportException("It broke");
! 		} catch (MojoFailureException e) {
! 			throw new MavenReportException("It broke");
! 		}
          
      }



From nobody at sheep.berlios.de  Thu May 25 17:53:03 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Thu, 25 May 2006 17:53:03 +0200
Subject: [Zebra-checkins] src/java/hivedoc-maven-plugin pom.xml,1.3,1.4
Message-ID: <200605251553.k4PFr3T18189@bat.berlios.de>

Update of /cvsroot/zebra/src/java/hivedoc-maven-plugin
In directory sheep:/tmp/cvs-serv22290

Modified Files:
	pom.xml 
Log Message:


Index: pom.xml
===================================================================
RCS file: /cvsroot/zebra/src/java/hivedoc-maven-plugin/pom.xml,v
retrieving revision 1.3
retrieving revision 1.4
diff -C2 -d -r1.3 -r1.4
*** pom.xml	9 May 2006 13:11:33 -0000	1.3
--- pom.xml	25 May 2006 15:57:57 -0000	1.4
***************
*** 7,11 ****
      <packaging>maven-plugin</packaging>
      <name>Maven Hivedoc Plugin</name>
!     <version>0.3</version>
      <inceptionYear>2005</inceptionYear>
      <developers>
--- 7,11 ----
      <packaging>maven-plugin</packaging>
      <name>Maven Hivedoc Plugin</name>
!     <version>0.4</version>
      <inceptionYear>2005</inceptionYear>
      <developers>



From nobody at sheep.berlios.de  Fri May 26 17:25:23 2006
From: nobody at sheep.berlios.de (mik3_jon3s)
Date: Fri, 26 May 2006 17:25:23 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/manager - New directory
Message-ID: <200605261525.k4QFPNT22178@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/manager
In directory sheep:/tmp/cvs-serv26635/src/main/java/com/anite/zebra/hivemind/manager

Log Message:
Directory /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/manager added to the repository




From nobody at sheep.berlios.de  Fri May 26 17:25:24 2006
From: nobody at sheep.berlios.de (mik3_jon3s)
Date: Fri, 26 May 2006 17:25:24 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask - New directory
Message-ID: <200605261525.k4QFPOT22186@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask
In directory sheep:/tmp/cvs-serv26635/src/main/java/com/anite/zebra/hivemind/om/timedtask

Log Message:
Directory /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask added to the repository




From nobody at sheep.berlios.de  Fri May 26 17:25:23 2006
From: nobody at sheep.berlios.de (mik3_jon3s)
Date: Fri, 26 May 2006 17:25:23 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/manager/impl - New directory
Message-ID: <200605261525.k4QFPNT22182@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/manager/impl
In directory sheep:/tmp/cvs-serv26635/src/main/java/com/anite/zebra/hivemind/manager/impl

Log Message:
Directory /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/manager/impl added to the repository




From nobody at sheep.berlios.de  Fri May 26 17:25:28 2006
From: nobody at sheep.berlios.de (mik3_jon3s)
Date: Fri, 26 May 2006 17:25:28 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/taskAction QuartzServiceTaskAction.java,1.5,1.6
Message-ID: <200605261525.k4QFPST22213@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/taskAction
In directory sheep:/tmp/cvs-serv26649/src/main/java/com/anite/zebra/hivemind/taskAction

Modified Files:
	QuartzServiceTaskAction.java 
Log Message:
checked in implementation for fix for quartz

Index: QuartzServiceTaskAction.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/taskAction/QuartzServiceTaskAction.java,v
retrieving revision 1.5
retrieving revision 1.6
diff -C2 -d -r1.5 -r1.6
*** QuartzServiceTaskAction.java	22 May 2006 07:42:54 -0000	1.5
--- QuartzServiceTaskAction.java	26 May 2006 15:30:30 -0000	1.6
***************
*** 22,25 ****
--- 22,26 ----
  import org.apache.commons.logging.Log;
  import org.apache.commons.logging.LogFactory;
+ import org.hibernate.Session;
  import org.quartz.JobDetail;
  import org.quartz.Scheduler;
***************
*** 56,59 ****
--- 57,70 ----
      private Zebra zebra;
  
+     private Session session;
+     
+     public Session getSession() {
+         return session;
+     }
+ 
+     public void setSession(Session session) {
+         this.session = session;
+     }
+     
      public Zebra getZebra() {
          return zebra;
***************
*** 205,208 ****
--- 216,221 ----
          return delay * SECONDS_DELAY;
      }
+ 
+     
  
  }



From nobody at sheep.berlios.de  Fri May 26 17:25:28 2006
From: nobody at sheep.berlios.de (mik3_jon3s)
Date: Fri, 26 May 2006 17:25:28 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/manager/impl HibernateTimeManager.java,NONE,1.1 HibernateManager.java,NONE,1.1 HibernateTimedTaskManager.java,NONE,1.1
Message-ID: <200605261525.k4QFPST22197@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/manager/impl
In directory sheep:/tmp/cvs-serv26649/src/main/java/com/anite/zebra/hivemind/manager/impl

Added Files:
	HibernateTimeManager.java HibernateManager.java 
	HibernateTimedTaskManager.java 
Log Message:
checked in implementation for fix for quartz

--- NEW FILE: HibernateTimeManager.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.manager.impl;

import com.anite.zebra.hivemind.om.timedtask.Time;

public class HibernateTimeManager extends HibernateManager<Time> {


}

--- NEW FILE: HibernateManager.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.manager.impl;

import java.lang.reflect.ParameterizedType;
import java.util.List;

import org.hibernate.Session;
import org.hibernate.Transaction;

import com.anite.zebra.hivemind.manager.BaseManager;

public abstract class HibernateManager<T> implements BaseManager<T> {

    private Session session;

   

    protected Session getSession() {
        return session;
    }

    public void setSession(Session session) {
        this.session = session;
    }

    public void delete(T object) {

        Transaction tx = session.beginTransaction();
        session.delete(object);
        tx.commit();

    }

    @SuppressWarnings("unchecked")
    public T get(Long id) {
        return (T) session.load(getParameterClazz(), id);
    }

    public List<T> getAll() {
       return (List<T>) session.createQuery("from " + getParameterClazz());
    }

    public void saveOrUpdate(T object) {
        Transaction tx = session.beginTransaction();
        session.saveOrUpdate(object);
        tx.commit();
    }

    private Class getParameterClazz() {
        ParameterizedType ptype = (ParameterizedType) this.getClass().getGenericSuperclass();
        return (Class) ptype.getActualTypeArguments()[0];
    }

}
--- NEW FILE: HibernateTimedTaskManager.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.manager.impl;

import java.util.List;

import com.anite.zebra.hivemind.manager.TimedTaskManager;
import com.anite.zebra.hivemind.om.timedtask.Time;
import com.anite.zebra.hivemind.om.timedtask.TimedTask;

public class HibernateTimedTaskManager extends HibernateManager<TimedTask> implements TimedTaskManager {

    public List<TimedTask> getTasksForTime(Time time) {
        // TODO Auto-generated method stub
        return null;
    }
    
    

}



From nobody at sheep.berlios.de  Fri May 26 17:25:27 2006
From: nobody at sheep.berlios.de (mik3_jon3s)
Date: Fri, 26 May 2006 17:25:27 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask TimedTask.java,NONE,1.1 FiredTimedTask.java,NONE,1.1 Time.java,NONE,1.1 BaseDomain.java,NONE,1.1
Message-ID: <200605261525.k4QFPRT22193@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask
In directory sheep:/tmp/cvs-serv26649/src/main/java/com/anite/zebra/hivemind/om/timedtask

Added Files:
	TimedTask.java FiredTimedTask.java Time.java BaseDomain.java 
Log Message:
checked in implementation for fix for quartz

--- NEW FILE: TimedTask.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.om.timedtask;

import javax.persistence.Entity;
import javax.persistence.ManyToOne;

import com.anite.zebra.hivemind.om.state.ZebraTaskInstance;

@Entity
public class TimedTask extends BaseDomain {

    private ZebraTaskInstance zebraTaskInstance;

    private Time time;

    public Time getTime() {
        return time;
    }

    public void setTime(Time time) {
        this.time = time;
    }

    @ManyToOne
    public ZebraTaskInstance getZebraTaskInstance() {
        return zebraTaskInstance;
    }

    public void setZebraTaskInstance(ZebraTaskInstance zebraTaskInstance) {
        this.zebraTaskInstance = zebraTaskInstance;
    }

}

--- NEW FILE: FiredTimedTask.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.om.timedtask;

import java.util.Date;

import javax.persistence.Entity;

import com.anite.zebra.hivemind.om.state.ZebraTaskInstanceHistory;

@Entity
public class FiredTimedTask extends TimedTask {

    private Date startTime;

    private Date endTime;

    private ZebraTaskInstanceHistory zebraTaskInstanceHistory;

    private boolean failed;

    private String exceptionText;

    public Date getEndTime() {
        return endTime;
    }

    public void setEndTime(Date endTime) {
        this.endTime = endTime;
    }

    public String getExceptionText() {
        return exceptionText;
    }

    public void setExceptionText(String exceptionText) {
        this.exceptionText = exceptionText;
    }

    public boolean isFailed() {
        return failed;
    }

    public void setFailed(boolean failed) {
        this.failed = failed;
    }

    public Date getStartTime() {
        return startTime;
    }

    public void setStartTime(Date startTime) {
        this.startTime = startTime;
    }


    public ZebraTaskInstanceHistory getZebraTaskInstanceHistory() {
        return zebraTaskInstanceHistory;
    }

    public void setZebraTaskInstanceHistory(ZebraTaskInstanceHistory zebraTaskInstanceHistory) {
        this.zebraTaskInstanceHistory = zebraTaskInstanceHistory;
    }
    
    public FiredTimedTask() {
        
    }
    
    public FiredTimedTask(TimedTask timedTask) {
        // set timed task properties to the fired time task
    }

}

--- NEW FILE: Time.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.om.timedtask;

import javax.persistence.Entity;

@Entity
public class Time extends BaseDomain {

    private String name;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
    
    

}

--- NEW FILE: BaseDomain.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.om.timedtask;

import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.MappedSuperclass;
import javax.persistence.Version;

@MappedSuperclass
public class BaseDomain {
    
    private Long id;
    
    private Long version;

    @Version
    public Long getVersion() {
        return version;
    }

    public void setVersion(Long version) {
        this.version = version;
    }

    @Id @GeneratedValue 
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }
    

}



From nobody at sheep.berlios.de  Fri May 26 17:25:28 2006
From: nobody at sheep.berlios.de (mik3_jon3s)
Date: Fri, 26 May 2006 17:25:28 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/impl TimedTaskRunnerImpl.java,NONE,1.1
Message-ID: <200605261525.k4QFPST22205@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/impl
In directory sheep:/tmp/cvs-serv26649/src/main/java/com/anite/zebra/hivemind/impl

Added Files:
	TimedTaskRunnerImpl.java 
Log Message:
checked in implementation for fix for quartz

--- NEW FILE: TimedTaskRunnerImpl.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.impl;

import java.util.List;

import org.apache.commons.logging.Log;

import com.anite.zebra.core.exceptions.TransitionException;
import com.anite.zebra.core.state.api.ITaskInstance;
import com.anite.zebra.hivemind.api.TimedTaskRunner;
import com.anite.zebra.hivemind.manager.FiredTimedTaskManager;
import com.anite.zebra.hivemind.manager.TimedTaskManager;
import com.anite.zebra.hivemind.om.state.ZebraTaskInstance;
import com.anite.zebra.hivemind.om.timedtask.FiredTimedTask;
import com.anite.zebra.hivemind.om.timedtask.Time;
import com.anite.zebra.hivemind.om.timedtask.TimedTask;

public class TimedTaskRunnerImpl implements TimedTaskRunner {

    private TimedTaskManager timedTaskManager;

    private FiredTimedTaskManager firedTimedTaskManager;

    private Log log;

    private Zebra zebra;

    public void setZebra(Zebra zebra) {
        this.zebra = zebra;
    }

    /*
     * method for injection
     */
    public void setFiredTimedTaskManager(FiredTimedTaskManager firedTimedTaskManager) {
        this.firedTimedTaskManager = firedTimedTaskManager;
    }

    /*
     * Method for injection
     */
    public void setLog(Log log) {
        this.log = log;
    }

    /*
     * Method for injection
     */
    public void setTimedTaskManager(TimedTaskManager timedTaskManager) {
        this.timedTaskManager = timedTaskManager;
    }

    /*
     * (non-Javadoc)
     * @see com.anite.zebra.hivemind.api.TimedTaskRunner#runTasksForTime(com.anite.zebra.hivemind.om.timedtask.Time)
     */
    public void runTasksForTime(Time time) {

        List<TimedTask> timedTasks = timedTaskManager.getTasksForTime(time);

        for (TimedTask timedTask : timedTasks) {

            runTask(timedTask);

        }

    }

    public void scheduleTimedTask(ZebraTaskInstance zti, int hours, int mins) {

        TimedTask timedTask = new TimedTask();
        timedTask.setZebraTaskInstance(zti);
        // create time 
        // add to timed task

    }

    /**
     * Runt the timed task by retrieving the associated zebra task instance and transtioningit it
     * 
     * @param timedTask
     */
    protected void runTask(TimedTask timedTask) {

        FiredTimedTask firedTimedTask = new FiredTimedTask(timedTask);

        ZebraTaskInstance zti = timedTask.getZebraTaskInstance();

        zti.setOutcome("Done");
        zti.setState(ITaskInstance.STATE_AWAITINGCOMPLETE);

        try {

            zebra.transitionTask(zti);

            // set all the properties on the fired timed task

        } catch (TransitionException e) {
            // log the execption also?
            firedTimedTask.setExceptionText(e.getMessage());
            firedTimedTask.setFailed(true);

        } finally {
            firedTimedTaskManager.saveOrUpdate(firedTimedTask);
        }

    }

}



From nobody at sheep.berlios.de  Fri May 26 17:25:28 2006
From: nobody at sheep.berlios.de (mik3_jon3s)
Date: Fri, 26 May 2006 17:25:28 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/api TimedTaskRunner.java,NONE,1.1
Message-ID: <200605261525.k4QFPST22209@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/api
In directory sheep:/tmp/cvs-serv26649/src/main/java/com/anite/zebra/hivemind/api

Added Files:
	TimedTaskRunner.java 
Log Message:
checked in implementation for fix for quartz

--- NEW FILE: TimedTaskRunner.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.api;

import com.anite.zebra.hivemind.om.state.ZebraTaskInstance;
import com.anite.zebra.hivemind.om.timedtask.Time;
import com.anite.zebra.hivemind.om.timedtask.TimedTask;

public interface TimedTaskRunner {

    /**
     * Run all the {@link TimedTask}'s for the {@link Time} 
     * @param time
     */
    public void runTasksForTime(Time time);

    /**
     * For the zebra task instance create a new timed task for to run at a specific time (this )
     * @param zti
     * @param time
     */
    public void scheduleTimedTask(ZebraTaskInstance zti, int hours, int mins);

}



From nobody at sheep.berlios.de  Fri May 26 17:25:28 2006
From: nobody at sheep.berlios.de (mik3_jon3s)
Date: Fri, 26 May 2006 17:25:28 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/manager TimeManager.java,NONE,1.1 TimedTaskManager.java,NONE,1.1 BaseManager.java,NONE,1.1 FiredTimedTaskManager.java,NONE,1.1
Message-ID: <200605261525.k4QFPST22201@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/manager
In directory sheep:/tmp/cvs-serv26649/src/main/java/com/anite/zebra/hivemind/manager

Added Files:
	TimeManager.java TimedTaskManager.java BaseManager.java 
	FiredTimedTaskManager.java 
Log Message:
checked in implementation for fix for quartz

--- NEW FILE: TimeManager.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.manager;

import com.anite.zebra.hivemind.om.timedtask.Time;

public interface TimeManager extends BaseManager {

    public Time createOrFetchTime(int hours, int mins);

}

--- NEW FILE: TimedTaskManager.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.manager;

import java.util.List;

import com.anite.zebra.hivemind.om.timedtask.Time;
import com.anite.zebra.hivemind.om.timedtask.TimedTask;

public interface TimedTaskManager extends BaseManager<TimedTask> {
    
    public List<TimedTask> getTasksForTime(Time time);     
       

}

--- NEW FILE: BaseManager.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.manager;

import java.util.List;

public interface BaseManager<T> {
    
    public T get(Long id) ;
    
    public void saveOrUpdate(T object);
    
    public void delete(T object);
    
    public List<T> getAll();

}

--- NEW FILE: FiredTimedTaskManager.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.manager;

import com.anite.zebra.hivemind.om.timedtask.FiredTimedTask;

public interface FiredTimedTaskManager extends BaseManager<FiredTimedTask> {

}



From nobody at sheep.berlios.de  Fri May 26 17:25:45 2006
From: nobody at sheep.berlios.de (mik3_jon3s)
Date: Fri, 26 May 2006 17:25:45 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/test/resources hibernate.cfg.xml,1.7,1.8
Message-ID: <200605261525.k4QFPjT22228@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/resources
In directory sheep:/tmp/cvs-serv26703/src/test/resources

Modified Files:
	hibernate.cfg.xml 
Log Message:
mapped new classes

Index: hibernate.cfg.xml
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/resources/hibernate.cfg.xml,v
retrieving revision 1.7
retrieving revision 1.8
diff -C2 -d -r1.7 -r1.8
*** hibernate.cfg.xml	17 Feb 2006 15:20:12 -0000	1.7
--- hibernate.cfg.xml	26 May 2006 15:30:46 -0000	1.8
***************
*** 25,33 ****
  		<mapping class="com.anite.zebra.hivemind.om.state.ZebraTaskInstance"/>
  		<mapping class="com.anite.zebra.hivemind.om.state.ZebraTaskInstanceHistory"/>
  		<mapping class="org.apache.fulcrum.security.hibernate.dynamic.model.HibernateDynamicUser"/>
  		<mapping class="org.apache.fulcrum.security.hibernate.dynamic.model.HibernateDynamicGroup"/>
  		<mapping class="org.apache.fulcrum.security.hibernate.dynamic.model.HibernateDynamicRole"/>
! 		<mapping
! 			class="org.apache.fulcrum.security.hibernate.dynamic.model.HibernateDynamicPermission"/>
  	</session-factory>
  </hibernate-configuration>
--- 25,39 ----
  		<mapping class="com.anite.zebra.hivemind.om.state.ZebraTaskInstance"/>
  		<mapping class="com.anite.zebra.hivemind.om.state.ZebraTaskInstanceHistory"/>
+ 		
+ 		<mapping class="com.anite.zebra.hivemind.om.timedtask.FiredTimedTask"/>
+ 		<mapping class="com.anite.zebra.hivemind.om.timedtask.Time"/>
+ 		<mapping class="com.anite.zebra.hivemind.om.timedtask.TimedTask"/>
+ 		
  		<mapping class="org.apache.fulcrum.security.hibernate.dynamic.model.HibernateDynamicUser"/>
  		<mapping class="org.apache.fulcrum.security.hibernate.dynamic.model.HibernateDynamicGroup"/>
  		<mapping class="org.apache.fulcrum.security.hibernate.dynamic.model.HibernateDynamicRole"/>
! 		<mapping class="org.apache.fulcrum.security.hibernate.dynamic.model.HibernateDynamicPermission"/>
! 		
! 		
  	</session-factory>
  </hibernate-configuration>



From nobody at sheep.berlios.de  Fri May 26 17:26:13 2006
From: nobody at sheep.berlios.de (mik3_jon3s)
Date: Fri, 26 May 2006 17:26:13 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind pom.xml,1.33,1.34
Message-ID: <200605261526.k4QFQDT22254@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind
In directory sheep:/tmp/cvs-serv26758

Modified Files:
	pom.xml 
Log Message:
bumped version due to change in working of quartz in zebra

Index: pom.xml
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/pom.xml,v
retrieving revision 1.33
retrieving revision 1.34
diff -C2 -d -r1.33 -r1.34
*** pom.xml	1 May 2006 08:58:39 -0000	1.33
--- pom.xml	26 May 2006 15:31:14 -0000	1.34
***************
*** 6,10 ****
      <artifactId>zebra-hivemind</artifactId>
      <packaging>jar</packaging>
!     <version>3.0.1</version>
      <name>Zebra Hivemind Layer</name>
      <url>http://zebra.berlios.de/</url>
--- 6,10 ----
      <artifactId>zebra-hivemind</artifactId>
      <packaging>jar</packaging>
!     <version>4.0</version>
      <name>Zebra Hivemind Layer</name>
      <url>http://zebra.berlios.de/</url>
***************
*** 123,127 ****
              <groupId>fulcrum-hivemind</groupId>
              <artifactId>fulcrum-quartz</artifactId>
!             <version>2.0</version>
          </dependency>
          <dependency>
--- 123,127 ----
              <groupId>fulcrum-hivemind</groupId>
              <artifactId>fulcrum-quartz</artifactId>
!             <version>2.2</version>
          </dependency>
          <dependency>



From nobody at sheep.berlios.de  Fri May 26 17:35:03 2006
From: nobody at sheep.berlios.de (mik3_jon3s)
Date: Fri, 26 May 2006 17:35:03 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/manager/impl HibernateFiredTimedTaskManager.java,NONE,1.1
Message-ID: <200605261535.k4QFZ3T22923@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/manager/impl
In directory sheep:/tmp/cvs-serv27629/src/main/java/com/anite/zebra/hivemind/manager/impl

Added Files:
	HibernateFiredTimedTaskManager.java 
Log Message:
another manager

--- NEW FILE: HibernateFiredTimedTaskManager.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.manager.impl;

import com.anite.zebra.hivemind.manager.FiredTimedTaskManager;
import com.anite.zebra.hivemind.om.timedtask.FiredTimedTask;

public class HibernateFiredTimedTaskManager extends HibernateManager<FiredTimedTask> implements FiredTimedTaskManager {

}



From nobody at sheep.berlios.de  Fri May 26 18:02:18 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Fri, 26 May 2006 18:02:18 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask AbstractTimedTask.java,NONE,1.1 TimedTask.java,1.1,1.2 FiredTimedTask.java,1.1,1.2 Time.java,1.1,1.2
Message-ID: <200605261602.k4QG2IT24377@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask
In directory sheep:/tmp/cvs-serv30903/src/main/java/com/anite/zebra/hivemind/om/timedtask

Modified Files:
	TimedTask.java FiredTimedTask.java Time.java 
Added Files:
	AbstractTimedTask.java 
Log Message:


--- NEW FILE: AbstractTimedTask.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.om.timedtask;

import javax.persistence.MappedSuperclass;
import javax.persistence.Transient;

import com.anite.zebra.hivemind.om.state.ZebraTaskInstance;

@MappedSuperclass
public class AbstractTimedTask extends BaseDomain {
	private Time time;

	private Long zebraTaskInstanceId;

	public Time getTime() {
		return time;
	}

	public void setTime(Time time) {
		this.time = time;
	}

	public Long getZebraTaskInstanceId() {
		return zebraTaskInstanceId;
	}

	public void setZebraTaskInstanceId(Long zebraTaskInstanceId) {
		this.zebraTaskInstanceId = zebraTaskInstanceId;
	}
}

Index: TimedTask.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask/TimedTask.java,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** TimedTask.java	26 May 2006 15:30:28 -0000	1.1
--- TimedTask.java	26 May 2006 16:07:19 -0000	1.2
***************
*** 23,48 ****
  
  @Entity
! public class TimedTask extends BaseDomain {
! 
!     private ZebraTaskInstance zebraTaskInstance;
! 
!     private Time time;
! 
!     public Time getTime() {
!         return time;
!     }
! 
!     public void setTime(Time time) {
!         this.time = time;
!     }
! 
!     @ManyToOne
!     public ZebraTaskInstance getZebraTaskInstance() {
!         return zebraTaskInstance;
!     }
  
!     public void setZebraTaskInstance(ZebraTaskInstance zebraTaskInstance) {
!         this.zebraTaskInstance = zebraTaskInstance;
!     }
  
  }
--- 23,29 ----
  
  @Entity
! public class TimedTask extends AbstractTimedTask {
  
!    
  
  }

Index: FiredTimedTask.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask/FiredTimedTask.java,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** FiredTimedTask.java	26 May 2006 15:30:28 -0000	1.1
--- FiredTimedTask.java	26 May 2006 16:07:19 -0000	1.2
***************
*** 19,22 ****
--- 19,24 ----
  import java.util.Date;
  
+ import javax.persistence.Basic;
+ import javax.persistence.Column;
  import javax.persistence.Entity;
  
***************
*** 24,28 ****
  
  @Entity
! public class FiredTimedTask extends TimedTask {
  
      private Date startTime;
--- 26,30 ----
  
  @Entity
! public class FiredTimedTask extends AbstractTimedTask {
  
      private Date startTime;
***************
*** 44,47 ****
--- 46,51 ----
      }
  
+     @Basic
+     @Column(length=4000)
      public String getExceptionText() {
          return exceptionText;
***************
*** 77,81 ****
      }
      
!     public FiredTimedTask() {
          
      }
--- 81,85 ----
      }
      
!     protected FiredTimedTask() {
          
      }

Index: Time.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask/Time.java,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** Time.java	26 May 2006 15:30:28 -0000	1.1
--- Time.java	26 May 2006 16:07:19 -0000	1.2
***************
*** 19,26 ****
--- 19,34 ----
  import javax.persistence.Entity;
  
+ /**
+  * Represents a time of day to the nearest minute 
+  * @author Mike Jones
+  *
+  */
  @Entity
  public class Time extends BaseDomain {
  
      private String name;
+     
+     private Integer hour;
+     private Integer minute;
  
      public String getName() {
***************
*** 31,34 ****
--- 39,58 ----
          this.name = name;
      }
+ 
+ 	public Integer getHour() {
+ 		return hour;
+ 	}
+ 
+ 	public void setHour(Integer hour) {
+ 		this.hour = hour;
+ 	}
+ 
+ 	public Integer getMinute() {
+ 		return minute;
+ 	}
+ 
+ 	public void setMinute(Integer minute) {
+ 		this.minute = minute;
+ 	}
      
      



From nobody at sheep.berlios.de  Fri May 26 18:02:18 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Fri, 26 May 2006 18:02:18 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/impl ZebraStateFactoryImpl.java,1.1,1.2 TimedTaskRunnerImpl.java,1.1,1.2
Message-ID: <200605261602.k4QG2IT24381@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/impl
In directory sheep:/tmp/cvs-serv30903/src/main/java/com/anite/zebra/hivemind/impl

Modified Files:
	ZebraStateFactoryImpl.java TimedTaskRunnerImpl.java 
Log Message:


Index: ZebraStateFactoryImpl.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/impl/ZebraStateFactoryImpl.java,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** ZebraStateFactoryImpl.java	15 Mar 2006 17:14:23 -0000	1.1
--- ZebraStateFactoryImpl.java	26 May 2006 16:07:20 -0000	1.2
***************
*** 64,67 ****
--- 64,69 ----
      private List<StateFactoryListener> listeners = new ArrayList<StateFactoryListener>();
      
+     private Session session;
+     
  	/**
  	 * This should be manually injected by hivemind
***************
*** 90,97 ****
  			throws StateFailureException {
  
- 		Session s;
  		try {
- 			s = RegistryHelper.getInstance().getSession();
- 
  			if (stateObject instanceof ZebraTaskInstance) {
  
--- 92,96 ----
***************
*** 108,112 ****
  				antelopeTaskInstanceHistory.setShowInHistory(new Boolean(
  						taskDefinition.getShowInHistory()));
! 				s.save(antelopeTaskInstanceHistory);
  
  				// Tidy up process reference
--- 107,111 ----
  				antelopeTaskInstanceHistory.setShowInHistory(new Boolean(
  						taskDefinition.getShowInHistory()));
! 				getSession().save(antelopeTaskInstanceHistory);
  
  				// Tidy up process reference
***************
*** 121,128 ****
  				antelopeTaskInstanceHistory.setProcessInstance(processInstance);
  
!                 s.save(processInstance);
                  
  			}
! 			s.delete(stateObject);
  		} catch (Exception e) {
  			this.log.error("Failed to delete:" + stateObject.toString(), e);
--- 120,127 ----
  				antelopeTaskInstanceHistory.setProcessInstance(processInstance);
  
! 				getSession().save(processInstance);
                  
  			}
! 			getSession().delete(stateObject);
  		} catch (Exception e) {
  			this.log.error("Failed to delete:" + stateObject.toString(), e);
***************
*** 209,214 ****
  	public ITransaction beginTransaction() throws StateFailureException {
  
! 		return new HibernateTransaction(RegistryHelper.getInstance()
! 				.getSession());
  
  	}
--- 208,212 ----
  	public ITransaction beginTransaction() throws StateFailureException {
  
! 		return new HibernateTransaction(getSession());
  
  	}
***************
*** 218,222 ****
       */
  	public void saveObject(IStateObject object) throws StateFailureException {
! 		RegistryHelper.getInstance().getSession().saveOrUpdate(object);
  
  	}
--- 216,220 ----
       */
  	public void saveObject(IStateObject object) throws StateFailureException {
! 		getSession().saveOrUpdate(object);
  
  	}
***************
*** 228,233 ****
  			throws LockException {
  
! 		this.lockManager.aquireLock(processInstance, RegistryHelper
! 				.getInstance().getSession());
  
  	}
--- 226,230 ----
  			throws LockException {
  
! 		this.lockManager.aquireLock(processInstance, getSession());
  
  	}
***************
*** 239,244 ****
  			throws LockException {
  
! 		this.lockManager.releaseLock(processInstance, RegistryHelper
! 				.getInstance().getSession());
  	}
  
--- 236,240 ----
  			throws LockException {
  
! 		this.lockManager.releaseLock(processInstance, getSession());
  	}
  
***************
*** 292,295 ****
--- 288,303 ----
          listeners.remove(listener);
      }
+ 
+ 	public ZebraTaskInstance loadTaskInstance(Long taskInstanceId) {
+ 		return (ZebraTaskInstance) getSession().load(ZebraTaskInstance.class, taskInstanceId);
+ 	}
+ 
+ 	public Session getSession() {
+ 		return session;
+ 	}
+ 
+ 	public void setSession(Session session) {
+ 		this.session = session;
+ 	}
  
  }

Index: TimedTaskRunnerImpl.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/impl/TimedTaskRunnerImpl.java,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** TimedTaskRunnerImpl.java	26 May 2006 15:30:29 -0000	1.1
--- TimedTaskRunnerImpl.java	26 May 2006 16:07:20 -0000	1.2
***************
*** 33,124 ****
  public class TimedTaskRunnerImpl implements TimedTaskRunner {
  
!     private TimedTaskManager timedTaskManager;
! 
!     private FiredTimedTaskManager firedTimedTaskManager;
  
!     private Log log;
  
!     private Zebra zebra;
  
!     public void setZebra(Zebra zebra) {
!         this.zebra = zebra;
!     }
  
!     /*
!      * method for injection
!      */
!     public void setFiredTimedTaskManager(FiredTimedTaskManager firedTimedTaskManager) {
!         this.firedTimedTaskManager = firedTimedTaskManager;
!     }
  
!     /*
!      * Method for injection
!      */
!     public void setLog(Log log) {
!         this.log = log;
!     }
  
!     /*
!      * Method for injection
!      */
!     public void setTimedTaskManager(TimedTaskManager timedTaskManager) {
!         this.timedTaskManager = timedTaskManager;
!     }
  
!     /*
!      * (non-Javadoc)
!      * @see com.anite.zebra.hivemind.api.TimedTaskRunner#runTasksForTime(com.anite.zebra.hivemind.om.timedtask.Time)
!      */
!     public void runTasksForTime(Time time) {
  
!         List<TimedTask> timedTasks = timedTaskManager.getTasksForTime(time);
  
!         for (TimedTask timedTask : timedTasks) {
  
!             runTask(timedTask);
  
!         }
  
!     }
  
!     public void scheduleTimedTask(ZebraTaskInstance zti, int hours, int mins) {
  
!         TimedTask timedTask = new TimedTask();
!         timedTask.setZebraTaskInstance(zti);
!         // create time 
!         // add to timed task
  
!     }
  
!     /**
!      * Runt the timed task by retrieving the associated zebra task instance and transtioningit it
!      * 
!      * @param timedTask
!      */
!     protected void runTask(TimedTask timedTask) {
  
!         FiredTimedTask firedTimedTask = new FiredTimedTask(timedTask);
  
!         ZebraTaskInstance zti = timedTask.getZebraTaskInstance();
  
!         zti.setOutcome("Done");
!         zti.setState(ITaskInstance.STATE_AWAITINGCOMPLETE);
  
!         try {
  
!             zebra.transitionTask(zti);
  
!             // set all the properties on the fired timed task
  
!         } catch (TransitionException e) {
!             // log the execption also?
!             firedTimedTask.setExceptionText(e.getMessage());
!             firedTimedTask.setFailed(true);
  
!         } finally {
!             firedTimedTaskManager.saveOrUpdate(firedTimedTask);
!         }
  
!     }
  
  }
--- 33,133 ----
  public class TimedTaskRunnerImpl implements TimedTaskRunner {
  
! 	private TimedTaskManager timedTaskManager;
  
! 	private FiredTimedTaskManager firedTimedTaskManager;
  
! 	private Log log;
  
! 	private Zebra zebra;
  
! 	public void setZebra(Zebra zebra) {
! 		this.zebra = zebra;
! 	}
  
! 	/*
! 	 * method for injection
! 	 */
! 	public void setFiredTimedTaskManager(
! 			FiredTimedTaskManager firedTimedTaskManager) {
! 		this.firedTimedTaskManager = firedTimedTaskManager;
! 	}
  
! 	/*
! 	 * Method for injection
! 	 */
! 	public void setLog(Log log) {
! 		this.log = log;
! 	}
  
! 	/*
! 	 * Method for injection
! 	 */
! 	public void setTimedTaskManager(TimedTaskManager timedTaskManager) {
! 		this.timedTaskManager = timedTaskManager;
! 	}
  
! 	/*
! 	 * (non-Javadoc)
! 	 * 
! 	 * @see com.anite.zebra.hivemind.api.TimedTaskRunner#runTasksForTime(com.anite.zebra.hivemind.om.timedtask.Time)
! 	 */
! 	public void runTasksForTime(Time time) {
  
! 		List<TimedTask> timedTasks = timedTaskManager.getTasksForTime(time);
  
! 		for (TimedTask timedTask : timedTasks) {
  
! 			runTask(timedTask);
  
! 		}
  
! 	}
  
! 	public void scheduleTimedTask(ZebraTaskInstance zti, int hours, int mins) {
  
! 		TimedTask timedTask = new TimedTask();
! 		timedTask.setZebraTaskInstanceId(zti.getTaskInstanceId());
! 		// create time
! 		// add to timed task
  
! 	}
  
! 	/**
! 	 * Runt the timed task by retrieving the associated zebra task instance and
! 	 * transtioningit it
! 	 * 
! 	 * @param timedTask
! 	 */
! 	protected void runTask(TimedTask timedTask) {
  
! 		FiredTimedTask firedTimedTask = new FiredTimedTask(timedTask);
  
! 		ZebraTaskInstance zti = zebra.getStateFactory().loadTaskInstance(
! 				timedTask.getZebraTaskInstanceId());
  
! 		zti.setOutcome("Done");
! 		zti.setState(ITaskInstance.STATE_AWAITINGCOMPLETE);
  
! 		try {
  
! 			zebra.transitionTask(zti);
  
! 			// set all the properties on the fired timed task
  
! 		} catch (TransitionException e) {
! 			log.error(e);
! 			firedTimedTask.setExceptionText("Failed to transition task: "
! 					+ e.getMessage());
! 			firedTimedTask.setFailed(true);
! 		} catch (Throwable e) {
! 			log.error(e);
! 			firedTimedTask.setExceptionText("Throwable: " + e.getMessage());
! 			firedTimedTask.setFailed(true);
! 		} finally {
! 			firedTimedTaskManager.saveOrUpdate(firedTimedTask);
! 			timedTaskManager.delete(timedTask);
! 		}
  
! 	}
  
  }



From nobody at sheep.berlios.de  Fri May 26 18:02:19 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Fri, 26 May 2006 18:02:19 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/api ZebraStateFactory.java,1.1,1.2
Message-ID: <200605261602.k4QG2JT24384@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/api
In directory sheep:/tmp/cvs-serv30903/src/main/java/com/anite/zebra/hivemind/api

Modified Files:
	ZebraStateFactory.java 
Log Message:


Index: ZebraStateFactory.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/api/ZebraStateFactory.java,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** ZebraStateFactory.java	15 Mar 2006 17:14:23 -0000	1.1
--- ZebraStateFactory.java	26 May 2006 16:07:20 -0000	1.2
***************
*** 2,5 ****
--- 2,6 ----
  
  import com.anite.zebra.core.factory.api.IStateFactory;
+ import com.anite.zebra.hivemind.om.state.ZebraTaskInstance;
  
  public interface ZebraStateFactory extends IStateFactory {
***************
*** 11,14 ****
--- 12,17 ----
  
      public abstract void removeStateFactoryListener(StateFactoryListener listener);
+     
+     public ZebraTaskInstance loadTaskInstance(Long zebraTaskInstanceId);
  
  }



From nobody at sheep.berlios.de  Tue May 30 12:44:44 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 12:44:44 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/api - New directory
Message-ID: <200605301044.k4UAiiT26650@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/api
In directory sheep:/tmp/cvs-serv11372/src/test/java/com/anite/zebra/hivemind/api

Log Message:
Directory /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/api added to the repository




From nobody at sheep.berlios.de  Tue May 30 12:44:45 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 12:44:45 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/manager - New directory
Message-ID: <200605301044.k4UAijT26654@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/manager
In directory sheep:/tmp/cvs-serv11372/src/test/java/com/anite/zebra/hivemind/manager

Log Message:
Directory /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/manager added to the repository




From nobody at sheep.berlios.de  Tue May 30 12:44:49 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 12:44:49 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/resources/Templates/Tasks Hivemind.xml,1.2,1.3
Message-ID: <200605301044.k4UAinT26669@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/resources/Templates/Tasks
In directory sheep:/tmp/cvs-serv11467/src/main/resources/Templates/Tasks

Modified Files:
	Hivemind.xml 
Log Message:


Index: Hivemind.xml
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/resources/Templates/Tasks/Hivemind.xml,v
retrieving revision 1.2
retrieving revision 1.3
diff -C2 -d -r1.2 -r1.3
*** Hivemind.xml	4 Jan 2006 15:55:32 -0000	1.2
--- Hivemind.xml	30 May 2006 10:44:46 -0000	1.3
***************
*** 7,11 ****
  	<properties name="(General Task Properties)">
  		<property name="ShowInTaskList" value="no" type="Boolean" locked="yes"/>
! 		<property name="ServiceId" type="string" value="zebra.quartzTask" locked="yes"/>
  	</properties>
  	<properties name="(Inputs)"/>
--- 7,11 ----
  	<properties name="(General Task Properties)">
  		<property name="ShowInTaskList" value="no" type="Boolean" locked="yes"/>
! 		<property name="ServiceId" type="string" value="" locked="no"/>
  	</properties>
  	<properties name="(Inputs)"/>



From nobody at sheep.berlios.de  Tue May 30 12:44:49 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 12:44:49 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask FiredTimedTask.java,1.2,1.3 AbstractTimedTask.java,1.1,1.2
Message-ID: <200605301044.k4UAinT26677@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask
In directory sheep:/tmp/cvs-serv11467/src/main/java/com/anite/zebra/hivemind/om/timedtask

Modified Files:
	FiredTimedTask.java AbstractTimedTask.java 
Log Message:


Index: FiredTimedTask.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask/FiredTimedTask.java,v
retrieving revision 1.2
retrieving revision 1.3
diff -C2 -d -r1.2 -r1.3
*** FiredTimedTask.java	26 May 2006 16:07:19 -0000	1.2
--- FiredTimedTask.java	30 May 2006 10:44:47 -0000	1.3
***************
*** 32,36 ****
      private Date endTime;
  
!     private ZebraTaskInstanceHistory zebraTaskInstanceHistory;
  
      private boolean failed;
--- 32,36 ----
      private Date endTime;
  
!     private Long zebraTaskInstanceHistoryId;
  
      private boolean failed;
***************
*** 72,83 ****
      }
  
! 
!     public ZebraTaskInstanceHistory getZebraTaskInstanceHistory() {
!         return zebraTaskInstanceHistory;
!     }
! 
!     public void setZebraTaskInstanceHistory(ZebraTaskInstanceHistory zebraTaskInstanceHistory) {
!         this.zebraTaskInstanceHistory = zebraTaskInstanceHistory;
!     }
      
      protected FiredTimedTask() {
--- 72,77 ----
      }
  
!     
!    
      
      protected FiredTimedTask() {
***************
*** 88,91 ****
--- 82,93 ----
          // set timed task properties to the fired time task
      }
+ 
+ 	public Long getZebraTaskInstanceHistoryId() {
+ 		return zebraTaskInstanceHistoryId;
+ 	}
+ 
+ 	public void setZebraTaskInstanceHistoryId(Long zebraTaskInstanceHistoryId) {
+ 		this.zebraTaskInstanceHistoryId = zebraTaskInstanceHistoryId;
+ 	}
  
  }

Index: AbstractTimedTask.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask/AbstractTimedTask.java,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** AbstractTimedTask.java	26 May 2006 16:07:19 -0000	1.1
--- AbstractTimedTask.java	30 May 2006 10:44:47 -0000	1.2
***************
*** 17,20 ****
--- 17,21 ----
  package com.anite.zebra.hivemind.om.timedtask;
  
+ import javax.persistence.ManyToOne;
  import javax.persistence.MappedSuperclass;
  import javax.persistence.Transient;
***************
*** 28,31 ****
--- 29,33 ----
  	private Long zebraTaskInstanceId;
  
+ 	@ManyToOne
  	public Time getTime() {
  		return time;



From nobody at sheep.berlios.de  Tue May 30 12:44:49 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 12:44:49 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/manager/impl HibernateTimeManager.java,1.1,1.2 HibernateTimedTaskManager.java,1.1,1.2
Message-ID: <200605301044.k4UAinT26673@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/manager/impl
In directory sheep:/tmp/cvs-serv11467/src/main/java/com/anite/zebra/hivemind/manager/impl

Modified Files:
	HibernateTimeManager.java HibernateTimedTaskManager.java 
Log Message:


Index: HibernateTimeManager.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/manager/impl/HibernateTimeManager.java,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** HibernateTimeManager.java	26 May 2006 15:30:29 -0000	1.1
--- HibernateTimeManager.java	30 May 2006 10:44:47 -0000	1.2
***************
*** 17,24 ****
  package com.anite.zebra.hivemind.manager.impl;
  
  import com.anite.zebra.hivemind.om.timedtask.Time;
  
! public class HibernateTimeManager extends HibernateManager<Time> {
  
  
  }
--- 17,44 ----
  package com.anite.zebra.hivemind.manager.impl;
  
+ import org.hibernate.Criteria;
+ import org.hibernate.criterion.Restrictions;
+ 
+ import com.anite.zebra.hivemind.manager.TimeManager;
  import com.anite.zebra.hivemind.om.timedtask.Time;
  
! public class HibernateTimeManager extends HibernateManager<Time> implements TimeManager{
  
+ 	public Time createOrFetchTime(int hours, int mins) {
+ 		Criteria criteria = getSession().createCriteria(Time.class);
+ 		criteria.add(Restrictions.eq("hour", hours));
+ 		criteria.add(Restrictions.eq("minute", mins));
+ 		
+ 		Time result = (Time) criteria.uniqueResult();
+ 		
+ 		if (result == null){
+ 			result = new Time();
+ 			result.setHour(hours);
+ 			result.setMinute(mins);
+ 			this.saveOrUpdate(result);
+ 		}
+ 		
+ 		return result;
+ 	}
  
  }

Index: HibernateTimedTaskManager.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/manager/impl/HibernateTimedTaskManager.java,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** HibernateTimedTaskManager.java	26 May 2006 15:30:29 -0000	1.1
--- HibernateTimedTaskManager.java	30 May 2006 10:44:47 -0000	1.2
***************
*** 19,22 ****
--- 19,25 ----
  import java.util.List;
  
+ import org.hibernate.Criteria;
+ import org.hibernate.criterion.Restrictions;
+ 
  import com.anite.zebra.hivemind.manager.TimedTaskManager;
  import com.anite.zebra.hivemind.om.timedtask.Time;
***************
*** 26,31 ****
  
      public List<TimedTask> getTasksForTime(Time time) {
!         // TODO Auto-generated method stub
!         return null;
      }
      
--- 29,37 ----
  
      public List<TimedTask> getTasksForTime(Time time) {
! 
!     	Criteria criteria = getSession().createCriteria(TimedTask.class);
!     	criteria.add(Restrictions.eq("time", time));
!     	
!         return criteria.list();
      }
      



From nobody at sheep.berlios.de  Tue May 30 12:44:49 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 12:44:49 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/manager TimeManager.java,1.1,1.2
Message-ID: <200605301044.k4UAinT26682@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/manager
In directory sheep:/tmp/cvs-serv11467/src/main/java/com/anite/zebra/hivemind/manager

Modified Files:
	TimeManager.java 
Log Message:


Index: TimeManager.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/manager/TimeManager.java,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** TimeManager.java	26 May 2006 15:30:29 -0000	1.1
--- TimeManager.java	30 May 2006 10:44:47 -0000	1.2
***************
*** 19,23 ****
  import com.anite.zebra.hivemind.om.timedtask.Time;
  
! public interface TimeManager extends BaseManager {
  
      public Time createOrFetchTime(int hours, int mins);
--- 19,23 ----
  import com.anite.zebra.hivemind.om.timedtask.Time;
  
! public interface TimeManager extends BaseManager<Time> {
  
      public Time createOrFetchTime(int hours, int mins);



From nobody at sheep.berlios.de  Tue May 30 12:44:50 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 12:44:50 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/resources/META-INF hivemodule.xml,1.8,1.9
Message-ID: <200605301044.k4UAioT26688@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/resources/META-INF
In directory sheep:/tmp/cvs-serv11467/src/main/resources/META-INF

Modified Files:
	hivemodule.xml 
Log Message:


Index: hivemodule.xml
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/resources/META-INF/hivemodule.xml,v
retrieving revision 1.8
retrieving revision 1.9
diff -C2 -d -r1.8 -r1.9
*** hivemodule.xml	16 Mar 2006 08:05:08 -0000	1.8
--- hivemodule.xml	30 May 2006 10:44:48 -0000	1.9
***************
*** 40,44 ****
      <service-point id="zebraState" interface="com.anite.zebra.hivemind.api.ZebraStateFactory">
          <invoke-factory>
!             <construct class="com.anite.zebra.hivemind.impl.ZebraStateFactoryImpl"> </construct>
          </invoke-factory>
      </service-point>
--- 40,46 ----
      <service-point id="zebraState" interface="com.anite.zebra.hivemind.api.ZebraStateFactory">
          <invoke-factory>
!             <construct class="com.anite.zebra.hivemind.impl.ZebraStateFactoryImpl">
!                 <set-service property="session" service-id="fulcrum.hibernate.Session"/>
!             </construct>
          </invoke-factory>
      </service-point>
***************
*** 50,57 ****
          </invoke-factory>
      </service-point>
! 	<service-point id="QuartzTaskAction" interface="com.anite.zebra.core.api.ITaskAction">
! 		<invoke-factory>
! 			<construct class="com.anite.zebra.hivemind.taskAction.QuartzServiceTaskAction"></construct>
! 		</invoke-factory>
! 	</service-point>
  </module>
--- 52,87 ----
          </invoke-factory>
      </service-point>
!     <service-point id="QuartzTaskAction" interface="com.anite.zebra.core.api.ITaskAction">
!         <invoke-factory>
!             <construct class="com.anite.zebra.hivemind.taskAction.QuartzServiceTaskAction"/>
!         </invoke-factory>
!     </service-point>
!     <service-point id="TimedTaskRunner" interface="com.anite.zebra.hivemind.api.TimedTaskRunner">
!         <invoke-factory>
!         <construct class="com.anite.zebra.hivemind.impl.TimedTaskRunnerImpl"></construct>
!         </invoke-factory>
!     </service-point>
!     <service-point id="TimedTaskManager"
!         interface="com.anite.zebra.hivemind.manager.TimedTaskManager">
!         <invoke-factory>
!         <construct class="com.anite.zebra.hivemind.manager.impl.HibernateTimedTaskManager">
!             <set-service property="session" service-id="fulcrum.hibernate.Session"/>
!         </construct>
!         </invoke-factory>
!     </service-point>
!     <service-point id="FiredTimedTaskManager"
!         interface="com.anite.zebra.hivemind.manager.FiredTimedTaskManager">
!         <invoke-factory>
!         <construct class="com.anite.zebra.hivemind.manager.impl.HibernateFiredTimedTaskManager">
!             <set-service property="session" service-id="fulcrum.hibernate.Session"/>
!         </construct>
!             </invoke-factory>
!     </service-point>
!     <service-point id="TimeManager" interface="com.anite.zebra.hivemind.manager.TimeManager">
!         <invoke-factory>
!         <construct class="com.anite.zebra.hivemind.manager.impl.HibernateTimeManager">
!             <set-service property="session" service-id="fulcrum.hibernate.Session"/>
!         </construct>
!             </invoke-factory>
!     </service-point>
  </module>



From nobody at sheep.berlios.de  Tue May 30 12:44:48 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 12:44:48 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/api AllTimeTaskTests.java,NONE,1.1 TimedTaskRunnerTest.java,NONE,1.1
Message-ID: <200605301044.k4UAimT26665@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/api
In directory sheep:/tmp/cvs-serv11467/src/test/java/com/anite/zebra/hivemind/api

Added Files:
	AllTimeTaskTests.java TimedTaskRunnerTest.java 
Log Message:


--- NEW FILE: AllTimeTaskTests.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.api;

import com.anite.zebra.hivemind.manager.FiredTimedTaskManagerTest;
import com.anite.zebra.hivemind.manager.TimeManagerTest;
import com.anite.zebra.hivemind.manager.TimedTaskManagerTest;

import junit.framework.Test;
import junit.framework.TestSuite;

public class AllTimeTaskTests {

	public static Test suite() {
		TestSuite suite = new TestSuite("Test for com.anite.zebra.hivemind.api");
		//$JUnit-BEGIN$
		suite.addTestSuite(TimedTaskRunnerTest.class);
		//$JUnit-END$
		suite.addTestSuite(FiredTimedTaskManagerTest.class);
		suite.addTestSuite(TimedTaskManagerTest.class);
		suite.addTestSuite(TimeManagerTest.class);
		return suite;
	}

}

--- NEW FILE: TimedTaskRunnerTest.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.api;

import junit.framework.TestCase;

import org.apache.fulcrum.hivemind.RegistryManager;
import org.apache.hivemind.Resource;
import org.apache.hivemind.impl.DefaultClassResolver;
import org.apache.hivemind.util.ClasspathResource;

import com.anite.zebra.core.exceptions.CreateProcessException;
import com.anite.zebra.core.exceptions.StartProcessException;
import com.anite.zebra.hivemind.impl.Zebra;
import com.anite.zebra.hivemind.manager.TimeManager;
import com.anite.zebra.hivemind.om.defs.ZebraProcessVersions;
import com.anite.zebra.hivemind.om.state.ZebraProcessInstance;
import com.anite.zebra.hivemind.taskAction.NoopHiveMindTaskAction;

public class TimedTaskRunnerTest extends TestCase {

	public void testService() {
		Resource resource = new ClasspathResource(new DefaultClassResolver(),
				"META-INF/hivemodule_zebradefinitions.xml");
		RegistryManager.getInstance().getResources().add(resource);
		TimedTaskRunner timedTaskRunner = (TimedTaskRunner) RegistryManager
				.getInstance().getRegistry().getService(
						"zebra.TimedTaskRunner", TimedTaskRunner.class);
		assertNotNull(timedTaskRunner);
	}

	public void testServiceContract() throws CreateProcessException,
			StartProcessException {
		Zebra zebra = (Zebra) RegistryManager.getInstance().getRegistry()
				.getService(Zebra.class);
		NoopHiveMindTaskAction.run = false;

		ZebraProcessInstance zpi = zebra
				.createProcessPaused("TestTimedTaskRunner");
		zebra.startProcess(zpi);
		// Should run up to manual activity.
		assertEquals(1, zpi.getHistoryInstances().size());

		TimedTaskRunner timedTaskRunner = (TimedTaskRunner) RegistryManager
				.getInstance().getRegistry().getService(
						"zebra.TimedTaskRunner", TimedTaskRunner.class);
		timedTaskRunner.scheduleTimedTask(zpi.getTaskInstances().iterator()
				.next(), 1, 0);

		TimeManager timeManager = (TimeManager) RegistryManager.getInstance()
				.getRegistry().getService(TimeManager.class);
		timedTaskRunner.runTasksForTime(timeManager.createOrFetchTime(1, 0));

		// The task we just queued should be run. Then the noopTask
		assertTrue(NoopHiveMindTaskAction.run);

	}
}



From nobody at sheep.berlios.de  Tue May 30 12:44:48 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 12:44:48 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/manager TimeManagerTest.java,NONE,1.1 TimedTaskManagerTest.java,NONE,1.1 BaseManagerTest.java,NONE,1.1 FiredTimedTaskManagerTest.java,NONE,1.1
Message-ID: <200605301044.k4UAimT26661@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/manager
In directory sheep:/tmp/cvs-serv11467/src/test/java/com/anite/zebra/hivemind/manager

Added Files:
	TimeManagerTest.java TimedTaskManagerTest.java 
	BaseManagerTest.java FiredTimedTaskManagerTest.java 
Log Message:


--- NEW FILE: TimeManagerTest.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.manager;

import com.anite.zebra.hivemind.om.timedtask.Time;


public class TimeManagerTest extends BaseManagerTest<TimeManager> {
	
	public void testCreateOrFindTime(){
		
		TimeManager timeManager = (TimeManager) manager;
		
		Time time = timeManager.createOrFetchTime(0, 0);
		assertNotNull(time);
		
		assertNotNull(time.getId());
		
	}
}

--- NEW FILE: TimedTaskManagerTest.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.manager;


public class TimedTaskManagerTest extends BaseManagerTest<TimedTaskManager> {
	
}

--- NEW FILE: BaseManagerTest.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.manager;

import java.lang.reflect.ParameterizedType;

import org.apache.fulcrum.hivemind.RegistryManager;

import junit.framework.TestCase;

/**
 * Abstractly test if we an construct the serivces
 * 
 * Consider adding a CRUD test here - but it is hard to write with Generics and Hivemind proxis
 * 
 * @author ben.gidley
 *
 * @param <T>
 */
public abstract class BaseManagerTest<T extends BaseManager> extends TestCase {
	
	BaseManager manager;
	
	public void setUp(){
		manager = (T) RegistryManager.getInstance()
		.getRegistry().getService(getParameterClazz());
	}
	
	
	public void testService() {

		T service = (T) RegistryManager.getInstance()
				.getRegistry().getService(getParameterClazz());
		assertNotNull(service);
	}

	private Class getParameterClazz() {
		ParameterizedType ptype = (ParameterizedType) this.getClass()
				.getGenericSuperclass();
		return (Class) ptype.getActualTypeArguments()[0];
	}
	
	
}

--- NEW FILE: FiredTimedTaskManagerTest.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.manager;


public class FiredTimedTaskManagerTest extends BaseManagerTest<FiredTimedTaskManager> {
	
}



From nobody at sheep.berlios.de  Tue May 30 12:44:50 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 12:44:50 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/api TimedTaskRunner.java,1.1,1.2
Message-ID: <200605301044.k4UAioT26694@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/api
In directory sheep:/tmp/cvs-serv11467/src/main/java/com/anite/zebra/hivemind/api

Modified Files:
	TimedTaskRunner.java 
Log Message:


Index: TimedTaskRunner.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/api/TimedTaskRunner.java,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** TimedTaskRunner.java	26 May 2006 15:30:29 -0000	1.1
--- TimedTaskRunner.java	30 May 2006 10:44:48 -0000	1.2
***************
*** 21,24 ****
--- 21,29 ----
  import com.anite.zebra.hivemind.om.timedtask.TimedTask;
  
+ /**
+  * Interface to queuing and running timed tasks.
+  * @author Mike Jones
+  *
+  */
  public interface TimedTaskRunner {
  



From nobody at sheep.berlios.de  Tue May 30 12:44:50 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 12:44:50 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/impl TimedTaskRunnerImpl.java,1.2,1.3
Message-ID: <200605301044.k4UAioT26685@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/impl
In directory sheep:/tmp/cvs-serv11467/src/main/java/com/anite/zebra/hivemind/impl

Modified Files:
	TimedTaskRunnerImpl.java 
Log Message:


Index: TimedTaskRunnerImpl.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/impl/TimedTaskRunnerImpl.java,v
retrieving revision 1.2
retrieving revision 1.3
diff -C2 -d -r1.2 -r1.3
*** TimedTaskRunnerImpl.java	26 May 2006 16:07:20 -0000	1.2
--- TimedTaskRunnerImpl.java	30 May 2006 10:44:47 -0000	1.3
***************
*** 25,28 ****
--- 25,29 ----
  import com.anite.zebra.hivemind.api.TimedTaskRunner;
  import com.anite.zebra.hivemind.manager.FiredTimedTaskManager;
+ import com.anite.zebra.hivemind.manager.TimeManager;
  import com.anite.zebra.hivemind.manager.TimedTaskManager;
  import com.anite.zebra.hivemind.om.state.ZebraTaskInstance;
***************
*** 30,34 ****
--- 31,41 ----
  import com.anite.zebra.hivemind.om.timedtask.Time;
  import com.anite.zebra.hivemind.om.timedtask.TimedTask;
+ import com.sun.msv.datatype.xsd.TimeType;
  
+ /**
+  * 
+  * @author Mike Jones
+  *
+  */
  public class TimedTaskRunnerImpl implements TimedTaskRunner {
  
***************
*** 37,40 ****
--- 44,49 ----
  	private FiredTimedTaskManager firedTimedTaskManager;
  
+ 	private TimeManager timeManager;
+ 
  	private Log log;
  
***************
*** 88,94 ****
  		TimedTask timedTask = new TimedTask();
  		timedTask.setZebraTaskInstanceId(zti.getTaskInstanceId());
! 		// create time
! 		// add to timed task
! 
  	}
  
--- 97,102 ----
  		TimedTask timedTask = new TimedTask();
  		timedTask.setZebraTaskInstanceId(zti.getTaskInstanceId());
! 		timedTask.setTime(getTimeManager().createOrFetchTime(hours, mins));
! 		getTimedTaskManager().saveOrUpdate(timedTask);
  	}
  
***************
*** 112,118 ****
  
  			zebra.transitionTask(zti);
! 
! 			// set all the properties on the fired timed task
! 
  		} catch (TransitionException e) {
  			log.error(e);
--- 120,124 ----
  
  			zebra.transitionTask(zti);
! 			firedTimedTask.setFailed(false);
  		} catch (TransitionException e) {
  			log.error(e);
***************
*** 129,132 ****
--- 135,154 ----
  		}
  
+ 	}
+ 
+ 	public TimeManager getTimeManager() {
+ 		return timeManager;
+ 	}
+ 
+ 	public void setTimeManager(TimeManager timeManager) {
+ 		this.timeManager = timeManager;
+ 	}
+ 
+ 	public FiredTimedTaskManager getFiredTimedTaskManager() {
+ 		return firedTimedTaskManager;
+ 	}
+ 
+ 	public TimedTaskManager getTimedTaskManager() {
+ 		return timedTaskManager;
  	}
  



From nobody at sheep.berlios.de  Tue May 30 13:54:53 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 13:54:53 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/job - New directory
Message-ID: <200605301154.k4UBsrT31489@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/job
In directory sheep:/tmp/cvs-serv12089/src/main/java/com/anite/zebra/hivemind/job

Log Message:
Directory /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/job added to the repository




From nobody at sheep.berlios.de  Tue May 30 13:54:57 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 13:54:57 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/manager TimeManagerTest.java,1.1,1.2
Message-ID: <200605301154.k4UBsvT31494@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/manager
In directory sheep:/tmp/cvs-serv12237/src/test/java/com/anite/zebra/hivemind/manager

Modified Files:
	TimeManagerTest.java 
Log Message:


Index: TimeManagerTest.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/manager/TimeManagerTest.java,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** TimeManagerTest.java	30 May 2006 10:44:46 -0000	1.1
--- TimeManagerTest.java	30 May 2006 11:54:55 -0000	1.2
***************
*** 19,34 ****
  import com.anite.zebra.hivemind.om.timedtask.Time;
  
- 
  public class TimeManagerTest extends BaseManagerTest<TimeManager> {
! 	
! 	public void testCreateOrFindTime(){
! 		
  		TimeManager timeManager = (TimeManager) manager;
! 		
  		Time time = timeManager.createOrFetchTime(0, 0);
  		assertNotNull(time);
! 		
  		assertNotNull(time.getId());
  		
  	}
  }
--- 19,47 ----
  import com.anite.zebra.hivemind.om.timedtask.Time;
  
  public class TimeManagerTest extends BaseManagerTest<TimeManager> {
! 
! 	public void testCreateOrFindTime() {
! 
  		TimeManager timeManager = (TimeManager) manager;
! 
  		Time time = timeManager.createOrFetchTime(0, 0);
  		assertNotNull(time);
! 
  		assertNotNull(time.getId());
+ 
+ 	}
+ 
+ 	public void testTimeGetJobName() {
+ 
+ 		TimeManager timeManager = (TimeManager) manager;
+ 
+ 		Time time = timeManager.createOrFetchTime(0, 0);
+ 		assertEquals(time.getJobName(), "00:00");
  		
+ 		time = timeManager.createOrFetchTime(1, 11);
+ 		assertEquals(time.getJobName(), "01:11");
+ 
+ 		time = timeManager.createOrFetchTime(11, 4);
+ 		assertEquals(time.getJobName(), "11:04");
  	}
  }



From nobody at sheep.berlios.de  Tue May 30 13:54:58 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 13:54:58 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask Time.java,1.2,1.3
Message-ID: <200605301154.k4UBswT31501@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask
In directory sheep:/tmp/cvs-serv12237/src/main/java/com/anite/zebra/hivemind/om/timedtask

Modified Files:
	Time.java 
Log Message:


Index: Time.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask/Time.java,v
retrieving revision 1.2
retrieving revision 1.3
diff -C2 -d -r1.2 -r1.3
*** Time.java	26 May 2006 16:07:19 -0000	1.2
--- Time.java	30 May 2006 11:54:55 -0000	1.3
***************
*** 18,21 ****
--- 18,22 ----
  
  import javax.persistence.Entity;
+ import javax.persistence.Transient;
  
  /**
***************
*** 56,60 ****
  	}
      
!     
  
  }
--- 57,80 ----
  	}
      
! 	/**
! 	 * Provide the job name to represent this time
! 	 * @return
! 	 */
! 	@Transient
!     public String getJobName(){
! 		StringBuffer name = new StringBuffer();
! 		
! 		if (hour < 10){
! 			name.append("0");						
! 		} 
! 		name.append(hour);
! 		name.append(":");
! 		if (minute < 10){
! 			name.append("0");
! 		}
! 		name.append(minute);
! 		
! 		return name.toString();
! 	}
  
  }



From nobody at sheep.berlios.de  Tue May 30 13:54:58 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 13:54:58 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/taskAction QuartzServiceTaskActionTest.java,1.1,1.2
Message-ID: <200605301154.k4UBswT31510@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/taskAction
In directory sheep:/tmp/cvs-serv12237/src/test/java/com/anite/zebra/hivemind/taskAction

Modified Files:
	QuartzServiceTaskActionTest.java 
Log Message:


Index: QuartzServiceTaskActionTest.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/taskAction/QuartzServiceTaskActionTest.java,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** QuartzServiceTaskActionTest.java	4 Jan 2006 15:55:32 -0000	1.1
--- QuartzServiceTaskActionTest.java	30 May 2006 11:54:56 -0000	1.2
***************
*** 43,51 ****
          zebra.startProcess(pi);
          
!         // This return as soon as Zebra can't run any more tasks immediately.
!         
!         Thread.sleep(60000);
!         
!         // by now it will have run
          
          
--- 43,47 ----
          zebra.startProcess(pi);
          
!         Thread.sleep(90000000);
          
          



From nobody at sheep.berlios.de  Tue May 30 13:54:59 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 13:54:59 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/job TimedTaskRunnerJob.java,NONE,1.1
Message-ID: <200605301154.k4UBswT31514@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/job
In directory sheep:/tmp/cvs-serv12237/src/main/java/com/anite/zebra/hivemind/job

Added Files:
	TimedTaskRunnerJob.java 
Log Message:


--- NEW FILE: TimedTaskRunnerJob.java ---
/*
 * Copyright 2004, 2005 Anite 
 *    http://www.anite.com/publicsector
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.anite.zebra.hivemind.job;

import org.apache.fulcrum.hivemind.RegistryManager;
import org.quartz.Job;
import org.quartz.JobDataMap;
import org.quartz.JobExecutionContext;
import org.quartz.JobExecutionException;

import com.anite.zebra.hivemind.api.TimedTaskRunner;
import com.anite.zebra.hivemind.impl.TimedTaskRunnerImpl;
import com.anite.zebra.hivemind.manager.TimeManager;
import com.anite.zebra.hivemind.om.timedtask.Time;

/**
 * Execute a 'times' jobs
 * 
 * This pays no attention to what the actual time is as this could be recovered 
 * or delayed.
 * @author ben.gidley
 *
 */
public class TimedTaskRunnerJob implements Job {

	public void execute(JobExecutionContext context)
			throws JobExecutionException {

		JobDataMap jobDataMap = context.getJobDetail().getJobDataMap();
		int hour = jobDataMap.getInt(TimedTaskRunnerImpl.HOUR);
		int minute = jobDataMap.getInt(TimedTaskRunnerImpl.MINUTE);

		TimedTaskRunner timedTaskRunner = (TimedTaskRunner) RegistryManager
				.getInstance().getRegistry().getService(TimedTaskRunner.class);

		TimeManager timeManager = (TimeManager) RegistryManager.getInstance()
				.getRegistry().getService(TimeManager.class);

		Time time = timeManager.createOrFetchTime(hour, minute);
		timedTaskRunner.runTasksForTime(time);

	}

}



From nobody at sheep.berlios.de  Tue May 30 13:54:59 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 13:54:59 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/api TimedTaskRunnerTest.java,1.1,1.2
Message-ID: <200605301154.k4UBsxT31519@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/api
In directory sheep:/tmp/cvs-serv12237/src/test/java/com/anite/zebra/hivemind/api

Modified Files:
	TimedTaskRunnerTest.java 
Log Message:


Index: TimedTaskRunnerTest.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/api/TimedTaskRunnerTest.java,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** TimedTaskRunnerTest.java	30 May 2006 10:44:46 -0000	1.1
--- TimedTaskRunnerTest.java	30 May 2006 11:54:56 -0000	1.2
***************
*** 33,41 ****
  
  public class TimedTaskRunnerTest extends TestCase {
! 
! 	public void testService() {
  		Resource resource = new ClasspathResource(new DefaultClassResolver(),
  				"META-INF/hivemodule_zebradefinitions.xml");
  		RegistryManager.getInstance().getResources().add(resource);
  		TimedTaskRunner timedTaskRunner = (TimedTaskRunner) RegistryManager
  				.getInstance().getRegistry().getService(
--- 33,44 ----
  
  public class TimedTaskRunnerTest extends TestCase {
! 	public void setUp() {
  		Resource resource = new ClasspathResource(new DefaultClassResolver(),
  				"META-INF/hivemodule_zebradefinitions.xml");
  		RegistryManager.getInstance().getResources().add(resource);
+ 	}
+ 
+ 	public void testService() {
+ 
  		TimedTaskRunner timedTaskRunner = (TimedTaskRunner) RegistryManager
  				.getInstance().getRegistry().getService(



From nobody at sheep.berlios.de  Tue May 30 13:54:57 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 13:54:57 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/taskAction QuartzServiceTaskAction.java,1.6,1.7 ScheduledTaskTransitionJob.java,1.4,NONE
Message-ID: <200605301154.k4UBsvT31498@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/taskAction
In directory sheep:/tmp/cvs-serv12237/src/main/java/com/anite/zebra/hivemind/taskAction

Modified Files:
	QuartzServiceTaskAction.java 
Removed Files:
	ScheduledTaskTransitionJob.java 
Log Message:


Index: QuartzServiceTaskAction.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/taskAction/QuartzServiceTaskAction.java,v
retrieving revision 1.6
retrieving revision 1.7
diff -C2 -d -r1.6 -r1.7
*** QuartzServiceTaskAction.java	26 May 2006 15:30:30 -0000	1.6
--- QuartzServiceTaskAction.java	30 May 2006 11:54:55 -0000	1.7
***************
*** 17,86 ****
  package com.anite.zebra.hivemind.taskAction;
  
- import java.util.Date;
- 
- import org.apache.commons.lang.StringUtils;
  import org.apache.commons.logging.Log;
  import org.apache.commons.logging.LogFactory;
- import org.hibernate.Session;
- import org.quartz.JobDetail;
- import org.quartz.Scheduler;
- import org.quartz.SchedulerException;
- import org.quartz.SimpleTrigger;
  
  import com.anite.zebra.core.exceptions.DefinitionNotFoundException;
  import com.anite.zebra.core.exceptions.RunTaskException;
! import com.anite.zebra.core.factory.exceptions.StateFailureException;
! import com.anite.zebra.core.state.api.ITaskInstance;
! import com.anite.zebra.core.state.api.ITransaction;
! import com.anite.zebra.hivemind.impl.Zebra;
  import com.anite.zebra.hivemind.om.defs.ZebraTaskDefinition;
  import com.anite.zebra.hivemind.om.state.ZebraTaskInstance;
  
  public class QuartzServiceTaskAction extends ZebraTaskAction {
  
      public static final Log log = LogFactory.getLog(QuartzServiceTaskAction.class);
  
!     public static final String TASK_INSTANCE_ID_KEY = "taskInstanceId";
! 
!     public static final String JOB_NAME = "QuartzServiceTaskAction";
! 
!     private static final long SECONDS_DELAY = 1000L;
! 
!     private static final long MINUTES_DELAY = 60L * 1000L;
! 
!     private static final long HOURS_DELAY = 60L * 60L * 1000L;
! 
!     private static final long DAYS_DELAY = 24L * 60L * 60L * 1000L;
! 
!     private Scheduler scheduler;
! 
!     private Zebra zebra;
! 
!     private Session session;
!     
!     public Session getSession() {
!         return session;
!     }
! 
!     public void setSession(Session session) {
!         this.session = session;
!     }
      
-     public Zebra getZebra() {
-         return zebra;
-     }
- 
-     public void setZebra(Zebra zebra) {
-         this.zebra = zebra;
-     }
- 
-     public Scheduler getScheduler() {
-         return scheduler;
-     }
- 
-     public void setScheduler(Scheduler scheduler) {
-         this.scheduler = scheduler;
-     }
- 
      /**
       * When this task is run, it waits until the scheduled time and then runs
--- 17,50 ----
  package com.anite.zebra.hivemind.taskAction;
  
  import org.apache.commons.logging.Log;
  import org.apache.commons.logging.LogFactory;
  
  import com.anite.zebra.core.exceptions.DefinitionNotFoundException;
  import com.anite.zebra.core.exceptions.RunTaskException;
! import com.anite.zebra.hivemind.api.TimedTaskRunner;
  import com.anite.zebra.hivemind.om.defs.ZebraTaskDefinition;
  import com.anite.zebra.hivemind.om.state.ZebraTaskInstance;
  
+ /**
+  * Kick off the quartz job once every 24 hours
+  * 
+  * By default we will kick off at 19:00
+  * 
+  * This can be changed in the designer.
+  * 
+  * This is a hivemind service so you can use dependency injection.
+  * 
+  * @TODO Change the designer template to allow setting on hour/minute
+  * @TODO test me
+  * 
+  * @author ben.gidley
+  *
+  */
  public class QuartzServiceTaskAction extends ZebraTaskAction {
  
      public static final Log log = LogFactory.getLog(QuartzServiceTaskAction.class);
  
!     private TimedTaskRunner timedTaskRunner;
      
      /**
       * When this task is run, it waits until the scheduled time and then runs
***************
*** 89,221 ****
       */
      public void runTask(ZebraTaskInstance taskInstance) throws RunTaskException {
!         if (StringUtils.isEmpty(taskInstance.getOutcome())) {
!             try {
! 
!                 /*
!                  * Create your Scheduled job
!                  */
!                 JobDetail jobDetail = scheduler.getJobDetail(JOB_NAME, null);
!                 if (jobDetail == null) {
!                     jobDetail = new JobDetail(taskInstance.getTaskInstanceId().toString(), null,
!                             ScheduledTaskTransitionJob.class);
!                 }
! 
!                 /*
!                  * get the poll interval from taskInstace.getTaskDefinition
!                  * (downcast to ZebraTaskDefinition) get property.
!                  */
!                 ZebraTaskDefinition taskDef = (ZebraTaskDefinition) taskInstance.getTaskDefinition();
!                 String wait = taskDef.getGeneralProperties().getString("Wait");
!                 log.info("Wait is : " + wait);
!                 log.info("Delay is :" + new Long(delay(wait)).toString());
!                 /*
!                  * Wait supports delay times in : - 
!                  * 	S	Seconds ( Default )
!                  *  M	Minutes
!                  *  H	Hours
!                  *  D	Days
!                  *   
!                  */
! 
!                 SimpleTrigger trigger = new SimpleTrigger();
!                 trigger.setStartTime(new Date(new Date().getTime() + delay(wait)));
!                 trigger.setName(taskInstance.getTaskInstanceId().toString());
!                 trigger.getJobDataMap().put(TASK_INSTANCE_ID_KEY, taskInstance.getTaskInstanceId());
!                 
!                 
!                 trigger.setMisfireInstruction(SimpleTrigger.MISFIRE_INSTRUCTION_FIRE_NOW);
!                 
!                 
!                 scheduler.scheduleJob(jobDetail, trigger);
!                 /*
!                  * Don't set the state unlike every other task action as the state
!                  * will be set when the trigger fires.
!                  */
! 
!                 // Need to make sure that state (which is STATE_RUNNING) is saved in the DB
!                 // This is a bug in the w/f engine as it hsould save it for us
!                 taskInstance.setState(ITaskInstance.STATE_RUNNING);
!                 ITransaction t = zebra.getStateFactory().beginTransaction();
!                 zebra.getStateFactory().saveObject(taskInstance);
!                 t.commit();
!                 log.info("Save task in state:" + taskInstance.getState());
! 
!             } catch (SchedulerException se) {
!                 throw new RunTaskException(se);
!             } catch (StateFailureException e) {
!                 throw new RunTaskException(e);
!             } catch (DefinitionNotFoundException e) {
!                 throw new RunTaskException(e);
!             }
!         } else {
!             // Trigger has fired
!             taskInstance.setState(ITaskInstance.STATE_AWAITINGCOMPLETE);
!         }
! 
!     }
! 
!     private long delay(String wait) throws IllegalArgumentException {
!         long delay = 0;
!         String sd = null;
!         String period = "S";
!         wait.trim().toUpperCase();
!         if (wait.startsWith("S")) {
!             sd = wait.substring(1);
!         }
!         if (wait.endsWith("S")) {
!             sd = wait.substring(0, wait.length() - 1);
!         }
!         if (wait.startsWith("M")) {
!             sd = wait.substring(1);
!             period = "M";
!         }
!         if (wait.endsWith("M")) {
!             sd = wait.substring(0, wait.length() - 1);
!             period = "M";
!         }
!         if (wait.startsWith("H")) {
!             sd = wait.substring(1);
!             period = "H";
!         }
!         if (wait.endsWith("H")) {
!             sd = wait.substring(0, wait.length() - 1);
!             period = "H";
!         }
!         if (wait.startsWith("D")) {
!             sd = wait.substring(1);
!             period = "D";
!         }
!         if (wait.endsWith("D")) {
!             sd = wait.substring(0, wait.length() - 1);
!             period = "D";
!         }
!         /*
!          * wait does not contain S,M,H or D
!          */
!         if ((wait.indexOf("S") == -1) && (wait.indexOf("M") == -1) && (wait.indexOf("H") == -1)
!                 && (wait.indexOf("D") == -1)) {
!             sd = wait;
!         }
!         try {
!             delay = Long.parseLong(sd);
!         } catch (NumberFormatException pe) {
!             throw new IllegalArgumentException("Wait string should be an integer followed by S, M, H or D. : " + sd);
!         }
!         if (period.equals("S")) {
!             return delay * SECONDS_DELAY;
!         }
!         if (period.equals("M")) {
!             return delay * MINUTES_DELAY;
!         }
!         if (period.equals("H")) {
!             return delay * HOURS_DELAY;
!         }
!         if (period.equals("D")) {
!             return delay * DAYS_DELAY;
!         }
!         return delay * SECONDS_DELAY;
      }
  
!     
  
  }
--- 53,81 ----
       */
      public void runTask(ZebraTaskInstance taskInstance) throws RunTaskException {
!         
!     	try {
! 			int hour = 19;
! 			int minute = 0;
! 			
! 			ZebraTaskDefinition zebraTaskDefinition = (ZebraTaskDefinition) taskInstance.getTaskDefinition();
! 			if (zebraTaskDefinition.getGeneralProperties().containsKey("hour")){
! 				hour = zebraTaskDefinition.getGeneralProperties().getInteger("hour");
! 			}
! 			if (zebraTaskDefinition.getGeneralProperties().containsKey("minute")){
! 				minute = zebraTaskDefinition.getGeneralProperties().getInteger("minute");
! 			}
! 			
! 			timedTaskRunner.scheduleTimedTask(taskInstance, hour, minute );
! 		} catch (DefinitionNotFoundException e) {
! 			throw new RunTaskException(e);
! 		}
      }
  
! 	public TimedTaskRunner getTimedTaskRunner() {
! 		return timedTaskRunner;
! 	}
  
+ 	public void setTimedTaskRunner(TimedTaskRunner timedTaskRunner) {
+ 		this.timedTaskRunner = timedTaskRunner;
+ 	}
  }

--- ScheduledTaskTransitionJob.java DELETED ---



From nobody at sheep.berlios.de  Tue May 30 13:54:59 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 13:54:59 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/impl TimedTaskRunnerImpl.java,1.3,1.4
Message-ID: <200605301154.k4UBsxT31522@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/impl
In directory sheep:/tmp/cvs-serv12237/src/main/java/com/anite/zebra/hivemind/impl

Modified Files:
	TimedTaskRunnerImpl.java 
Log Message:


Index: TimedTaskRunnerImpl.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/impl/TimedTaskRunnerImpl.java,v
retrieving revision 1.3
retrieving revision 1.4
diff -C2 -d -r1.3 -r1.4
*** TimedTaskRunnerImpl.java	30 May 2006 10:44:47 -0000	1.3
--- TimedTaskRunnerImpl.java	30 May 2006 11:54:57 -0000	1.4
***************
*** 17,27 ****
--- 17,35 ----
  package com.anite.zebra.hivemind.impl;
  
+ import java.rmi.registry.Registry;
  import java.util.List;
  
  import org.apache.commons.logging.Log;
+ import org.apache.fulcrum.hivemind.RegistryManager;
+ import org.quartz.JobDataMap;
+ import org.quartz.JobDetail;
+ import org.quartz.Scheduler;
+ import org.quartz.SchedulerException;
+ import org.quartz.TriggerUtils;
  
  import com.anite.zebra.core.exceptions.TransitionException;
  import com.anite.zebra.core.state.api.ITaskInstance;
  import com.anite.zebra.hivemind.api.TimedTaskRunner;
+ import com.anite.zebra.hivemind.job.TimedTaskRunnerJob;
  import com.anite.zebra.hivemind.manager.FiredTimedTaskManager;
  import com.anite.zebra.hivemind.manager.TimeManager;
***************
*** 31,43 ****
  import com.anite.zebra.hivemind.om.timedtask.Time;
  import com.anite.zebra.hivemind.om.timedtask.TimedTask;
- import com.sun.msv.datatype.xsd.TimeType;
  
  /**
   * 
   * @author Mike Jones
!  *
   */
  public class TimedTaskRunnerImpl implements TimedTaskRunner {
  
  	private TimedTaskManager timedTaskManager;
  
--- 39,62 ----
  import com.anite.zebra.hivemind.om.timedtask.Time;
  import com.anite.zebra.hivemind.om.timedtask.TimedTask;
  
  /**
+  * Runs the tasks.
+  * 
+  * The manages all interactions with the OM Managers and Quartz.
+  * 
+  * Quartz is injected into the service
   * 
   * @author Mike Jones
!  * @author Ben GIdley
!  * 
   */
  public class TimedTaskRunnerImpl implements TimedTaskRunner {
  
+ 	static public final String MINUTE = "minute";
+ 
+ 	static public final String HOUR = "hour";
+ 
+ 	private static final String TIME_TASK_RUNNER = "TimeTaskRunner";
+ 
  	private TimedTaskManager timedTaskManager;
  
***************
*** 50,53 ****
--- 69,82 ----
  	private Zebra zebra;
  
+ 	private Scheduler scheduler;
+ 
+ 	public Scheduler getScheduler() {
+ 		return scheduler;
+ 	}
+ 
+ 	public void setScheduler(Scheduler scheduler) {
+ 		this.scheduler = scheduler;
+ 	}
+ 
  	public void setZebra(Zebra zebra) {
  		this.zebra = zebra;
***************
*** 96,102 ****
  
  		TimedTask timedTask = new TimedTask();
  		timedTask.setZebraTaskInstanceId(zti.getTaskInstanceId());
! 		timedTask.setTime(getTimeManager().createOrFetchTime(hours, mins));
  		getTimedTaskManager().saveOrUpdate(timedTask);
  	}
  
--- 125,168 ----
  
  		TimedTask timedTask = new TimedTask();
+ 		Time time = getTimeManager().createOrFetchTime(hours, mins);
  		timedTask.setZebraTaskInstanceId(zti.getTaskInstanceId());
! 		timedTask.setTime(time);
  		getTimedTaskManager().saveOrUpdate(timedTask);
+ 
+ 		// Now verify there is a quartz job for requested time.
+ 		try {
+ 			JobDetail jobDetail = scheduler.getJobDetail(time.getJobName(),
+ 					TIME_TASK_RUNNER);
+ 
+ 			if (jobDetail == null){
+ 				createJobDetail(time);
+ 			}
+ 
+ 		} catch (SchedulerException e) {
+ 			log.error(e);
+ 		}
+ 
+ 	}
+ 
+ 	/**
+ 	 * Create the job in quartz for the passed time.
+ 	 * @param time
+ 	 * @throws SchedulerException
+ 	 */
+ 	private void createJobDetail(Time time) throws SchedulerException {
+ 		JobDetail jobDetail = new JobDetail();
+ 		jobDetail.setName(time.getJobName());
+ 		jobDetail.setDescription("Time Task Runner Job");
+ 		jobDetail.setDurability(false);
+ 		jobDetail.setGroup(TIME_TASK_RUNNER);
+ 		jobDetail.setJobClass(TimedTaskRunnerJob.class);
+ 		jobDetail.setRequestsRecovery(true);
+ 		JobDataMap jobDataMap = new JobDataMap();
+ 		jobDataMap.put(HOUR, time.getHour());
+ 		jobDataMap.put(MINUTE, time.getMinute());
+ 		jobDetail.setJobDataMap(jobDataMap);
+ 
+ 		scheduler.scheduleJob(jobDetail, TriggerUtils.makeDailyTrigger(time.getJobName(), time
+ 				.getHour(), time.getMinute()));
  	}
  
***************
*** 133,136 ****
--- 199,203 ----
  			firedTimedTaskManager.saveOrUpdate(firedTimedTask);
  			timedTaskManager.delete(timedTask);
+ 			RegistryManager.getInstance().getRegistry().cleanupThread();
  		}
  



From nobody at sheep.berlios.de  Tue May 30 13:54:58 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 13:54:58 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/resources/Templates/Tasks Quartz.xml,1.1,1.2
Message-ID: <200605301154.k4UBswT31506@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/resources/Templates/Tasks
In directory sheep:/tmp/cvs-serv12237/src/main/resources/Templates/Tasks

Modified Files:
	Quartz.xml 
Log Message:


Index: Quartz.xml
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/resources/Templates/Tasks/Quartz.xml,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** Quartz.xml	4 Jan 2006 15:55:32 -0000	1.1
--- Quartz.xml	30 May 2006 11:54:56 -0000	1.2
***************
*** 8,12 ****
  		<property name="ShowInTaskList" value="no" type="Boolean" locked="yes"/>
  		<property name="ServiceId" type="string" value="zebra.QuartzTaskAction" locked="yes"/>
! 		<property name="Wait" type="string" value="" locked="no"/>
  	</properties>
  	<properties name="(Inputs)"/>
--- 8,13 ----
  		<property name="ShowInTaskList" value="no" type="Boolean" locked="yes"/>
  		<property name="ServiceId" type="string" value="zebra.QuartzTaskAction" locked="yes"/>
! 		<property name="hour" type="int" value="" locked="no"/>
! 		<property name="minute" type="int" value="" locked="no"/>
  	</properties>
  	<properties name="(Inputs)"/>



From nobody at sheep.berlios.de  Tue May 30 17:18:56 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 17:18:56 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/impl ZebraSubflowsTest.java,1.1,1.2 PropertySetBehaviourTest.java,1.2,1.3
Message-ID: <200605301518.k4UFIuT09031@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/impl
In directory sheep:/tmp/cvs-serv13101/src/test/java/com/anite/zebra/hivemind/impl

Modified Files:
	ZebraSubflowsTest.java PropertySetBehaviourTest.java 
Log Message:


Index: ZebraSubflowsTest.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/impl/ZebraSubflowsTest.java,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** ZebraSubflowsTest.java	30 Apr 2006 12:57:01 -0000	1.1
--- ZebraSubflowsTest.java	30 May 2006 15:18:53 -0000	1.2
***************
*** 39,51 ****
      }
      
!     public void testSubflows() throws CreateProcessException, StartProcessException{
!         
!         ZebraProcessInstance zpi = zebra.createProcessPaused("SubProcessReturnTop");
!         
!         assertNotNull(zpi);
!         zebra.startProcess(zpi);
!         
!         assertEquals(3,zpi.getHistoryInstances().size());
!         
!     }
  }
--- 39,51 ----
      }
      
! //    public void testSubflows() throws CreateProcessException, StartProcessException{
! //        
! //        ZebraProcessInstance zpi = zebra.createProcessPaused("SubProcessReturnTop");
! //        
! //        assertNotNull(zpi);
! //        zebra.startProcess(zpi);
! //        
! //        assertEquals(3,zpi.getHistoryInstances().size());
! //        
! //    }
  }

Index: PropertySetBehaviourTest.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/impl/PropertySetBehaviourTest.java,v
retrieving revision 1.2
retrieving revision 1.3
diff -C2 -d -r1.2 -r1.3
*** PropertySetBehaviourTest.java	20 Feb 2006 15:52:30 -0000	1.2
--- PropertySetBehaviourTest.java	30 May 2006 15:18:53 -0000	1.3
***************
*** 47,85 ****
      }
  
!     public void testManualWorkflow() throws Exception {
!         ZebraProcessInstance pi = zebra.createProcessPaused("TestPropertySetPersistence");
! 
!         zebra.startProcess(pi);
!         // Should go to activity 1
! 
!         int i = 0;
!         for (ZebraTaskInstance instance : pi.getTaskInstances()) {
!             i++;
!             zebra.transitionTask(instance);
!         }
!         assertEquals(1, NoopActivity1.executionCount);
!         assertEquals(1, i);
! 
!         for (ZebraTaskInstance instance : pi.getTaskInstances()) {
!             i++;
!             zebra.transitionTask(instance);
!         }
!         assertEquals(2, NoopActivity1.executionCount);
!         assertEquals(2, i);
! 
!         // Quartz task should wait 1 seconds        
!         Thread.sleep(2000);
! 
!         // As this happend on another thread the test must load it from the db again.
!         session.evict(pi);
!         pi = (ZebraProcessInstance) session.load(ZebraProcessInstance.class, pi.getProcessInstanceId());
! 
!         for (ZebraTaskInstance instance : pi.getTaskInstances()) {
!             i++;
!             zebra.transitionTask(instance);
!         }
!         assertEquals(3, NoopActivity1.executionCount);
!         assertEquals(3, i);
!     }
  
      public void testPropertySet() throws Exception {
--- 47,85 ----
      }
  
! //    public void testManualWorkflow() throws Exception {
! //        ZebraProcessInstance pi = zebra.createProcessPaused("TestPropertySetPersistence");
! //
! //        zebra.startProcess(pi);
! //        // Should go to activity 1
! //
! //        int i = 0;
! //        for (ZebraTaskInstance instance : pi.getTaskInstances()) {
! //            i++;
! //            zebra.transitionTask(instance);
! //        }
! //        assertEquals(1, NoopActivity1.executionCount);
! //        assertEquals(1, i);
! //
! //        for (ZebraTaskInstance instance : pi.getTaskInstances()) {
! //            i++;
! //            zebra.transitionTask(instance);
! //        }
! //        assertEquals(2, NoopActivity1.executionCount);
! //        assertEquals(2, i);
! //
! //        // Quartz task should wait 1 seconds        
! //        Thread.sleep(2000);
! //
! //        // As this happend on another thread the test must load it from the db again.
! //        session.evict(pi);
! //        pi = (ZebraProcessInstance) session.load(ZebraProcessInstance.class, pi.getProcessInstanceId());
! //
! //        for (ZebraTaskInstance instance : pi.getTaskInstances()) {
! //            i++;
! //            zebra.transitionTask(instance);
! //        }
! //        assertEquals(3, NoopActivity1.executionCount);
! //        assertEquals(3, i);
! //    }
  
      public void testPropertySet() throws Exception {



From nobody at sheep.berlios.de  Tue May 30 17:18:56 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 17:18:56 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/test/resources/processes TestTimedTaskRunner.acgwfd.xml,NONE,1.1 TestQuartzProcess.acgwfd.xml,1.1,1.2
Message-ID: <200605301518.k4UFIuT09035@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/resources/processes
In directory sheep:/tmp/cvs-serv13101/src/test/resources/processes

Modified Files:
	TestQuartzProcess.acgwfd.xml 
Added Files:
	TestTimedTaskRunner.acgwfd.xml 
Log Message:


--- NEW FILE: TestTimedTaskRunner.acgwfd.xml ---
<ACGWFDNative Version="3.0"><ProcessVersions><ProcessVersion VersionID="1"><ProcessDef ProcessTemplate="Zebra"><properties name="(General)"><property locked="-1" name="Name" value="TestTimedTaskRunner" type="string"/></properties><TaskDefs/><RoutingDefs/></ProcessDef></ProcessVersion><ProcessVersion VersionID="2"><ProcessDef FirstTask="1" ProcessTemplate="Zebra"><properties name="(General)"><property locked="-1" name="Name" value="TestTimedTaskRunner" type="string"/><property locked="-1" name="Class Destruct" value="com.anite.zebra.hivemind.lifecycle.ProcessDestruct" type="string"/><property locked="-1" name="Class Construct" value="com.anite.zebra.hivemind.lifecycle.ProcessConstruct" type="string"/></properties><properties name="Visibility"><property locked="0" name="DebugFlow" value="Yes" type="boolean"/><property locked="0" name="Display Name" value="" type="string"/></properties><properties name="Security"><property locked="0" name="Process Start Permissions" value="systemAccess;" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/><TaskDefs><TaskDef GUID="1" Height="1440" Left="855" Top="810" Width="2340" TaskTemplate="Null"><properties name="(General)"><property locked="0" name="Name" value="Null" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties></TaskDef><TaskDef GUID="2" Height="1440" Left="780" Top="4950" Width="2340" 
TaskTemplate="Hivemind"><properties name="(General)"><property locked="0" name="Name" value="Hivemind" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="com.anite.zebra.hivemind.taskAction.HivemindServiceTaskAction" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="-1" name="ServiceId" value="zebra.quartzTask" type="string"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties><properties name="(Inputs)"/></TaskDef><TaskDef GUID="3" Height="1440" Left="870" Top="2805" Width="2340" TaskTemplate="Manual Activity"><properties name="(General)"><property locked="0" name="Name" value="Manual Activity" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="No" type="boolean"/><property locked="0" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties></TaskDef></TaskDefs><RoutingDefs><RoutingDef GUID="4" TaskDestGUID="3" TaskOrgGUID="1"><Points><Point X="2025" Y="2805"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" n
ame="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef><RoutingDef GUID="5" TaskDestGUID="2" TaskOrgGUID="3"><Points><Point X="1995" Y="4950"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef></RoutingDefs></ProcessDef></ProcessVersion><ProcessVersion VersionID="3"><ProcessDef FirstTask="1" ProcessTemplate="Zebra"><properties name="(General)"><property locked="-1" name="Name" value="TestTimedTaskRunner" type="string"/><property locked="-1" name="Class Destruct" value="com.anite.zebra.hivemind.lifecycle.ProcessDestruct" type="string"/><property locked="-1" name="Class Construct" value="com.anite.zebra.hivemind.lifecycle.ProcessConstruct" type="string"/></properties><properties name="Visibility"><property locked="0" name="DebugFlow" value="Yes" type="boolean"/><property locked="0" name="Display Name" value="" type="string"/></properties><properties name="Security"><property locked="0" name="Process Start Permissions" value="systemAccess;" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/><TaskDefs><TaskDef GUID="1" Height="1440" Left="855" Top="810" Width="2340" TaskTemplate="Null"><properties name="(General)"><property locked="0" name="Name" value="Null" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name
="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/></properties></TaskDef><TaskDef GUID="2" Height="1440" Left="870" Top="2805" Width="2340" TaskTemplate="Manual Activity"><properties name="(General)"><property locked="0" name="Name" value="Manual Activity" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="No" type="boolean"/><property locked="0" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/></properties></TaskDef><TaskDef GUID="3" Height="1440" Left="1215" Top="4935" Width="2340" TaskTemplate="Hivemind"><properties name="(General)"><property locked="0" name="Name" value="Hivemind" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="com.anite.zebra.hivemind.taskAction.HivemindServiceTaskAction" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="ServiceId" value="zebra.test.noopTaskAction" type="string"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties><properties name="(Inputs)"/></TaskDef></Task
Defs><RoutingDefs><RoutingDef GUID="4" TaskDestGUID="2" TaskOrgGUID="1"><Points><Point X="2025" Y="2805"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef><RoutingDef GUID="5" TaskDestGUID="3" TaskOrgGUID="2"><Points><Point X="1755" Y="4935"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef></RoutingDefs></ProcessDef></ProcessVersion><ProcessVersion VersionID="4"><ProcessDef FirstTask="1" ProcessTemplate="Zebra"><properties name="(General)"><property locked="-1" name="Name" value="TestTimedTaskRunner" type="string"/><property locked="-1" name="Class Destruct" value="com.anite.zebra.hivemind.lifecycle.ProcessDestruct" type="string"/><property locked="-1" name="Class Construct" value="com.anite.zebra.hivemind.lifecycle.ProcessConstruct" type="string"/></properties><properties name="Visibility"><property locked="0" name="DebugFlow" value="Yes" type="boolean"/><property locked="0" name="Display Name" value="" type="string"/></properties><properties name="Security"><property locked="0" name="Process Start Permissions" value="systemAccess;" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/><TaskDefs><TaskDef GUID="1" Height="1440" Left="855" Top="810" Width="2340" TaskTemplate="Null"><properties name="(General)"><property locked="0" name="Name" value="Null" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><propert
y locked="-1" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/></properties></TaskDef><TaskDef GUID="2" Height="1440" Left="870" Top="2805" Width="2340" TaskTemplate="Manual Activity"><properties name="(General)"><property locked="0" name="Name" value="Manual Activity" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="No" type="boolean"/><property locked="0" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/></properties></TaskDef><TaskDef GUID="3" Height="1440" Left="1215" Top="4935" Width="2340" TaskTemplate="Hivemind"><properties name="(General)"><property locked="0" name="Name" value="Hivemind" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="com.anite.zebra.hivemind.taskAction.HivemindServiceTaskAction" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="ServiceId" value="zebra.test.noopTaskAction" type="strin
g"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties><properties name="(Inputs)"/></TaskDef></TaskDefs><RoutingDefs><RoutingDef GUID="4" TaskDestGUID="2" TaskOrgGUID="1"><Points><Point X="2025" Y="2805"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef><RoutingDef GUID="5" TaskDestGUID="3" TaskOrgGUID="2"><Points><Point X="1755" Y="4935"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef></RoutingDefs></ProcessDef></ProcessVersion><ProcessVersion VersionID="5"><ProcessDef FirstTask="1" ProcessTemplate="Zebra"><properties name="(General)"><property locked="-1" name="Name" value="TestTimedTaskRunner" type="string"/><property locked="-1" name="Class Destruct" value="com.anite.zebra.hivemind.lifecycle.ProcessDestruct" type="string"/><property locked="-1" name="Class Construct" value="com.anite.zebra.hivemind.lifecycle.ProcessConstruct" type="string"/></properties><properties name="Visibility"><property locked="0" name="DebugFlow" value="Yes" type="boolean"/><property locked="0" name="Display Name" value="" type="string"/></properties><properties name="Security"><property locked="0" name="Process Start Permissions" value="systemAccess;" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/><TaskDefs><TaskDef GUID="1" Height="
1440" Left="855" Top="810" Width="2340" TaskTemplate="Null"><properties name="(General)"><property locked="0" name="Name" value="Null" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/></properties></TaskDef><TaskDef GUID="2" Height="1440" Left="870" Top="2805" Width="2340" TaskTemplate="Manual Activity"><properties name="(General)"><property locked="0" name="Name" value="Manual Activity" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="No" type="boolean"/><property locked="0" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/></properties></TaskDef><TaskDef GUID="3" Height="1440" Left="1575" Top="5055" Width="2340" TaskTemplate="Hivemind"><properties name="(General)"><property locked="0" name="Name" value="Hivemind" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="com.anite.zebra.hivemind.taskAction.HivemindServiceTaskAction" type=
"string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="ServiceId" value="zebra.test.noopTaskAction" type="string"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties><properties name="(Inputs)"/></TaskDef></TaskDefs><RoutingDefs><RoutingDef GUID="4" TaskDestGUID="2" TaskOrgGUID="1"><Points><Point X="2025" Y="2805"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef><RoutingDef GUID="5" TaskDestGUID="3" TaskOrgGUID="2"><Points><Point X="2115" Y="5055"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef></RoutingDefs></ProcessDef></ProcessVersion><ProcessVersion VersionID="6"><ProcessDef FirstTask="1" ProcessTemplate="Zebra"><properties name="(General)"><property locked="-1" name="Name" value="TestTimedTaskRunner" type="string"/><property locked="-1" name="Class Destruct" value="com.anite.zebra.hivemind.lifecycle.ProcessDestruct" type="string"/><property locked="-1" name="Class Construct" value="com.anite.zebra.hivemind.lifecycle.ProcessConstruct" type="string"/></properties><properties name="Visibility"><property locked="0" name="DebugFlow" value="Yes" type="boolean"/><property locked="0" name="Display Name" value="" type="string"/></properties><properties 
name="Security"><property locked="0" name="Process Start Permissions" value="systemAccess;" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/><TaskDefs><TaskDef GUID="1" Height="1440" Left="855" Top="810" Width="2340" TaskTemplate="Null"><properties name="(General)"><property locked="0" name="Name" value="Null" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/></properties></TaskDef><TaskDef GUID="2" Height="1440" Left="870" Top="2805" Width="2340" TaskTemplate="Manual Activity"><properties name="(General)"><property locked="0" name="Name" value="Manual Activity" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="No" type="boolean"/><property locked="0" name="Class Name" value="" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/></properties></TaskDef><TaskDef GUID="3" Height="1440" Left="1575" Top="5055" Width="2340" TaskTemplate="Hivemind"><properties name="(General)"><property locked="0" n
ame="Name" value="Hivemind" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="com.anite.zebra.hivemind.taskAction.HivemindServiceTaskAction" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="0" name="ServiceId" value="zebra.test.noopTaskAction" type="string"/><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/></properties><properties name="(Inputs)"/></TaskDef></TaskDefs><RoutingDefs><RoutingDef GUID="4" TaskDestGUID="2" TaskOrgGUID="1"><Points><Point X="2025" Y="2805"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef><RoutingDef GUID="5" TaskDestGUID="3" TaskOrgGUID="2"><Points><Point X="2115" Y="5055"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef></RoutingDefs></ProcessDef></ProcessVersion></ProcessVersions></ACGWFDNative>

Index: TestQuartzProcess.acgwfd.xml
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/resources/processes/TestQuartzProcess.acgwfd.xml,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** TestQuartzProcess.acgwfd.xml	4 Jan 2006 15:55:33 -0000	1.1
--- TestQuartzProcess.acgwfd.xml	30 May 2006 15:18:54 -0000	1.2
***************
*** 4,113 ****
  			<ProcessDef FirstTask="2" ProcessTemplate="Zebra">
  				<properties name="(General)">
! 					<property locked="-1" name="Name" value="TestQuartzProcess"
! 						type="string"/>
! 					<property locked="-1" name="Class Destruct"
! 						value="com.anite.zebra.hivemind.lifecycle.ProcessDestruct"
! 						type="string"/>
! 					<property locked="-1" name="Class Construct"
! 						value="com.anite.zebra.hivemind.lifecycle.ProcessConstruct"
! 						type="string"/>
  				</properties>
  				<properties name="Visibility">
! 					<property locked="0" name="DebugFlow" value="Yes"
! 						type="boolean"/>
! 					<property locked="0" name="Display Name" value=""
! 						type="string"/>
  				</properties>
  				<properties name="Security">
! 					<property locked="0" name="Process Start Permissions"
! 						value="systemAccess;" type="string"/>
! 					<property locked="0" name="Dynamic Permissions" value=""
! 						type="string"/>
  				</properties>
  				<properties name="(Inputs)"/>
  				<properties name="(Outputs)"/>
  				<TaskDefs>
! 					<TaskDef GUID="1" Height="1440" Left="7395" Top="4665"
! 						Width="2340" TaskTemplate="Activity">
  						<properties name="(General)">
! 							<property locked="0" name="Name" value="Activity"
! 								type="string"/>
! 							<property locked="0" name="Synchronise" value="No"
! 								type="boolean"/>
! 							<property locked="-1" name="Auto" value="Yes"
! 								type="boolean"/>
! 							<property locked="0" name="Class Name"
! 								value="com.anite.zebra.hivemind.taskAction.LogTaskActivity"
! 								type="string"/>
! 							<property locked="0" name="NewThread" value="No"
! 								type="boolean"/>
  						</properties>
  						<properties name="(General Task Properties)">
! 							<property locked="0" name="Static Permissions"
! 								value="systemAccess" type="string"/>
! 							<property locked="0" name="Dynamic Permissions"
! 								value="" type="string"/>
! 							<property locked="0" name="ShowInHistory" value="Yes"
! 								type="boolean"/>
! 							<property locked="-1" name="ShowInTaskList" value="No"
! 								type="boolean"/>
  						</properties>
  						<properties name="(Inputs)"/>
  					</TaskDef>
! 					<TaskDef GUID="2" Height="1440" Left="1680" Top="120"
! 						Width="2340" TaskTemplate="Activity">
  						<properties name="(General)">
! 							<property locked="0" name="Name" value="Activity"
! 								type="string"/>
! 							<property locked="0" name="Synchronise" value="No"
! 								type="boolean"/>
! 							<property locked="-1" name="Auto" value="Yes"
! 								type="boolean"/>
! 							<property locked="0" name="Class Name"
! 								value="com.anite.zebra.hivemind.taskAction.LogTaskActivity"
! 								type="string"/>
! 							<property locked="0" name="NewThread" value="No"
! 								type="boolean"/>
  						</properties>
  						<properties name="(General Task Properties)">
! 							<property locked="0" name="Static Permissions"
! 								value="systemAccess" type="string"/>
! 							<property locked="0" name="Dynamic Permissions"
! 								value="" type="string"/>
! 							<property locked="0" name="ShowInHistory" value="Yes"
! 								type="boolean"/>
! 							<property locked="-1" name="ShowInTaskList" value="No"
! 								type="boolean"/>
  						</properties>
  						<properties name="(Inputs)"/>
  					</TaskDef>
! 					<TaskDef GUID="3" Height="1440" Left="5205" Top="2385"
! 						Width="2085" TaskTemplate="Quartz">
  						<properties name="(General)">
! 							<property locked="0" name="Name" value="Quartz"
! 								type="string"/>
! 							<property locked="0" name="Synchronise" value="No"
! 								type="boolean"/>
! 							<property locked="-1" name="Auto" value="Yes"
! 								type="boolean"/>
! 							<property locked="-1" name="Class Name"
! 								value="com.anite.zebra.hivemind.taskAction.HivemindServiceTaskAction"
! 								type="string"/>
! 							<property locked="0" name="NewThread" value="No"
! 								type="boolean"/>
  						</properties>
  						<properties name="(General Task Properties)">
! 							<property locked="0" name="Static Permissions"
! 								value="systemAccess" type="string"/>
! 							<property locked="0" name="Dynamic Permissions"
! 								value="" type="string"/>
! 							<property locked="0" name="ShowInHistory" value="Yes"
! 								type="boolean"/>
! 							<property locked="-1" name="ShowInTaskList" value="No"
! 								type="boolean"/>
! 							<property locked="-1" name="ServiceId"
! 								value="zebra.QuartzTaskAction" type="string"/>
! 							<property locked="0" name="Wait" value="40S"
! 								type="string"/>
  						</properties>
  						<properties name="(Inputs)"/>
--- 4,69 ----
  			<ProcessDef FirstTask="2" ProcessTemplate="Zebra">
  				<properties name="(General)">
! 					<property locked="-1" name="Name" value="TestQuartzProcess" type="string"/>
! 					<property locked="-1" name="Class Destruct" value="com.anite.zebra.hivemind.lifecycle.ProcessDestruct" type="string"/>
! 					<property locked="-1" name="Class Construct" value="com.anite.zebra.hivemind.lifecycle.ProcessConstruct" type="string"/>
  				</properties>
  				<properties name="Visibility">
! 					<property locked="0" name="DebugFlow" value="Yes" type="boolean"/>
! 					<property locked="0" name="Display Name" value="" type="string"/>
  				</properties>
  				<properties name="Security">
! 					<property locked="0" name="Process Start Permissions" value="systemAccess;" type="string"/>
! 					<property locked="0" name="Dynamic Permissions" value="" type="string"/>
  				</properties>
  				<properties name="(Inputs)"/>
  				<properties name="(Outputs)"/>
  				<TaskDefs>
! 					<TaskDef GUID="1" Height="1440" Left="7395" Top="4665" Width="2340" TaskTemplate="Activity">
  						<properties name="(General)">
! 							<property locked="0" name="Name" value="Activity" type="string"/>
! 							<property locked="0" name="Synchronise" value="No" type="boolean"/>
! 							<property locked="-1" name="Auto" value="Yes" type="boolean"/>
! 							<property locked="0" name="Class Name" value="com.anite.zebra.hivemind.taskAction.LogTaskActivity" type="string"/>
! 							<property locked="0" name="NewThread" value="No" type="boolean"/>
  						</properties>
  						<properties name="(General Task Properties)">
! 							<property locked="0" name="Static Permissions" value="systemAccess" type="string"/>
! 							<property locked="0" name="Dynamic Permissions" value="" type="string"/>
! 							<property locked="0" name="ShowInHistory" value="Yes" type="boolean"/>
! 							<property locked="-1" name="ShowInTaskList" value="No" type="boolean"/>
  						</properties>
  						<properties name="(Inputs)"/>
  					</TaskDef>
! 					<TaskDef GUID="2" Height="1440" Left="1680" Top="120" Width="2340" TaskTemplate="Activity">
  						<properties name="(General)">
! 							<property locked="0" name="Name" value="Activity" type="string"/>
! 							<property locked="0" name="Synchronise" value="No" type="boolean"/>
! 							<property locked="-1" name="Auto" value="Yes" type="boolean"/>
! 							<property locked="0" name="Class Name" value="com.anite.zebra.hivemind.taskAction.LogTaskActivity" type="string"/>
! 							<property locked="0" name="NewThread" value="No" type="boolean"/>
  						</properties>
  						<properties name="(General Task Properties)">
! 							<property locked="0" name="Static Permissions" value="systemAccess" type="string"/>
! 							<property locked="0" name="Dynamic Permissions" value="" type="string"/>
! 							<property locked="0" name="ShowInHistory" value="Yes" type="boolean"/>
! 							<property locked="-1" name="ShowInTaskList" value="No" type="boolean"/>
  						</properties>
  						<properties name="(Inputs)"/>
  					</TaskDef>
! 					<TaskDef GUID="3" Height="1440" Left="5205" Top="2385" Width="2085" TaskTemplate="Quartz">
  						<properties name="(General)">
! 							<property locked="0" name="Name" value="Quartz" type="string"/>
! 							<property locked="0" name="Synchronise" value="No" type="boolean"/>
! 							<property locked="-1" name="Auto" value="Yes" type="boolean"/>
! 							<property locked="-1" name="Class Name" value="com.anite.zebra.hivemind.taskAction.HivemindServiceTaskAction" type="string"/>
! 							<property locked="0" name="NewThread" value="No" type="boolean"/>
  						</properties>
  						<properties name="(General Task Properties)">
! 							<property locked="0" name="Static Permissions" value="systemAccess" type="string"/>
! 							<property locked="0" name="Dynamic Permissions" value="" type="string"/>
! 							<property locked="0" name="ShowInHistory" value="Yes" type="boolean"/>
! 							<property locked="-1" name="ShowInTaskList" value="No" type="boolean"/>
! 							<property locked="-1" name="ServiceId" value="zebra.QuartzTaskAction" type="string"/>
! 							<property locked="0" name="Wait" value="40S" type="string"/>
  						</properties>
  						<properties name="(Inputs)"/>
***************
*** 120,130 ****
  						</Points>
  						<properties name="(General)">
! 							<property locked="0" name="Name" value=""
! 								type="string"/>
! 							<property locked="0" name="Parallel" value="No"
! 								type="boolean"/>
! 							<property locked="0" name="Condition Class"
! 								value="com.anite.zebra.hivemind.routing.RoutingNameCondition"
! 								type="string"/>
  						</properties>
  					</RoutingDef>
--- 76,82 ----
  						</Points>
  						<properties name="(General)">
! 							<property locked="0" name="Name" value="" type="string"/>
! 							<property locked="0" name="Parallel" value="No" type="boolean"/>
! 							<property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/>
  						</properties>
  					</RoutingDef>
***************
*** 134,144 ****
  						</Points>
  						<properties name="(General)">
! 							<property locked="0" name="Name" value=""
! 								type="string"/>
! 							<property locked="0" name="Parallel" value="No"
! 								type="boolean"/>
! 							<property locked="0" name="Condition Class"
! 								value="com.anite.zebra.hivemind.routing.RoutingNameCondition"
! 								type="string"/>
  						</properties>
  					</RoutingDef>
--- 86,92 ----
  						</Points>
  						<properties name="(General)">
! 							<property locked="0" name="Name" value="" type="string"/>
! 							<property locked="0" name="Parallel" value="No" type="boolean"/>
! 							<property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/>
  						</properties>
  					</RoutingDef>
***************
*** 146,149 ****
  			</ProcessDef>
  		</ProcessVersion>
! 	</ProcessVersions>
! </ACGWFDNative>
--- 94,97 ----
  			</ProcessDef>
  		</ProcessVersion>
! 		<ProcessVersion VersionID="2"><ProcessDef FirstTask="2" ProcessTemplate="Zebra"><properties name="(General)"><property locked="-1" name="Name" value="TestQuartzProcess" type="string"/><property locked="-1" name="Class Destruct" value="com.anite.zebra.hivemind.lifecycle.ProcessDestruct" type="string"/><property locked="-1" name="Class Construct" value="com.anite.zebra.hivemind.lifecycle.ProcessConstruct" type="string"/></properties><properties name="Visibility"><property locked="0" name="DebugFlow" value="Yes" type="boolean"/><property locked="0" name="Display Name" value="" type="string"/></properties><properties name="Security"><property locked="0" name="Process Start Permissions" value="systemAccess;" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/><TaskDefs><TaskDef GUID="1" Height="1440" Left="7395" Top="4665" Width="2340" TaskTemplate="Activity"><properties name="(General)"><property locked="0" name="Name" value="Activity" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="0" name="Class Name" value="com.anite.zebra.hivemind.taskAction.LogTaskActivity" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/></properties><properties name="(Inputs)"/></TaskDef><TaskDef GUID="2" Height="1440" Left="1680" Top="120" Width="2340" TaskTemplate="Activity"><properties name="(General)"><property locked="0" name="Name" value="Activity" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property
 locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="0" name="Class Name" value="com.anite.zebra.hivemind.taskAction.LogTaskActivity" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/></properties><properties name="(Inputs)"/></TaskDef><TaskDef GUID="3" Height="1440" Left="5205" Top="2385" Width="2085" TaskTemplate="Quartz"><properties name="(General)"><property locked="0" name="Name" value="Quartz" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="com.anite.zebra.hivemind.taskAction.HivemindServiceTaskAction" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="-1" name="ServiceId" value="zebra.QuartzTaskAction" type="string"/><property locked="0" name="hour" value="12" type="string"/><property locked="0" name="minute" value="47" type="string"/><property locked="0" name="Wait" value="40S" type="string"/></properties><properties name="(Inputs)"/></TaskDef></TaskDefs><RoutingDefs><RoutingDef GUID="4" TaskDestGUID="3" TaskOrgGUID="2"><Points><Point X="6255" Y="2385"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Par
allel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef><RoutingDef GUID="5" TaskDestGUID="1" TaskOrgGUID="3"><Points><Point X="8895" Y="4665"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef></RoutingDefs></ProcessDef></ProcessVersion><ProcessVersion VersionID="3"><ProcessDef FirstTask="2" ProcessTemplate="Zebra"><properties name="(General)"><property locked="-1" name="Name" value="TestQuartzProcess" type="string"/><property locked="-1" name="Class Destruct" value="com.anite.zebra.hivemind.lifecycle.ProcessDestruct" type="string"/><property locked="-1" name="Class Construct" value="com.anite.zebra.hivemind.lifecycle.ProcessConstruct" type="string"/></properties><properties name="Visibility"><property locked="0" name="DebugFlow" value="Yes" type="boolean"/><property locked="0" name="Display Name" value="" type="string"/></properties><properties name="Security"><property locked="0" name="Process Start Permissions" value="systemAccess;" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/></properties><properties name="(Inputs)"/><properties name="(Outputs)"/><TaskDefs><TaskDef GUID="1" Height="1440" Left="915" Top="6465" Width="2340" TaskTemplate="Activity"><properties name="(General)"><property locked="0" name="Name" value="Activity" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="0" name="Class Name" value="com.anite.zebra.hivemind.taskAction.LogTaskActivity" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properti
es)"><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/></properties><properties name="(Inputs)"/></TaskDef><TaskDef GUID="2" Height="1440" Left="1680" Top="120" Width="2340" TaskTemplate="Activity"><properties name="(General)"><property locked="0" name="Name" value="Activity" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="0" name="Class Name" value="com.anite.zebra.hivemind.taskAction.LogTaskActivity" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/></properties><properties name="(Inputs)"/></TaskDef><TaskDef GUID="3" Height="1440" Left="885" Top="2145" Width="2085" TaskTemplate="Quartz"><properties name="(General)"><property locked="0" name="Name" value="Quartz" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="com.anite.zebra.hivemind.taskAction.HivemindServiceTaskAction" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/><property lo
cked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="-1" name="ServiceId" value="zebra.QuartzTaskAction" type="string"/><property locked="0" name="hour" value="12" type="string"/><property locked="0" name="minute" value="48" type="string"/><property locked="0" name="Wait" value="40S" type="string"/></properties><properties name="(Inputs)"/></TaskDef></TaskDefs><RoutingDefs><RoutingDef GUID="4" TaskDestGUID="3" TaskOrgGUID="2"><Points><Point X="1935" Y="2145"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef><RoutingDef GUID="5" TaskDestGUID="1" TaskOrgGUID="3"><Points><Point X="2415" Y="6465"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef></RoutingDefs></ProcessDef></ProcessVersion><ProcessVersion VersionID="4"><ProcessDef FirstTask="2" ProcessTemplate="Zebra"><properties name="(General)"><property locked="-1" name="Name" value="TestQuartzProcess" type="string"/><property locked="-1" name="Class Destruct" value="com.anite.zebra.hivemind.lifecycle.ProcessDestruct" type="string"/><property locked="-1" name="Class Construct" value="com.anite.zebra.hivemind.lifecycle.ProcessConstruct" type="string"/></properties><properties name="Visibility"><property locked="0" name="DebugFlow" value="Yes" type="boolean"/><property locked="0" name="Display Name" value="" type="string"/></properties><properties name="Security"><property locked="0" name="Process Start Permissions" value="systemAccess;" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/></properties><p
roperties name="(Inputs)"/><properties name="(Outputs)"/><TaskDefs><TaskDef GUID="1" Height="1440" Left="915" Top="6465" Width="2340" TaskTemplate="Activity"><properties name="(General)"><property locked="0" name="Name" value="Activity" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="0" name="Class Name" value="com.anite.zebra.hivemind.taskAction.LogTaskActivity" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/></properties><properties name="(Inputs)"/></TaskDef><TaskDef GUID="2" Height="1440" Left="1680" Top="120" Width="2340" TaskTemplate="Activity"><properties name="(General)"><property locked="0" name="Name" value="Activity" type="string"/><property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="0" name="Class Name" value="com.anite.zebra.hivemind.taskAction.LogTaskActivity" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/></properties><properties name="(Inputs)"/></TaskDef><TaskDef GUID="3" Height="1440" Left="885" Top="2385" Width="2085" TaskTemplate="Quartz"><properties name="(General)"><property locked="0" name="Name" value="Quartz" type="string"/><
property locked="0" name="Synchronise" value="No" type="boolean"/><property locked="-1" name="Auto" value="Yes" type="boolean"/><property locked="-1" name="Class Name" value="com.anite.zebra.hivemind.taskAction.HivemindServiceTaskAction" type="string"/><property locked="0" name="NewThread" value="No" type="boolean"/></properties><properties name="(General Task Properties)"><property locked="0" name="Static Permissions" value="systemAccess" type="string"/><property locked="0" name="Dynamic Permissions" value="" type="string"/><property locked="0" name="ShowInHistory" value="Yes" type="boolean"/><property locked="-1" name="ShowInTaskList" value="No" type="boolean"/><property locked="-1" name="ServiceId" value="zebra.QuartzTaskAction" type="string"/><property locked="0" name="hour" value="16" type="string"/><property locked="0" name="minute" value="12" type="string"/><property locked="0" name="Wait" value="40S" type="string"/></properties><properties name="(Inputs)"/></TaskDef></TaskDefs><RoutingDefs><RoutingDef GUID="4" TaskDestGUID="3" TaskOrgGUID="2"><Points><Point X="1935" Y="2385"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef><RoutingDef GUID="5" TaskDestGUID="1" TaskOrgGUID="3"><Points><Point X="2415" Y="6465"/></Points><properties name="(General)"><property locked="0" name="Name" value="" type="string"/><property locked="0" name="Parallel" value="No" type="boolean"/><property locked="0" name="Condition Class" value="com.anite.zebra.hivemind.routing.RoutingNameCondition" type="string"/></properties></RoutingDef></RoutingDefs></ProcessDef></ProcessVersion></ProcessVersions>
! </ACGWFDNative>



From nobody at sheep.berlios.de  Tue May 30 17:18:56 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Tue, 30 May 2006 17:18:56 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/taskAction QuartzServiceTaskActionTest.java,1.2,1.3
Message-ID: <200605301518.k4UFIuT09038@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/taskAction
In directory sheep:/tmp/cvs-serv13101/src/test/java/com/anite/zebra/hivemind/taskAction

Modified Files:
	QuartzServiceTaskActionTest.java 
Log Message:


Index: QuartzServiceTaskActionTest.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/test/java/com/anite/zebra/hivemind/taskAction/QuartzServiceTaskActionTest.java,v
retrieving revision 1.2
retrieving revision 1.3
diff -C2 -d -r1.2 -r1.3
*** QuartzServiceTaskActionTest.java	30 May 2006 11:54:56 -0000	1.2
--- QuartzServiceTaskActionTest.java	30 May 2006 15:18:54 -0000	1.3
***************
*** 43,49 ****
          zebra.startProcess(pi);
          
!         Thread.sleep(90000000);
!         
!         
          
      }
--- 43,47 ----
          zebra.startProcess(pi);
          
!         // This test needs to be run manually.
          
      }



From nobody at sheep.berlios.de  Wed May 31 09:11:19 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 31 May 2006 09:11:19 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind pom.xml,1.34,1.35
Message-ID: <200605310711.k4V7BJb18854@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind
In directory sheep:/tmp/cvs-serv4974

Modified Files:
	pom.xml 
Log Message:


Index: pom.xml
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/pom.xml,v
retrieving revision 1.34
retrieving revision 1.35
diff -C2 -d -r1.34 -r1.35
*** pom.xml	26 May 2006 15:31:14 -0000	1.34
--- pom.xml	31 May 2006 07:11:17 -0000	1.35
***************
*** 123,127 ****
              <groupId>fulcrum-hivemind</groupId>
              <artifactId>fulcrum-quartz</artifactId>
!             <version>2.2</version>
          </dependency>
          <dependency>
--- 123,127 ----
              <groupId>fulcrum-hivemind</groupId>
              <artifactId>fulcrum-quartz</artifactId>
!             <version>2.0</version>
          </dependency>
          <dependency>



From nobody at sheep.berlios.de  Wed May 31 10:47:38 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 31 May 2006 10:47:38 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind pom.xml,1.35,1.36
Message-ID: <200605310847.k4V8lcb24411@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind
In directory sheep:/tmp/cvs-serv32608

Modified Files:
	pom.xml 
Log Message:


Index: pom.xml
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/pom.xml,v
retrieving revision 1.35
retrieving revision 1.36
diff -C2 -d -r1.35 -r1.36
*** pom.xml	31 May 2006 07:11:17 -0000	1.35
--- pom.xml	31 May 2006 08:47:35 -0000	1.36
***************
*** 135,146 ****
              <artifactId>zebra-core</artifactId>
              <version>0.5.2-dev</version>
!         </dependency>     
          <dependency>
              <groupId>zebra</groupId>
              <artifactId>zebra-xmlloader</artifactId>
              <version>1.0</version>
          </dependency>
          <!-- End Zebra -->
-        
      </dependencies>
      <distributionManagement>
--- 135,151 ----
              <artifactId>zebra-core</artifactId>
              <version>0.5.2-dev</version>
!         </dependency>
          <dependency>
              <groupId>zebra</groupId>
              <artifactId>zebra-xmlloader</artifactId>
              <version>1.0</version>
+             <exclusions>
+                 <exclusion>
+                     <groupId>jaxme</groupId>
+                     <artifactId>jaxme-api</artifactId>
+                 </exclusion>
+             </exclusions>
          </dependency>
          <!-- End Zebra -->
      </dependencies>
      <distributionManagement>
***************
*** 175,179 ****
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-javadoc-plugin</artifactId>
!             </plugin>        
          </plugins>
      </reporting>
--- 180,184 ----
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-javadoc-plugin</artifactId>
!             </plugin>
          </plugins>
      </reporting>



From nobody at sheep.berlios.de  Wed May 31 11:33:43 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 31 May 2006 11:33:43 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/impl TimedTaskRunnerImpl.java,1.4,1.5
Message-ID: <200605310933.k4V9Xhb27003@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/impl
In directory sheep:/tmp/cvs-serv8909/src/main/java/com/anite/zebra/hivemind/impl

Modified Files:
	TimedTaskRunnerImpl.java 
Log Message:


Index: TimedTaskRunnerImpl.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/impl/TimedTaskRunnerImpl.java,v
retrieving revision 1.4
retrieving revision 1.5
diff -C2 -d -r1.4 -r1.5
*** TimedTaskRunnerImpl.java	30 May 2006 11:54:57 -0000	1.4
--- TimedTaskRunnerImpl.java	31 May 2006 09:33:41 -0000	1.5
***************
*** 17,21 ****
  package com.anite.zebra.hivemind.impl;
  
! import java.rmi.registry.Registry;
  import java.util.List;
  
--- 17,21 ----
  package com.anite.zebra.hivemind.impl;
  
! import java.util.Date;
  import java.util.List;
  
***************
*** 184,190 ****
  
  		try {
! 
  			zebra.transitionTask(zti);
  			firedTimedTask.setFailed(false);
  		} catch (TransitionException e) {
  			log.error(e);
--- 184,192 ----
  
  		try {
! 			firedTimedTask.setZebraTaskInstanceId(zti.getTaskInstanceId());
! 			firedTimedTask.setStartTime(new Date());
  			zebra.transitionTask(zti);
  			firedTimedTask.setFailed(false);
+ 			firedTimedTask.setEndTime(new Date());			
  		} catch (TransitionException e) {
  			log.error(e);



From nobody at sheep.berlios.de  Wed May 31 11:33:43 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 31 May 2006 11:33:43 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask FiredTimedTask.java,1.3,1.4
Message-ID: <200605310933.k4V9Xhb26999@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask
In directory sheep:/tmp/cvs-serv8909/src/main/java/com/anite/zebra/hivemind/om/timedtask

Modified Files:
	FiredTimedTask.java 
Log Message:


Index: FiredTimedTask.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/src/main/java/com/anite/zebra/hivemind/om/timedtask/FiredTimedTask.java,v
retrieving revision 1.3
retrieving revision 1.4
diff -C2 -d -r1.3 -r1.4
*** FiredTimedTask.java	30 May 2006 10:44:47 -0000	1.3
--- FiredTimedTask.java	31 May 2006 09:33:41 -0000	1.4
***************
*** 80,84 ****
      
      public FiredTimedTask(TimedTask timedTask) {
!         // set timed task properties to the fired time task
      }
  
--- 80,85 ----
      
      public FiredTimedTask(TimedTask timedTask) {
!     	this.setTime(timedTask.getTime());
!     	
      }
  



From nobody at sheep.berlios.de  Wed May 31 11:34:20 2006
From: nobody at sheep.berlios.de (bgidley)
Date: Wed, 31 May 2006 11:34:20 +0200
Subject: [Zebra-checkins] zebra/src/java/zebra-hivemind pom.xml,1.36,1.37
Message-ID: <200605310934.k4V9YKb27072@bat.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-hivemind
In directory sheep:/tmp/cvs-serv9007

Modified Files:
	pom.xml 
Log Message:


Index: pom.xml
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-hivemind/pom.xml,v
retrieving revision 1.36
retrieving revision 1.37
diff -C2 -d -r1.36 -r1.37
*** pom.xml	31 May 2006 08:47:35 -0000	1.36
--- pom.xml	31 May 2006 09:34:18 -0000	1.37
***************
*** 6,10 ****
      <artifactId>zebra-hivemind</artifactId>
      <packaging>jar</packaging>
!     <version>4.0</version>
      <name>Zebra Hivemind Layer</name>
      <url>http://zebra.berlios.de/</url>
--- 6,10 ----
      <artifactId>zebra-hivemind</artifactId>
      <packaging>jar</packaging>
!     <version>4.0.1</version>
      <name>Zebra Hivemind Layer</name>
      <url>http://zebra.berlios.de/</url>



