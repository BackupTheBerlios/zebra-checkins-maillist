From nobody at sheep.berlios.de  Tue Jan 16 11:38:56 2007
From: nobody at sheep.berlios.de (mpn_uk)
Date: Tue, 16 Jan 2007 11:38:56 +0100 (CET)
Subject: [Zebra-checkins] zebra/src/java/zebra-core project.xml,1.11,1.12
Message-ID: <20070116103856.60A8FA7142@mail.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-core
In directory sheep:/tmp/cvs-serv6762

Modified Files:
	project.xml 
Log Message:
Minor fix to synchronisation code. Problem where if an autorun task existed straight after a join task the engine could erroneously believe the join task never becomes unblocked.

Revised the SplitJoinTest unit test to ensure that it tests for this scenario

Index: project.xml
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-core/project.xml,v
retrieving revision 1.11
retrieving revision 1.12
diff -C2 -d -r1.11 -r1.12
*** project.xml	25 Sep 2005 22:54:12 -0000	1.11
--- project.xml	16 Jan 2007 10:37:37 -0000	1.12
***************
*** 7,11 ****
      <artifactId>zebra-core</artifactId>
      <name>Zebra Core Process Engine</name>
!     <currentVersion>0.5.2-dev</currentVersion>
      <inceptionYear>2004</inceptionYear>
      <logo/>
--- 7,11 ----
      <artifactId>zebra-core</artifactId>
      <name>Zebra Core Process Engine</name>
!     <currentVersion>0.5.3</currentVersion>
      <inceptionYear>2004</inceptionYear>
      <logo/>
***************
*** 61,83 ****
              <roles>
                  <role>Senior Architect</role>
-             </roles>
-         </developer>
- 		<developer>
- 			<name>Ben Gidley</name>
- 			<id>bgidley</id>
- 			<email>ben.gidley at anite.com</email>
- 			<organization/>
- 			<roles>
- 				<role>Senior Architect</role>
- 			</roles>
- 		</developer>
-         <developer>
-             <name>Eric Pugh</name>
-             <id>dep4b</id>
-             <email>epugh at opensourceconnections.com</email>
-             <organization> OpenSource Connections </organization>
-             <url>http://www.opensourceconnections.com/</url>
-             <roles>
-                 <role>Developer</role>
              </roles>
          </developer>
--- 61,64 ----



From nobody at sheep.berlios.de  Tue Jan 16 11:38:56 2007
From: nobody at sheep.berlios.de (mpn_uk)
Date: Tue, 16 Jan 2007 11:38:56 +0100 (CET)
Subject: [Zebra-checkins]
	zebra/src/java/zebra-core/src/java/com/anite/zebra/core/util
	TaskSync.java, 1.3, 1.4
Message-ID: <20070116103856.CAC0FA7142@mail.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-core/src/java/com/anite/zebra/core/util
In directory sheep:/tmp/cvs-serv6762/src/java/com/anite/zebra/core/util

Modified Files:
	TaskSync.java 
Log Message:
Minor fix to synchronisation code. Problem where if an autorun task existed straight after a join task the engine could erroneously believe the join task never becomes unblocked.

Revised the SplitJoinTest unit test to ensure that it tests for this scenario

Index: TaskSync.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-core/src/java/com/anite/zebra/core/util/TaskSync.java,v
retrieving revision 1.3
retrieving revision 1.4
diff -C2 -d -r1.3 -r1.4
*** TaskSync.java	15 Sep 2005 16:45:23 -0000	1.3
--- TaskSync.java	16 Jan 2007 10:37:38 -0000	1.4
***************
*** 22,25 ****
--- 22,28 ----
  import java.util.Set;
  
+ import org.apache.commons.logging.Log;
+ import org.apache.commons.logging.LogFactory;
+ 
  import com.anite.zebra.core.definitions.api.IRoutingDefinition;
  import com.anite.zebra.core.definitions.api.ITaskDefinition;
***************
*** 34,38 ****
   */
  public class TaskSync {
!     /**
       * @return Returns TaskDefs marked as Synchronise=TRUE that this TaskDef can
       *         potentially block
--- 37,42 ----
   */
  public class TaskSync {
!     private static Log log = LogFactory.getLog(TaskSync.class);
! 	/**
       * @return Returns TaskDefs marked as Synchronise=TRUE that this TaskDef can
       *         potentially block
***************
*** 92,98 ****
          for (Iterator it = processTasks.iterator(); it.hasNext();) {
              ITaskInstance iti = (ITaskInstance) it.next();
!             ITaskDefinition itd = iti.getTaskDefinition();
!             if (!blockingDefs.containsKey(itd.getId())) {
!                 blockingDefs.put(itd.getId(), itd);
              }
          }
--- 96,104 ----
          for (Iterator it = processTasks.iterator(); it.hasNext();) {
              ITaskInstance iti = (ITaskInstance) it.next();
!             if (!iti.getTaskInstanceId().equals(task.getTaskInstanceId())) {
! 	            ITaskDefinition itd = iti.getTaskDefinition();
! 	            if (!blockingDefs.containsKey(itd.getId())) {
! 	                blockingDefs.put(itd.getId(), itd);
! 	            }
              }
          }
***************
*** 123,127 ****
                  ITaskDefinition srcTask = checkRouting.getOriginatingTaskDefinition();
                  if (blockingDefs.containsKey(srcTask.getId())) {
!                     return true;
                  }
                  if (!checkList.containsKey(srcTask.getId())) {
--- 129,136 ----
                  ITaskDefinition srcTask = checkRouting.getOriginatingTaskDefinition();
                  if (blockingDefs.containsKey(srcTask.getId())) {
!                     if (log.isInfoEnabled()) {
!                     	log.info("Task " + taskDef + " is being blocked by "  + srcTask);
!                     }
!                 	return true;
                  }
                  if (!checkList.containsKey(srcTask.getId())) {



From nobody at sheep.berlios.de  Tue Jan 16 11:38:57 2007
From: nobody at sheep.berlios.de (mpn_uk)
Date: Tue, 16 Jan 2007 11:38:57 +0100 (CET)
Subject: [Zebra-checkins]
	zebra/src/java/zebra-core/src/java/com/anite/zebra/core
	Engine.java, 1.8, 1.9
Message-ID: <20070116103857.0F1C3D7D62@mail.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-core/src/java/com/anite/zebra/core
In directory sheep:/tmp/cvs-serv6762/src/java/com/anite/zebra/core

Modified Files:
	Engine.java 
Log Message:
Minor fix to synchronisation code. Problem where if an autorun task existed straight after a join task the engine could erroneously believe the join task never becomes unblocked.

Revised the SplitJoinTest unit test to ensure that it tests for this scenario

Index: Engine.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-core/src/java/com/anite/zebra/core/Engine.java,v
retrieving revision 1.8
retrieving revision 1.9
diff -C2 -d -r1.8 -r1.9
*** Engine.java	25 Sep 2005 22:54:12 -0000	1.8
--- Engine.java	16 Jan 2007 10:37:38 -0000	1.9
***************
*** 335,339 ****
  				.iterator(); it.hasNext();) {
  			ITaskInstance checkTask = (ITaskInstance) it.next();
! 			if (syncList.containsKey(checkTask.getTaskDefinition().getId())) {
  				// sync task found, so add to the create list
  				if (!createdTasks.containsKey(checkTask.getTaskInstanceId())) {
--- 335,339 ----
  				.iterator(); it.hasNext();) {
  			ITaskInstance checkTask = (ITaskInstance) it.next();
! 			if (checkTask.getState()==ITaskInstance.STATE_AWAITINGSYNC && syncList.containsKey(checkTask.getTaskDefinition().getId())) {
  				// sync task found, so add to the create list
  				if (!createdTasks.containsKey(checkTask.getTaskInstanceId())) {



From nobody at sheep.berlios.de  Tue Jan 16 11:39:01 2007
From: nobody at sheep.berlios.de (mpn_uk)
Date: Tue, 16 Jan 2007 11:39:01 +0100 (CET)
Subject: [Zebra-checkins]
	zebra/src/java/zebra-core/src/test/com/anite/zebra/core/test
	SplitJoinTest.java, 1.2, 1.3
Message-ID: <20070116103901.9451EA7142@mail.berlios.de>

Update of /cvsroot/zebra/zebra/src/java/zebra-core/src/test/com/anite/zebra/core/test
In directory sheep:/tmp/cvs-serv6762/src/test/com/anite/zebra/core/test

Modified Files:
	SplitJoinTest.java 
Log Message:
Minor fix to synchronisation code. Problem where if an autorun task existed straight after a join task the engine could erroneously believe the join task never becomes unblocked.

Revised the SplitJoinTest unit test to ensure that it tests for this scenario

Index: SplitJoinTest.java
===================================================================
RCS file: /cvsroot/zebra/zebra/src/java/zebra-core/src/test/com/anite/zebra/core/test/SplitJoinTest.java,v
retrieving revision 1.2
retrieving revision 1.3
diff -C2 -d -r1.2 -r1.3
*** SplitJoinTest.java	25 Sep 2005 22:54:11 -0000	1.2
--- SplitJoinTest.java	16 Jan 2007 10:37:38 -0000	1.3
***************
*** 16,19 ****
--- 16,20 ----
  import com.anite.zebra.core.definitions.taskdefs.SplitTaskDef;
  import com.anite.zebra.core.factory.MockStateFactory;
+ import com.anite.zebra.core.state.MockTaskInstance;
  import com.anite.zebra.core.state.api.IProcessInstance;
  import com.anite.zebra.core.state.api.ITaskInstance;
***************
*** 39,42 ****
--- 40,46 ----
  		tdParallel2.addRoutingOut(tdJoin);
  		
+ 		AutoRunTaskDef tdEndTask = new AutoRunTaskDef(pd,"End Task");
+ 		tdJoin.addRoutingOut(tdEndTask);
+ 		
  		MockStateFactory msf = new MockStateFactory();
  		IEngine engine = new Engine(msf);
***************
*** 76,83 ****
  		 * 1 x parallel 2
  		 * 1 x join onwards
! 		 *  = 10
  		 */ 
  		
! 		assertEquals(10, msf.getAuditTrail().size());
  		assertEquals(4,msf.countFOE(processInstance));
  		// test to see all are marked as "completed" / "deleted" as appropriate
--- 80,88 ----
  		 * 1 x parallel 2
  		 * 1 x join onwards
! 		 * 1 x end task
! 		 *  = 11
  		 */ 
  		
! 		assertEquals(11, msf.getAuditTrail().size());
  		assertEquals(4,msf.countFOE(processInstance));
  		// test to see all are marked as "completed" / "deleted" as appropriate
***************
*** 88,92 ****
--- 93,142 ----
  		assertEquals(1,msf.countInstances(tdParallel2));
  		assertEquals(1,msf.countInstances(tdJoin));
+ 		assertEquals(1,msf.countInstances(tdEndTask, MockTaskInstance.STATE_DELETED));
+ 		
+ 		tdEndTask.setAuto(false);
+ 		
+ 		// rerun the test
+ 		msf = new MockStateFactory();
+ 		engine = new Engine(msf);
+ 		processInstance = engine.createProcess(pd);
+ 		engine.startProcess(processInstance);
+ 		taskInstances = processInstance.getTaskInstances();
+ 		ti = (ITaskInstance) taskInstances.iterator().next();
+ 		assertEquals(tdStart, ti.getTaskDefinition());
+ 		log.info("Transitioning Task " + ti.getTaskInstanceId());
+ 		engine.transitionTask(ti);
+ 		// test to see if we have the expected number of tasks - NONE
+ 		taskInstances = processInstance.getTaskInstances();
+ 		// just the "end task" should remain
+ 		assertEquals(1, taskInstances.size());
+ 		ti = (ITaskInstance) taskInstances.iterator().next();
+ 		engine.transitionTask(ti);
+ 		/* test to see if the audit log is the expected size -
+ 		 * 1 process
+ 		 * 1 start task
+ 		 * 1 split task
+ 		 * 2 parallel tasks
+ 		 * 1 join task
+ 		 *  = 6 objects
+ 		 * + 4 FOE
+ 		 * 1 x start to split
+ 		 * 1 x parallel 1
+ 		 * 1 x parallel 2
+ 		 * 1 x join onwards
+ 		 * 1 x end task 
+ 		 *  = 11
+ 		 */ 
  		
+ 		assertEquals(11, msf.getAuditTrail().size());
+ 		assertEquals(4,msf.countFOE(processInstance));
+ 		// test to see all are marked as "completed" / "deleted" as appropriate
+ 		assertEquals(1,msf.countInstances(pd));
+ 		assertEquals(1,msf.countInstances(tdStart));
+ 		assertEquals(1,msf.countInstances(tdSplit));
+ 		assertEquals(1,msf.countInstances(tdParallel1));
+ 		assertEquals(1,msf.countInstances(tdParallel2));
+ 		assertEquals(1,msf.countInstances(tdJoin));
+ 		assertEquals(1,msf.countInstances(tdEndTask, MockTaskInstance.STATE_DELETED));
  	}
  }



